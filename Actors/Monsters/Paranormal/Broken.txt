class PM_Broken : PMVoidMonsterBase
{

	int screems,WaitTillSHoot,Glide,Shooting,NADES,LOOKINGAT,vfgcharge;

	Default
	{
		PMMonsterBase.CodexLore "I failed.";
		Health 450;
		Radius 20;
		Height 56;
		Speed 8;
		PainChance 12;
		
		Monster;
		+FLOORCLIP;
		-NOCLIP;
		+MISSILEEVENMORE;
		+FLOORCLIP;
		+NOINFIGHTING;
		-Countkill;
		+THRUSPECIES;
		+SLIDESONWALLS;
		+DONTHARMCLASS;
		+DONTHARMSPECIES;
		+DONTFALL;
		+NOICEDEATH;
		+NOBLOOD;
		+DROPOFF;
		+NOBLOCKMONST;
		-BRIGHT;
		
		Obituary "%o was shot dead by %o.";
		DropItem "Clip", 100;
		Tag"BR?K?N";

		TeleFogSourceType "PM_SmallDemonicTeleportFog";
		TeleFogDestType "PM_SmallDemonicTeleportFog";
	}

	void BrokenAimLaser(Vector2 off = (0, 5))
		{
		  if (!Target)
			 {
				return;
			 }
			double sa = sin(Angle);
			double ca = cos(Angle);
			Vector2 relOff = (off.X * ca + off.Y * sa, off.X * sa - off.Y * ca);
			PM_SpawnBolt(self, Target.Vec3Offset(0,0,Target.Height-22),"ff2424",TexMan.CheckForTexture("RLSSA0"),maxDiff: 0,scale: 0.06, offset: (relOff.X, relOff.Y, 35),baseTime: 1,fadeTime: 0);
		}
	
	static const string TagNames[] =
	{
		"AAAAAAAAAAUUUUUUUUUUUGGGGGGGGGGHHHHHHHHHHHHHHHH!!!!!!!!!!!!!!!!!!!", "HELP", "HELP ME!!!!!!!!!!", "U*(#&@(*$REU*(QWUJ*(EU!J(@", "!", "@", "#", "$", "???", "?", "%*$()", "@#$(", "$@(#)%*", "^", "*", "??????????????????????", "BR?K?N", "VOID", "THEVOICESTHEVOICESTHEVOICESTHEVOICESTHEVOICES", "NOOOOOOO AAAAAAAAAHHHHHH OH GOD HELP ME",
		"FORGIVE ME!!!", "WHY?!?!?!", "EWJ*(IRJ@(*!*JU*(!@U*($UJ@*(RUM<*()<*Q*(EMHuX(", "you", "%o?", "PLEASE", "STOPITSTOPITSTOPITSTOPITSTOPITSTOPITSTOPITSTOPITSTOPITSTOPITSTOPITSTOPIT", "SUFFERSUFFER", "HE*WFMHUH!MUIEHMICW", "DISOMIUONUIDJ",
		"DISORDER", "(@_!)$*)!_@*($()*(~!@&%(*@Y*#&%^@*&!#%^T&R*@Y*&Y", "01010011 01000001 01010110 01000101", "01001000 01000101 01001100 01010000", "OHGODWHATDIDIEVEERDOTODESERVETHIS", "GETOUTOFMYHEADGETOUTOFMYHEADGETOUTOFMYHEADGETOUTOFMYHEAD",
		"GETOUTOFMYFUCKINGHEAD", "noNONonoNoNoNoNOnOnONONONONONONONONONO", "DIEDIEDIE", "I AM BEAUTIFUL", "IT'S ALL YOUR FAULT", "MAKE US WHOLE", "MAKE US W_H_O_L_E", "OH GOD WHY", "WHhYHWYHWYhwyhYWyWHYWHYhWYhwYHywHYWHYhwhyhwyHWYHWYwYHywHYWHYWHYWHYWHY"
		"KILL ME", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "YOU", "GET OUT!!!!!!!!!!!!!!!", "GETOUTGETOUTGETOUTGETOUT", "OH GOD HELP ME AHHHHHHHH AAAAAAAHHHHHHHHHHHHHHH", "THE SINS HAVE ARRIVED"
	};
	
	static const string TagNames1[] =
	{
		"St&RA*nd", "STRANDED", "St&*#ND*UA", "stda_RNA", "run", "STRANDED", "stranded", "Stranded", "ST_RAN_DED", "ST??ND?D", "who are you"
	};
	
	static const string TagNames2[] =
	{
		"MR*#INE", "MARINE", "M????E", "Ma0r-RI#N#E", "run", "why are you here"
	};
	
	override void PostBeginPlay()
	{
		super.PostBeginPlay();
		SetTag("Stranded Marine");
	}
	
	override void Tick()
	{
		super.tick();
		if (LOOKINGAT > 1 && LOOKINGAT < 10)
			if (getAge() % 2) SetTag(TagNames1[random(0, TagNames1.size() - 1)].." "..TagNames2[random(0, TagNames2.size() - 1)]);
		
		if (LOOKINGAT >= 10) SetTag(TagNames[random(0, TagNames.size() - 1)]..TagNames[random(0, TagNames.size() - 1)]..TagNames[random(0, TagNames.size() - 1)]..TagNames[random(0, TagNames.size() - 1)]);
	}
	
	States
	{
	
///////////////////////////////////////////////////////////////IDLE
	
	Spawn:
		VDGY A 1 {
					ThrustThing(random(-360,360),1,0,0); 
					A_SetScale(frandom(.85,1.10),frandom(.90,1.10));
					A_StartSound("Broken/Pain/1",CHAN_5,0,0.4);
					A_StopSound(CHAN_7);
					A_SetAngle(random(-10,10) - angle);
					A_LookEx(LOF_NOSOUNDCHECK);
					}
					
		VDGY A random(1,25) {}
		TNT1 A 0 A_Jump(30,"Wandering");
		Loop;
	Wandering:
		TNT1 A 0 
			{
				A_SetScale(1,1);
				A_StopSound(CHAN_7);
			}
		VDGY ABCDABCDABCDABCDABCDABCD 8
			{
				A_Wander();
				A_LookEx(LOF_NOSOUNDCHECK);
			}
		Goto Spawn;
		
///////////////////////////////////////////////////////////////BASIC MOVEMENT
		
		
	See:
		TNT1 A 0 { bBRIGHT=True; }
		VDGY A 1 {
					ThrustThing(random(-360,360),1,0,0); 
					//A_SetScale(frandom(.85,1.10),frandom(.90,1.10));
					A_SetScale(1,1);
					A_StopSound(CHAN_7);
					A_StartSound("Broken/Pain/1",CHAN_5,0,0.4);
					A_FaceTarget();
					}
		
		VDGY A random(1,5) {}
		TNT1 A 0 {LOOKINGAT++;}
		TNT1 A 0 A_Jumpif((LOOKINGAT >= 10),"SCreemloop");
		Loop;
		
		
	SCreemloop:
		TNT1 A 0 { bNOCLIP=True; }
		TNT1 AA 1 Light("PM_HorrorBlackflash")
		{
		A_SpawnParticleEx
	    (   
		 "000000",
		 TexMan.CheckForTexture("GNSMK0"),
		 style: STYLE_Normal,
		 flags: SPF_ROLL|SPF_RELATIVE,
		 lifetime: 3,
		 size: 200,
		 xoff: -1,
		 zoff: 40,
		 startalphaf: 1,
		 startroll: random(-180,180)
	    );
		A_SpawnParticleEx
	    (   
		 "",
		 TexMan.CheckForTexture("SCA1A0"),
		 style: STYLE_Add,
		 flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,
		 lifetime: 3,
		 size: 70,
		 xoff: 1,
		 zoff: 45,
		 startalphaf: 1,
		 startroll: 180
	    );
		}
		TNT1 A 0 A_StartSound("Broken/Loop",CHAN_7,CHANF_LOOP,0.65);
		TNT1 A 0 A_StartSound("Broken/Loop2",20,CHANF_LOOP,0.75);
		TNT1 A 0 A_StartSound("Broken/Loop3",21,CHANF_LOOP,0.85);
	SCREEM:
		"####" "#" 0 A_Jump(128,3);
		VDGY G 0;
		"####" "#" 0 A_Jump(256,2);
		VDGY H 0;
		"####" "#" 1 Light("PM_FastHorrorBlackflash"){
					ThrustThing(random(-360,360),1,0,0); 
					A_SetScale(frandom(.75,1.20),frandom(.80,1.20));
					A_StartSound("Broken/Pain/4",CHAN_5,0,frandom(0.5,1));
					//A_StartSound("Broken/SNAP",CHAN_6,0,1);
					A_FaceTarget();
					}
		//PLAY G random(1,5);
		"####" "#" 0 {screems++;}
		"####" "#" 0 A_Jumpif((screems >= 50),"Watch");
		Loop;
	Pain:
	    TNT1 A 0 A_Jump(65,"FakeDeath");
		TNT1 A 0 A_Recoil(56);
		TNT1 A 0 A_StartSound("Broken/Loop",CHAN_7,CHANF_LOOP,0.55);
		TNT1 A 0 A_StartSound("Broken/Loop2",20,CHANF_LOOP,0.65);
		TNT1 A 0 A_StartSound("Broken/Loop3",21,CHANF_LOOP,0.85);
		VDGY GHGHGH random(1,2) A_SetScale(frandom(.75,1.20),frandom(.80,1.20));
		Goto GlitchTP;
	FakeDeath:
		TNT1 A 0 { bBRIGHT=True;
		           bNOCLIP=True;
				   bTHRUACTORS=True;
				   bINVULNERABLE=True;
				   }
		TNT1 A 0 A_StartSound("Broken/Flinch");
		TNT1 A 0 A_StopSound(7);
		TNT1 A 0 A_StopSound(20);
		TNT1 A 0 A_StopSound(21);
		TNT1 A random(85,130);
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_Wander();
		TNT1 A 0 A_StartSound("Broken/Loop",CHAN_7,CHANF_LOOP,0.55);
		TNT1 A 0 A_StartSound("Broken/Loop2",20,CHANF_LOOP,0.65);
		TNT1 A 0 A_StartSound("Broken/Loop3",21,CHANF_LOOP,0.85);
		TNT1 A 0 { 
		bTHRUACTORS=False;
		bINVULNERABLE=False;
		}
	SCREEMtwo:
		"####" "#" 0 A_Jump(128,3);
		VDGY G 0;
		"####" "#" 0 A_Jump(256,2);
		VDGY H 0;
	
		"####" "#" 1 {
					ThrustThing(random(-360,360),1,0,0); 
					A_SetScale(frandom(.75,1.20),frandom(.80,1.20));
					A_StartSound("Broken/Flinch",CHAN_5,0,frandom(0.5,1));
					//A_StartSound("Broken/SNAP",CHAN_6,0,1);
					A_FaceTarget();
					}
		//PLAY G random(1,5);
		"####" "#" 0 {screems++;}
		"####" "#" 0 A_Jumpif((screems >= 10),"Watch");
		Loop;
		
		
	Watch:
		TNT1 A 0 A_Jumpif((target == null),2);
		TNT1 A 0 A_Jumpif((Distance3d(target) >= 500),"GlideForward");
		//TNT1 A 0 A_Jumpif((Distance3d(target) <= 50),"GlideBackward");
		
		TNT1 A 0 A_JumpIfHealthLower(200,"CHAOS");
		
		TNT1 A 0 {
					WaitTillSHoot	= 0;
					screems			= 0;
					Glide			= 0;
					shooting		= 0;
					NADES			= 0;
					}
		VDGY A 1 {
					ThrustThing(random(-360,360),2,0,0); 
					//A_SetScale(frandom(.75,1.20),frandom(.80,1.20));
					A_SetScale(1,1);
					
					A_StartSound("Broken/Pain/2",CHAN_5,0,1);
					A_FaceTarget();
					A_Chase(null,"Missile",CHF_FASTCHASE);
					}
		TNT1 A 0 A_Jump(1,"GlitchTP");
		Loop;
	   GlitchTP:
	    TNT1 A 1
		{
		 A_StartSound("Broken/TP",CHAN_5,0,1);
		 for (int a = 0;a<20;a++)
		 A_Wander();
		}
		VDGY A random(10,25) A_FaceTarget();
		Goto Watch;
	
///////////////////////////////////////////////////////////////ADVANCED MOVEMENT
	
	GlideForward:
		"####" "#" 0 A_Jump(128,3,5);
		VDGY O 0;
		"####" "#" 0 A_Jump(256,4);
		VDGY P 0;
		"####" "#" 0 A_Jump(256,2);
		VDGY Q 0;
		
		"####" "#" 1 Light("PM_FastHorrorBlackflash"){
					ThrustThing(random(-360,360),1,0,0);
					A_Recoil(-2);
					A_SetScale(frandom(.75,1.20),frandom(.80,1.20));
					A_StartSound("Broken/Pain/3",CHAN_5,0,frandom(0.5,1));
					//A_StartSound("Broken/SNAP",CHAN_6,0,1);
					A_FaceTarget();
					}
		
		//"####" "#" random(1,3);
					
		"####" "#" 0 {Glide++;}
		"####" "#" 0 A_Jumpif((Glide >= 25),"Watch");
		Loop;

///////////////////////////////////////////////////////////////BERSERK MODE
	
	CHAOS:
		TNT1 A 0 {
					A_setspeed(20);
				}
				
		TNT1 A 0 {
					WaitTillSHoot	= 0;
					screems			= 0;
					Glide			= 0;
					shooting		= 0;
					NADES			= 0;
				}
		TNT1 AAAAAAAAAAAAAAAA 1 A_Wander;
		TNT1 A 0 A_StartSound("Broken/TP",CHAN_5,0,1);
		
///////////////////////////////////////////////////////////////ATTACKS
		
	Missile:
	TNT1 A 0 A_StartSound("Broken/Pain/4",CHAN_VOICE,0,0.75);
	//TNT1 A 0 A_Jumpif((Distance3d(target) <= 175),"YEET");
	//TNT1 A 0 A_Jumpif((Distance3d(target) <= 200),"GlitchyShoot");
	//TNT1 A 0 A_Jump(256,"YEET");	
	/*YEET:
		VDGY A 1 {
					ThrustThing(random(-360,360),2,0,0); 
					//A_SetScale(frandom(.75,1.20),frandom(.80,1.20));
					A_SetScale(1,1);
					A_StartSound("Broken/Pain/2",CHAN_5,0,1);
					
					A_FaceTarget();
					//A_SetAngle(angle+30);
					//A_SpawnProjectile("PM_ZTrooperFragGrenade",33,0,random(-1,1),CMF_OFFSETPITCH,-12);
					//A_SpawnProjectile("PM_ZTrooperFragGrenade",33);
					A_SpawnProjectile("PM_ZTrooperFragGrenade",33,0,random(-30,30),CMF_OFFSETPITCH,random(-20,20));
					}
		
		//PLAY F random(2,10);
		TNT1 A 0 {NADES++;}
		TNT1 A 0 A_Jumpif((NADES >= random(1,3)),"Watch");
		Loop;*/
	GlitchyShoot:
		VDGY E 1 {
					ThrustThing(random(-360,360),1,0,0); 
					//A_SetScale(frandom(.75,1.20),frandom(.80,1.20));
					A_SetScale(1,1);
					A_FaceTarget();
					}
		TNT1 A 0
		{
		 if(random(1,5) == 1)
		 WaitTillShoot += 3;
		 else
		 WaitTillShoot++;
		}
		TNT1 A 0 A_JumpIf((WaitTillShoot >= 15),"SHOOT");
		Loop;
	SHOOT:
	    TNT1 A 0 A_Jump(86,"Shotgun");
		TNT1 A 0 A_Jump(65,"Plasma");
		TNT1 A 0 A_Jump(55,"Railgun");
		TNT1 A 0 A_Jump(20,"BFG");
	Isshooting:
		VDGY F random(1,5) Light("ShadowBall3")
		{
		 if(random(1,20) == 1)
		 SetStateLabel("ShootingSpam");
		 if(random(1,3) == 1)
		 { ThrustThing(randompick(0,128),20,0,0); }
		 ThrustThing(random(-360,360),1,0,0); 
		 A_SetScale(1,1);
		 A_StartSound("ZombieRifleDistant",CHAN_WEAPON);
		 A_StartSound("PistolZombie/Fire");
		 A_SpawnProjectile("PM_BrokenBulletTracer",33,5,random(-3, 3),CMF_AIMDIRECTION,pitch+frandom(-0.5,0.5));
		 A_SpawnItemEx("PM_SmallBulletCasing",-10,0,45,0,frandom(5,15),frandom(5,8),0,SXF_NOCHECKPOSITION);
		 A_FaceTarget(10,10,0,0);
	    }		
		TNT1 A 0 {Shooting++;}
		TNT1 A 0 
		{
		if(target && !CheckSight(target))
		SetStateLabel("Watch");
		if(random(1,15) == 1)
		SetStateLabel("GlitchTP");
		if(Shooting >= random(5,100))
		SetStateLabel("Watch");
		}
		Loop;
	ShootingSpam:
	    TNT1 A 0 { shooting = 0; }
	    TNT1 A 0 A_StartSound("Broken/Flinch");
	    VDGY GHGHGHGHGHGH random(1,3) A_SetScale(frandom(.75,1.20),frandom(.80,1.20));
	ShootingSpamLoop:
		VDGY F random(1,2) Light("ShadowBall3")
		{
		 if(shooting > 40)
		 SetStateLabel("ShootingSpamEnd");
		 if(random(1,3) == 1)
		 { ThrustThing(randompick(0,128),5,0,0); }
		 ThrustThing(random(-360,360),1,0,0); 
		 A_SetScale(1,1);
		 A_StartSound("ZombieRifleDistant",CHAN_WEAPON);
		 A_StartSound("PistolZombie/Fire");
		 A_SpawnProjectile("PM_BrokenBulletTracer",33,5,random(-3, 3),CMF_AIMDIRECTION,pitch+frandom(-0.4,0.4));
		 A_SpawnItemEx("PM_SmallBulletCasing",-10,0,45,0,frandom(5,15),frandom(5,8),0,SXF_NOCHECKPOSITION);
		 A_FaceTarget(0.5,3,0,0);
		 shooting++;
	    }
		Loop;
	ShootingSpamEnd:
	    VDGY F 2 A_FaceTarget(0.5,3,0,0);
		Goto GlitchTP;
	Shotgun:
		VDGY F 1 Light("ShadowBall2")
		   {
			ThrustThing(random(-360,360),1,0,0); 
			A_SetScale(1,1);
			A_FaceTarget();
			A_StartSound("GenericShotgunFire",CHAN_6);
			A_StartSound("ShotgunnerGunDistant",CHAN_WEAPON);	
			for(int a = 0;a<11;a++)
			A_SpawnProjectile("PM_BrokenPelletTracer",33,7,random(-12, 12), CMF_AIMDIRECTION,pitch+frandom(-3,3));
		   }
		
		VDGY E 1 {
					ThrustThing(random(-360,360),1,0,0); 
					//A_SetScale(frandom(.75,1.20),frandom(.80,1.20));
					A_StartSound("GenericShotgunFire",CHAN_6);
					A_StartSound("ShotgunnerGunDistant",CHAN_WEAPON);
					A_FaceTarget();
				 }
		VDGY E 1 {
					ThrustThing(random(-360,360),1,0,0); 
					//A_SetScale(frandom(.75,1.20),frandom(.80,1.20));
					A_StartSound("GenericShotgunFire",CHAN_6);
					A_StartSound("ShotgunnerGunDistant",CHAN_WEAPON);
					A_StartSound("GenericShotgunPump");
					A_FaceTarget();
				 }
		VDGY E 1 {
					ThrustThing(random(-360,360),1,0,0); 
					//A_SetScale(frandom(.75,1.20),frandom(.80,1.20));
					A_StartSound("GenericShotgunPump");
					A_FaceTarget();
				 }
		VDGY E 1 {
					ThrustThing(random(-360,360),1,0,0); 
					//A_SetScale(frandom(.75,1.20),frandom(.80,1.20));
					A_StartSound("GenericShotgunPump");
					A_FaceTarget();
				 }
		TNT1 AAA 0 A_SpawnItemEx("PM_ShellCasing",-10,0,32,0,frandom(5,15),frandom(5,8),0,SXF_NOCHECKPOSITION);
		TNT1 A 0 { if(random(1,4) == 1) SetStateLabel("GlitchTP"); }
		Goto Watch;
	Plasma:
		VDGY F 3 Light("ShadowBall3")
		{
		 if(random(1,5) == 1)
		 { ThrustThing(randompick(0,128),20,0,0); }
		 ThrustThing(random(-360,360),1,0,0); 
		 A_SetScale(1,1);
		 A_StartSound("Broken/Plasma");
		 A_SpawnProjectile("PM_BrokenPlasmaShot",33,5,random(-1,1),CMF_AIMDIRECTION,pitch+frandom(-0.5,0.5));
		 PM_LeadTarget(20);
	    }
		TNT1 A 0 A_Stop;
		TNT1 A 0 {Shooting++;}
		TNT1 A 0 
		{
		if(target && !CheckSight(target))
		SetStateLabel("Watch");
		if(Shooting >= random(15,120))
		SetStateLabel("Watch");
		}
		Loop;
	Railgun:
	    VDGY F 0 { pm_attackloop = 0; }
	RailgunLoop:
	    VDGY FFF random(1,3) Light("ShadowBall3")
		{
		 if(pm_attackloop >= 10)
		 SetStateLabel("RailgunLock");
		 if(random(1,3) == 1)
		 { ThrustThing(randompick(0,128),20,0,0); }
		 ThrustThing(random(-360,360),1,0,0);
		 A_FaceTarget();
		 BrokenAimLaser();
		 pm_attackloop++;
		}
		Loop;
	RailgunLock:
	    VDGY F random(10,15) Light("ShadowBall4") 
		{
		ThrustThing(random(-360,360),5,0,0);
		A_StartSound("Fiend/Lockon");
		}
		TNT1 A 0 A_Jump(45,"RailgunSpam");
		VDGY F random(1,5) Light("ShadowBall3") 
		{
		if(random(1,3) == 1)
		for(int i=random(1,2);i>0;i--)
		A_SpawnProjectile("PM_BrokenRailSlug",33,5,frandom(-3,3),CMF_OFFSETPITCH,frandom(-2,2));
		A_SpawnProjectile("PM_BrokenRailSlug",33,5,random(-1,1));
		}
		Goto Watch;
	RailgunSpam:
		TNT1 A 0 { pm_attackloop = 0; }
	RGSpamLoop:
	    VDGY F random(1,15) Light("ShadowBall3")
		{
		if(pm_attackloop >= 10)
		SetStateLabel("RGSpamEnd");
		if(random(1,5) == 1)
		A_SpawnProjectile("PM_BrokenRailSlug",33,5,frandom(-3,3),CMF_AIMDIRECTION|CMF_OFFSETPITCH,frandom(-2,2));
		A_SpawnProjectile("PM_BrokenRailSlug",33,5,random(-1,1),CMF_AIMDIRECTION);
		ThrustThing(random(-360,360),5,0,0);
		A_FaceTarget(0.7,3,0,0);
		pm_attackloop++;
		}
		Loop;
	RGSpamEnd:
		Goto GlitchTP;
	BFG:
	    TNT1 A 0 
		{ 
		 vfgcharge = 0; 
		 A_StartSound("Broken/VFGCharge",CHAN_5,CHANF_OVERLAP);
		}
	BFGCharge:
	    VDGY F 1 Light("BlackLight")
		{
		 if(vfgcharge >= 190)
		 SetStateLabel("BFGFireCheck");
		 if(random(1,4) == 1)
		 { ThrustThing(randompick(0,128),5,0,0); }
		 ThrustThing(random(-360,360),2,0,0);
		 A_QuakeEx(1,1,1,2,0,700);
		 A_SetScale(1,1);
		 A_SpawnItemEx("PM_BrokenBFGCharge",random(-2,5),random(-5,5),0);
		 A_FaceTarget();
		 A_SpawnParticleEx("000000",TexMan.CheckForTexture("GNSMK0"),style: STYLE_Normal,flags: SPF_ROLL|SPF_RELATIVE,lifetime: random(3,15),size: frandom(35,95),xoff: frandom(20,25),yoff: frandom(-8,8),zoff: frandom(16,22),velx: frandom(-1,1),vely: frandom(-1,1),velz: frandom(-1,1),startalphaf: 1,fadestepf: -1,sizestep: frandom(1,4.4),startroll: random(-180,180));
         A_SpawnParticleEx("ae1717",TexMan.CheckForTexture("GNSMK0"),style: STYLE_Add,flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,lifetime: random(1,15),size: frandom(15,50),xoff: frandom(-3.5,3.5),yoff: frandom(-3.5,3.5),velx: frandom(-1,1),vely: frandom(-1,1),velz: frandom(-1,1),startalphaf: 0.9,fadestepf: -1,sizestep: frandom(1,4.4),startroll: random(-180,180));
		 vfgcharge++;
		}
		Loop;
	BFGFireCheck:
	    TNT1 A 0 A_CheckSight("BFGHold");
		Goto BFGFire;
	BFGHold:
	    VDGY F 1 Light("Blacklight")
		{
		 if(target && CheckSight(target))
		 SetStateLabel("BFGRelease");
		 if(random(1,4) == 1)
		 { ThrustThing(randompick(0,128),5,0,0); }
		 ThrustThing(random(-360,360),2,0,0);
		 A_Recoil(-5);
		 A_QuakeEx(1,1,1,2,0,700);
		 A_SetScale(1,1);
		 A_SpawnItemEx("PM_BrokenBFGCharge",random(-2,5),random(-5,5),0);
		 A_FaceTarget();
		 A_SpawnParticleEx("000000",TexMan.CheckForTexture("GNSMK0"),style: STYLE_Normal,flags: SPF_ROLL|SPF_RELATIVE,lifetime: random(3,15),size: frandom(35,95),xoff: frandom(20,25),yoff: frandom(-8,8),zoff: frandom(16,22),velx: frandom(-1,1),vely: frandom(-1,1),velz: frandom(-1,1), startalphaf: 1, fadestepf: -1, sizestep: frandom(1,4.4),startroll: random(-180,180));
		}
		Loop;
	BFGRelease:
	    VDGY F random(5,10) Light("Blacklight")
		{
		A_Stop();
		A_FaceTarget();
		}
	    VDGY FFFFFFFFFFFF 1 Light("Blacklight") A_StartSound("Broken/VFGFire");
	BFGFire:
		VDGY F 1
		{
		for (int a=0;a<25;a++)
		A_SpawnParticleEx
        (
        "",
         TexMan.CheckForTexture("DTPRR0"),
         style: STYLE_Add,
         flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,
         lifetime: random(1,10),
         size: frandom(75,150),
         xoff: -22,
         startalphaf: -0.5,
         sizestep: frandom(0.0,3),
         startroll: random(-180,180)
        );
		A_Recoil(56);
		A_StartSound("Broken/VFGFire",CHAN_5);
		A_SpawnProjectile("PM_BrokenVFGBall",33,5,random(-1,1),CMF_AIMDIRECTION,pitch+frandom(-0.5,0.5));
		}
		VDGY F random(25,45);
		TNT1 A 0 A_Jump(85,"GlitchTP");
		Goto Watch;
	   
	
///////////////////////////////////////////////////////////////DEATH	

	XDeath:
	Death:
		TNT1 A 0 A_StopSounds(0,0);
		TNT1 A 0 A_StartSound("Broken/Die",20);
		TNT1 A 0 A_NoBlocking;
		TNT1 A 0 A_SpawnItemEx("PM_BrokenDeathAura",flags:SXF_SETMASTER);
	DeathScreem:
		"####" "#" 0 A_Jump(128,3);
		VDGY G 0;
		"####" "#" 0 A_Jump(256,2);
		VDGY H 0;
	
		"####" "#" 1 {
		            if(random(1,30) == 1)
					A_SpawnProjectile("PM_ZTrooperFragGrenade",33,0,random(-30,30),CMF_OFFSETPITCH,random(-20,20));
					ThrustThing(random(-360,360),1,0,0); 
					A_SetScale(frandom(.75,1.30),frandom(.80,1.30));
					A_StartSound("Broken/Pain/4",CHAN_5,0,frandom(0.5,1));
					//A_StartSound("Broken/SNAP",CHAN_6,0,1);
					A_FaceTarget();
					}
					
		//PLAY G random(1,3);
					
		"####" "#" 0 {screems++;}
		"####" "#" 0 A_Jumpif((screems >= 155),"gone");
		Loop;
	gone:
	    TNT1 A 0 A_RemoveChildren(1,RMVF_EVERYTHING);
	    TNT1 A 0 A_StopSound(20);
		TNT1 A 1;
		Stop;
		
///////////////////////////////////////////////////////////////RAISE
		
	Raise:
		VDGY QQPQQQPQQPQPPQPPQPPPOOPPPOOOPPOPPOOOOPO 1;
		
		//SSWV M 5;
		//SSWV LKJI 5;
		Goto See ;
	}
}

Class PM_BrokenDeathAura : Actor
{
 Default
 {
 +NOGRAVITY
 }
 States
 {
  Spawn:
   TNT1 A 1 
   {
   if(!master)
    Destroy();
   if(random(1,3) == 1)
   A_SpawnItemEx("PM_BrokenDeathAura2",xofs:random(-20,20),yofs:random(-20,20),zofs:random(-20,20));
   A_Warp(AAPTR_MASTER,0,0,0,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE);
   A_SetScale(frandom(0.20,0.50),frandom(0.30,0.50));
   }
   Loop;
  Death:
   VDG1 A 0;
   Stop;
 }
}

Class PM_BrokenDeathAura2 : Actor
{
 Default
 { 
 +BRIGHT
 +NOGRAVITY
 RenderStyle "Stencil";
 StencilColor "Black";
 }
 States
 {
 Spawn:
  TNT1 A 0 A_SetScale(frandom(0.40,0.50),frandom(0.30,0.50));
  TNT1 A 0 A_Jump(256,"S1","S2","S3","S4","S5");
  S1:
   VFOD S 0;
   Goto Go;
  S2:
   VFOD T 0;
   Goto Go;
  S3:
   VFOD U 0;
   Goto Go;
  S4:
   VFOD V 0;
   Goto Go;
  S5:
   VFOD W 0;
   Goto Go;
  Go:
   "####" "#" random(1,4);
   Stop;
 }
}

Class PM_BrokenBulletTracer : PM_BulletTracer
{
 Default
 {
 Alpha 1.5;
 }
 States
 {
 Spawn:
 TNT1 A 0;
 TNT1 A 0
        {
            A_SpawnParticleEx("000000",TexMan.CheckForTexture("GNSMK0"),style: STYLE_Add,flags: SPF_RELATIVE|SPF_ROLL,lifetime: random(10,250),size: frandom(10,50),xoff: -25,velx: frandom(0,2),vely: frandom(-0.4,0.4),velz: frandom(-0.4,0.7),startalphaf: frandom(0.3,0.5),fadestepf: -0.5,sizestep: frandom(0.0,1.4),startroll: random(-180,180),rollvel: frandom(-1,1));
            A_SpawnParticleEx("",TexMan.CheckForTexture("DTPRR0"),style: STYLE_Add,flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,lifetime: random(1,4),size: frandom(40,190),xoff: -22,startalphaf: 1.0,sizestep: frandom(0.0,3),startroll: random(-180,180));
            A_SpawnParticleEx("",TexMan.CheckForTexture("DTPRR0"),style: STYLE_Add,flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,lifetime: random(1,4),size: frandom(40,190),xoff: -22,startalphaf: 1.0,fadestepf: 0,sizestep: frandom(0.0,3),startroll: random(-180,180));
        }
	Go:
		TRCR A 1 BRIGHT A_Quake(1,4,0,100,0);
        TNT1 A 0 A_JumpIfTracerCloser(150,"Noise");
        Loop;
    Noise:
        TNT1 A 0 A_StartSound("PM/BulletWhiz",3,CHANF_DEFAULT,0.50);
    Cont:
        TRCR A 1 BRIGHT A_Quake(1,4,0,100,0);
        Loop;
  }
}

Class PM_BrokenPelletTracer : PM_PelletTracer
{
 Default
 {
 RenderStyle "Normal";
 Alpha 1.5;
 }
 States
 {
 Spawn:
 TNT1 A 0;
 TNT1 A 0
        {
           A_SpawnParticleEx("000000",TexMan.CheckForTexture("GNSMK0"),style: STYLE_Add,flags: SPF_RELATIVE|SPF_ROLL,lifetime: random(10,250),size: frandom(10,50),xoff: -25,velx: frandom(0,2),vely: frandom(-0.4,0.4),velz: frandom(-0.4,0.7),startalphaf: frandom(0.3,0.5),fadestepf: -0.5,sizestep: frandom(0.0,1.4),startroll: random(-180,180),rollvel: frandom(-1,1));
           A_SpawnParticleEx("",TexMan.CheckForTexture("DTPRR0"),style: STYLE_Add,flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,lifetime: random(1,4),size: frandom(40,190),xoff: -22,startalphaf: 1.0,sizestep: frandom(0.0,3),startroll: random(-180,180));
           A_SpawnParticleEx("",TexMan.CheckForTexture("DTPRR0"),style: STYLE_Add,flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,lifetime: random(1,4),size: frandom(40,190),xoff: -22,startalphaf: 1.0,fadestepf: 0,sizestep: frandom(0.0,3),startroll: random(-180,180));
        }
	Go:
		TRCR A 1 BRIGHT A_Quake(1,4,0,100,0);
        TNT1 A 0 A_JumpIfTracerCloser(150,"Noise");
        Loop;
    Noise:
        TNT1 A 0 A_StartSound("PM/BulletWhiz",3,CHANF_DEFAULT,0.50);
    Cont:
        TRCR A 1 BRIGHT A_Quake(1,4,0,100,0);
        Loop;
  }
}

Class PM_BrokenPlasmaShot : Actor
{
 Default
 {
  Radius 6;
  Height 6;
  Speed 20;
  DamageFunction (15);
  Projectile;
  SeeSound "";
  DeathSound "GenericPlasmaExp";
  Decal "PM_HellPlasmaScorch";
  +ROLLSPRITE
  +ROLLCENTER
  +SEEKERMISSILE
  Renderstyle "Add";
  Scale 0.15;
  Alpha 0.20;
 }
 
 override void Tick()
 {
 Super.Tick();
  {
        if(!IsFrozen())
		{
         A_SetRoll(random(0,259),SPF_INTERPOLATE);
	      for(int a = 0;a<2;a++)
		  {
		    A_SpawnParticleEx("000000",TexMan.CheckForTexture("GNSMK0"),style: STYLE_Normal,flags: SPF_ROLL|SPF_RELATIVE,lifetime: random(1,3),size: frandom(20,40),xoff: frandom(-8,8),yoff: frandom(-8,8),zoff: frandom(-1,1),velx: frandom(-1,1),vely: frandom(-1,1),velz: frandom(-1,1),startalphaf: 1,fadestepf: -1,sizestep: frandom(1,4.4),startroll: random(-180,180));
            A_SpawnParticleEx("ae1717",TexMan.CheckForTexture("GNSMK0"),style: STYLE_Add,flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,lifetime: random(1,4),size: frandom(15,25),xoff: frandom(-3.5,3.5),yoff: frandom(-3.5,3.5),velx: frandom(-1,1),vely: frandom(-1,1),velz: frandom(-1,1),startalphaf: 0.9,fadestepf: -1,sizestep: frandom(1,4.4),startroll: random(-180,180));
		  }
		}
  }
 }

  States
  {
  Spawn:
     TNT1 A 0;
     TNT1 A 0 { A_SpawnParticleEx("",TexMan.CheckForTexture("DTPRR0"),style: STYLE_Add,flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,lifetime: random(1,10),size: frandom(75,90),xoff: -22,startalphaf: -0.5,sizestep: frandom(0.0,3),startroll: random(-180,180)); }
  Go:
     DTPR RRRR 1 Bright Light("Shadowball");
     TNT1 A 0 A_JumpIfTracerCloser(250,"Noise");
    Loop;
   Noise:
    TNT1 A 0 A_StartSound("PM/PlasmaWhiz",3,CHANF_DEFAULT,0.75);
  Cont:
    DTPR RRRR 1 Bright Light("Shadowball");
	Loop;
  Death:
	TNT1 A 0
	{
	    for (int a = 0;a<10;a++)
		A_SpawnParticleEx("000000",TexMan.CheckForTexture("GNSMK0"),style: STYLE_Normal,flags: SPF_ROLL|SPF_RELATIVE,lifetime: random(1,20),size: frandom(20,30),xoff: frandom(-8,8),yoff: frandom(-8,8),zoff: frandom(0,5),velx: frandom(-5,5),vely: frandom(-5,5),velz: frandom(-5,5),startalphaf: 1,fadestepf: -1,sizestep: frandom(1,4.4),startroll: random(-180,180));
        A_SpawnParticleEx("ae1717",TexMan.CheckForTexture("GNSMK0"),style: STYLE_Add,flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,lifetime: random(1,20),size: frandom(15,25),xoff: frandom(-3.5,3.5),yoff: frandom(-3.5,3.5),velx: frandom(-5,5),vely: frandom(-5,5),velz: frandom(-5,5),startalphaf: 0.9,fadestepf: -1,sizestep: frandom(1,4.4),startroll: random(-180,180));
    }
	TNT1 AAAAA 3 Bright Light("Shadowball2");
    Stop;
  }
}

Class PM_BrokenRailSlug : Actor
{
 Default
 {
  Radius 6;
  Height 6;
  Speed 40;
  DamageFunction 30;
  Projectile;
  SeeSound "Broken/Railgun";
  DeathSound "HellKnight/BallImpact";
  Decal "PM_HellPlasmaScorch";
  +ROLLSPRITE
  +ROLLCENTER
  Renderstyle "Add";
  Scale 0.65;
  Alpha 0.75;
 }
 
  void PM_BrokenRailgunParticles()
  {
		A_SpawnParticleEx("ae1717",TexMan.CheckForTexture("GNSMK0"),style: STYLE_Normal,flags: SPF_ROLL|SPF_RELATIVE,lifetime: random(1,60),size: frandom(10,15),xoff: frandom(-0.9,0.9),yoff: frandom(-0.9,0.9),zoff: frandom(-0.9,0.9),velx: frandom(-0.3,0.3),vely: frandom(-0.3,0.3),velz: frandom(-0.3,0.3),startalphaf: 1,fadestepf: -1,sizestep: frandom(-0.2,-0.5),startroll: random(-180,180));
        A_SpawnParticleEx("ae1717",TexMan.CheckForTexture("GNSMK0"),style: STYLE_Add,flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,lifetime: random(1,45),size: frandom(20,40),xoff: frandom(-2.0,2.0),yoff: frandom(-2.0,2.0), velx: frandom(-0.3,0.3), vely: frandom(-0.3,0.3),velz: frandom(-0.3,0.3), startalphaf: 0.9,fadestepf: -1,sizestep: frandom(-0.1,-0.3),startroll: random(-180,180));
  }

  States
  {
  Spawn:
  TNT1 A 0;
  TNT1 A 0
  {
      A_SpawnParticleEx("",TexMan.CheckForTexture("DTPRR0"),style: STYLE_Add,flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,lifetime: random(1,15),size: frandom(80,140),xoff: -22,startalphaf: -0.5,sizestep: frandom(0.0,3),startroll: random(-180,180));
	for(int i=random(5,9);i>0;i--)
	  A_SpawnParticleEx("ae1717",TexMan.CheckForTexture("GNSMK0"),style: STYLE_Add,flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,lifetime: random(1,120),size: frandom(10,80),xoff: -22,velx: frandom(1,10),vely: frandom(-2,2),velz: frandom(-1,1),startalphaf: frandom(0.45,0.95),fadestepf: -1,sizestep: frandom(0.3,0.9),startroll: random(-180,180));
	for(int i=random(7,15);i>0;i--)
      A_SpawnParticleEx("",TexMan.CheckForTexture("SPKRA0"),style: STYLE_Add,flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,lifetime: random(1,120),size: frandom(0.1,15),xoff: -22,velx: frandom(1,7),vely: frandom(-1,1),velz: frandom(-1,1),accelz: frandom(-0.0,-0.5),startalphaf: 1.0,fadestepf: -0.5,sizestep: -0.2,startroll: random(-180,180));
  }
  Go:
    TRCR BBBB 1 Bright Light("Shadowball") A_Quake(1,4,0,100,0);
    Loop;
  Death:
	TNT1 AAA 1 Light("ShadowBall4") A_SpawnProjectile("PM_RFireBallExplode",0,0,random(0,360),2,random(0,360));
	TNT1 AA 4;
    Stop;
  }
}

Class PM_BrokenVFGBall : Actor
{
 protected int time;
 Default
 {
  Radius 15;
  Height 15;
  Speed 8;
  DamageFunction (65);
  DamageType "Ice";
  Projectile;
  SeeSound "Broken/VFG";
  DeathSound "";
  Decal "";
  +SEEKERMISSILE
  Renderstyle "Add";
  XScale 0.55;
  YScale 0.35;
 }
 override void Tick()
 {
  Super.Tick();
  {
        if(!IsFrozen())
		{
		  A_SpawnParticleEx("000000",TexMan.CheckForTexture("GNSMK0"),style: STYLE_Normal,flags: SPF_ROLL|SPF_RELATIVE,lifetime: random(3,20),size: frandom(95,150),xoff: frandom(-8,8),yoff: frandom(-8,8),zoff: frandom(0,5),velx: frandom(-1,1),vely: frandom(-1,1),velz: frandom(-1,1),startalphaf: 0.95,fadestepf: -1,sizestep: frandom(1,4.4),startroll: random(-180,180));
          A_SpawnParticleEx("ae1717",TexMan.CheckForTexture("GNSMK0"),style: STYLE_Add,flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,lifetime: random(3,20),size: frandom(40,45),xoff: frandom(-3.5,3.5),yoff: frandom(-3.5,3.5),velx: frandom(-1,1),vely: frandom(-1,1),velz: frandom(-1,1),startalphaf: 0.85,fadestepf: -1,sizestep: frandom(1,4.4),startroll: random(-180,180));
		}
  }
 }
  States
  {
  Spawn:
    TNT1 A 0;
	TNT1 A 0 
	{
	A_StartSound("Broken/VFGLoop",CHAN_5,CHANF_LOOP,0.35);
	A_StartSound("Skulker/Phase",CHAN_7,CHANF_LOOP,0.65);
	}
  Spawn2:
    VDG1 AABBCCDDEEFFGGHHIIJJKKLLMMNNOOPPQQRRSSTTUUVVWWXXYYZZ 2 Bright Light("ShadowBall3")
	{
	  if(time > 80)
	     SetStateLabel("Charge");
	  if(tracer)
	     A_SpawnProjectile("PM_BrokenVFGSoul",0,0,frandom(-10,10),CMF_TRACKOWNER|CMF_OFFSETPITCH,frandom(-10,10),AAPTR_TRACER);
	  else
	     A_SpawnProjectile("PM_BrokenVFGSoul",0,0,frandom(-10,10),CMF_AIMDIRECTION|CMF_OFFSETPITCH,frandom(-10,10),AAPTR_TRACER);
	  A_SeekerMissile(1,1,SMF_CURSPEED|SMF_PRECISE);
	  A_QuakeEx(1,1,1,2,0,700);
	  time++;
	}
	VDG2 AABBCCDD 2 Bright Light("ShadowBall3")
	{
	  if(time >= 80)
	     SetStateLabel("Charge");
	  if(tracer)
	     A_SpawnProjectile("PM_BrokenVFGSoul",0,0,frandom(-10,10),CMF_TRACKOWNER|CMF_OFFSETPITCH,frandom(-10,10),AAPTR_TRACER);
	  else
	     A_SpawnProjectile("PM_BrokenVFGSoul",0,0,frandom(-10,10),CMF_AIMDIRECTION|CMF_OFFSETPITCH,frandom(-10,10),AAPTR_TRACER);
	  A_SeekerMissile(1,1,SMF_CURSPEED|SMF_PRECISE);
	  A_QuakeEx(1,1,1,2,0,700);
	  time++;
	}
	Loop;
  Charge: //die
    TNT1 A 0;
	TNT1 A 0 A_StartSound("Broken/VFGScream",CHAN_6,CHANF_OVERLAP,1); 
  Go:
    VDG1 AABBCCDDEEFFGGHHIIJJKKLLMMNNOOPPQQRRSSTTUUVVWWXXYYZZ 4 Bright Light("ShadowBall3") A_ScaleVelocity(1.2);
	VDG2 AABBCCDD 4 Bright Light("ShadowBall4");
	Loop;
  Death:
    TNT1 A 0 A_StopSounds(0,0);
	TNT1 A 0 A_StartSound("Broken/VFGExp",CHAN_6,CHANF_OVERLAP,1);
	TNT1 A 0
	{
	 A_QuakeEx(5,5,5,60,0,1500);
	 for (int a=0;a<15;a++)
	 {
       A_SpawnParticleEx("ae1717",TexMan.CheckForTexture("GNSMK0"),style: STYLE_Add,flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,lifetime: random(50,100),size: frandom(40,105),xoff: frandom(-3.5,3.5),yoff: frandom(-3.5,3.5),velx: frandom(-3,3),vely: frandom(-3,3),velz: frandom(-3,3),startalphaf: 0.75,fadestepf: -0.15,sizestep: frandom(1,4.4),startroll: random(-180,180));
	   A_SpawnItemEx("PM_RedLightningVFX",frandom(-20,20),frandom(-20,20),frandom(-20,20),random(-3,3),random(-3,3),random(-6,6));
	 }
	 for(int a=0;a<3;a++)
	   A_SpawnItemEx("PM_ExplosionLongerSmoke",frandom(-5,5),frandom(-5,5),frandom(-5,5),random(-3,3),random(-3,3),random(0,2));
	 for(int a=0;a<7;a++)
	   A_SpawnItemEx("PM_RFireBallExplode",0,0,0,random(-5,5),random(-5,5),random(-5,5));
    }
	TNT1 AAAAAAA 5 Bright Light("Shadowball3");
	TNT1 AAAAA 4 Light("Shadowball4");
	TNT1 AAA 3 Light("ShadowBall5");
    Stop;
  }
}

Class PM_BrokenVFGSoul : Actor
{
    Default
	{
    Radius 6;
    Height 8;
    Speed 22;
    DamageFunction (random(5,8));
    RenderStyle "Add";
    Alpha 1;
	Scale 0.25;
	SeeSound "HeresyLord/BarrageRCharge";
    DeathSound "Abhor/SoulExp";
	DamageType "Ice";
	+SEEKERMISSILE
    Projectile;
	}
	
	override void Tick()
	{
	 Super.Tick();
	 {
	  if(!IsFrozen())
	  {
	    for(int a = 0;a<2;a++)
		{
		  A_SpawnParticleEx("000000",TexMan.CheckForTexture("GNSMK0"),style: STYLE_Normal,flags: SPF_ROLL|SPF_RELATIVE,lifetime: random(1,3),size: frandom(10,13),xoff: frandom(-8,8),yoff: frandom(-8,8),zoff: frandom(-1,1),velx: frandom(-1,1),vely: frandom(-1,1),velz: frandom(-1,1),startalphaf: 1,fadestepf: -1,sizestep: frandom(1,4.4),startroll: random(-180,180));
          A_SpawnParticleEx("ae1717",TexMan.CheckForTexture("GNSMK0"),style: STYLE_Add,flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,lifetime: random(1,4),size: frandom(3,5),xoff: frandom(-3.5,3.5),yoff: frandom(-3.5,3.5),velx: frandom(-1,1),vely: frandom(-1,1),velz: frandom(-1,1),startalphaf: 0.9,fadestepf: -1,sizestep: frandom(1,4.4),startroll: random(-180,180));
		}
	   }
  }
 }
  States
  {
  Spawn:
    TNT1 A 1 Light("ShadowBall");
	TNT1 A 0 A_Jump(3,"Scare1","Scare2","Scare3","Scare4","Scare5","Scare6");
    Loop;
  Scare1:
	SCA1 A 2 bright Light("ShadowBall");
	Goto Spawn;
  Scare2:
	SCA1 C 2 bright Light("ShadowBall");
	Goto Spawn;
  Scare3:
	SCA1 D 2 bright Light("ShadowBall");
	Goto Spawn;
  Scare4:
	SCA1 E 2 bright Light("ShadowBall");
	Goto Spawn;
  Scare5:
	SCA1 F 2 bright Light("ShadowBall");
	Goto Spawn;
  Scare6:
	SCA1 G 2 bright Light("ShadowBall");
	Goto Spawn;
  Death:
	TNT1 A 0;
	TNT1 A 0 A_SpawnItemEx("PM_DarkExpSmoke",0,0,1,random(-3,3),random(-3,3),random(0,2));
	TNT1 AAAA 0 A_SpawnItemEx("PM_VoidSmoke",0,0,20,random(-1,1),random(-1,1),random(-1,1),random(1,360));
    TNT1 AAAA 2 Light("SmallBlacklight") A_SpawnItemEx("PM_VoidSmoke",0,0,20,random(-1,1),random(-1,1),random(-1,1),random(1,360));
    Stop;
  }
}

Class PM_BrokenBFGCharge : Actor
{
 Default
 {
 +NOINTERACTION
 +CLIENTSIDEONLY
 }
 States
 {
  Spawn:
  TNT1 A 0;
  TNT1 A 0 A_Jump(65,"Spawn2","Spawn3");
  TNT1 A 5 Light("ShadowBall2");
  Stop;
  Spawn2:
   TNT1 A 5 Light("ShadowBall4");
  Stop;
  Spawn3:
   TNT1 A 5 Light("ShadowBall5");
  Stop;
 }
}

