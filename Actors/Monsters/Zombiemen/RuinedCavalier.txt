Class PM_RuinedCavalier : PMWarMonsterBase
{
	Default
	{
	PMMonsterBase.CodexLore
	"Ever since the beginning of time, War has waited. Ever since the first human killed his fellow man for conquest, War has collected.
    After man's countless wars across millennia, War has amassed its trophy; the damned souls of soldiers across time. They fight amongst each other endlessly in Hell, mindlessly, kept as imprisoned parodies of their former selves.
    Now that Earth's reckoning has come to pass, War's horde -mankind's past sins of the battlefield- has been unleashed upon the world.
	
	Acts like a combination of a ghost and a medieval knight. May stalk you to land a perfect blow. Will emit plasmatic sword slashes. Sometimes they might do a war cry to empower the demons nearby it into battle, granting them a little bit of firerate and big resistance.";
	Health 100;
	Radius 20;
    Height 56;
    Speed 9;
    PainChance 100;
	MeleeRange 120;
	MeleeThreshold 15;
    Mass 200;
	Alpha 0.8;
    MONSTER;
    +FloorClip
	+VISIBILITYPULSE
	+LOOKALLAROUND
	+SLIDESONWALLS
	+HARMFRIENDS
	+DOHARMSPECIES
	+GHOST
	+NOFEAR
	MinMissileChance 400;
	Bloodtype "PM_BlackBloodBase";
	Species "Zombie";
	Tag "Ruined Cavalier";
    Obituary "%o faced the horrors of war.";
    SeeSound "RCavalier/Sight";
	DeathSound "RCavalier/Death";
	StencilColor "7a5023";
	ActiveSound "";
    DropItem "Clip";
    Decal "Bulletchip";
	TeleFogSourceType "PM_PossessedTeleportFog";
	TeleFogDestType "PM_PossessedTeleportFog";
	}
	
	override void PostBeginPlay()
	{
	 tex[0] = TexMan.CheckForTexture("DUSTC0",TexMan.Type_Sprite);
	 tex[1] = TexMan.CheckForTexture("GNSMK0",TexMan.Type_Sprite);
	}
	
	TextureID tex[2];
	
	actor LastTarget;
	int warcrycool;
	
	override void Tick()
	{
		super.Tick();
		if (warcrycool >= 0) warcrycool--;
	}
	
	void PM_CavalierEffects()
	{
		A_SpawnParticleEx("000000",TexMan.CheckForTexture("GNSMK0"),style: STYLE_Normal,flags: SPF_ROLL|SPF_RELATIVE,lifetime: random(10,70),size: frandom(35,80),xoff: frandom(-8,8),yoff: frandom(-8,8),zoff: frandom(0,50),velx: frandom(-1,1),vely: frandom(-1,1),velz: frandom(-1,1),startalphaf: frandom(0,0.5),fadestepf: -1,sizestep: frandom(4,-4),startroll: random(-180,180));
		A_SetScale(frandom(.94,1.06),frandom(.96,1.04));
	}
	
	void PM_CavalierWither()
	{
		A_SpawnParticleEx("545454", tex[1], style: STYLE_None, flags: SPF_ROLL|SPF_RELATIVE, lifetime: random(50,160), size: frandom(10,100), xoff: frandom(-20,20), yoff: frandom(-20,20), velx: frandom(-1,1), vely: frandom(-1,1), velz: frandom(0,2), startalphaf: frandom(0.2,0.95), sizestep: frandom(-0.8,0.8), startroll: random(-180,180), rollvel: frandom(-0.3,0.3));
		A_SpawnParticleEx("848484", tex[0], style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL, lifetime: random(90,270), size: frandom(1,22), xoff: random(-25,25), yoff: random(-25,25), zoff: 5, velx: frandom(-1,1), vely: frandom(-1,1), velz: frandom(0.3,4), startalphaf: 1.0, fadestepf: -0.05, sizestep: frandom(-0.1,-1), startroll: random(-180,180), rollvel: random(-4,4));
		A_SpawnParticleEx("848484", tex[0], style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL, lifetime: random(90,270), size: frandom(0.5,15), xoff: random(-25,25), yoff: random(-25,25), zoff: 5, velx: frandom(-1,1), vely: frandom(-1,1), velz: frandom(0.3,4), startalphaf: 1.0, fadestepf: -0.05, sizestep: frandom(-0.1,-1), startroll: random(-180,180), rollvel: random(-4,4));
	}
	
	States
	{
	Spawn:
		KNOH N 0 NoDelay;
		KNOH N 0 { if (!random(0, 1)) { bVISIBILITYPULSE = false; A_FadeOut(1, 0|FTF_CLAMP); } }
		Goto Idle;
	Idle:
		KNOH N 10 PM_Look();
		Loop;
	Look:
		KNOH N 1
		{
			if (alpha <= 0)
			{
				A_Recoil(-2);
				PM_LookingForPlayer();
			}
			PM_LookingForPlayer();
		}
		KNOH N 0 { if (target && distance3D(target) < 145 && CheckSight(target)) SetStateLabel("Spotted"); }
		KNOH N 0 A_JumpIfTargetinLOS("Spotted",128,JLOSF_DEADNOJUMP);
		Loop;
	Spotted:
		KNOH N 0 { if (target) { LastTarget = target; } if (alpha == 1) bVISIBILITYPULSE = true; }
		KNOH N 0 { if (alpha <= 0) { A_Stop(); A_StartSound("RCavalier/Ghost", 14); SetStateLabel("FadeIn"); } else PM_AlertSound(); }
		Goto See;
	See:
		KNOH AAABBBCCCDDD 2
		{
			if(!CheckProximity("PM_RuinedCavalier",500,4) || !CheckProximity("PMMonsterBase",500,15))
			{
				A_Recoil(-.85);
				A_FaceTarget(3, 3);
			}
			else A_Recoil(-.35);
			
			PM_CavalierEffects();
			A_Chase();
		}
		Loop;
	Melee:
		KNOH E 1
		{
			if (!random(0, 12))
			{
				BlockThingsIterator t = BlockThingsIterator.Create(self, 600);
				actor m;
				
				while(t.Next())
				{
					m = t.Thing;
					if (!m || !m.bISMONSTER || !CheckSight(m) || Distance3D(m) > 500 ||  m.Health > 1000 || m.bBOSS) return;
					if (m.Health > 0 && m != self) SetStateLabel("WarCry");
					else continue;
				}
			}
			
			A_FaceTarget();
			//A_StartSound("RCavalier/GhostAppear", 14);
			A_StartSound("RCavalier/Sight", 14, pitch: frandom(1.4, 1.6));
			A_SpawnParticleEx("", TexMan.CheckForTexture("DTPRO0"), STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, 20, 150, xoff: 1, yoff: -3, zoff: 48, sizestep: -35, startroll: random(-180,180), rollvel: frandom(-40, 40));
		}
		KNOH EEEEEEEEEE 1
		{
			PM_CavalierEffects();
			A_Recoil(-0.1);
			A_FaceTarget();
		}
		KNOH F 1
		{
			PM_CavalierEffects();
			A_Recoil(-random(15, 25));
			A_SpawnParticleEx("", TexMan.CheckForTexture("DTPRO0"), STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, 40, 40, xoff: 1, yoff: -3, zoff: 48, sizestep: -5, startroll: random(-180,180), rollvel: frandom(-40, 40));
			A_FaceTarget();
			A_StartSound("RCavalier/Swing", 13, pitch: frandom(0.8, 0.6));
		}
		KNOH FFFF 1
		{
		PM_CavalierEffects();
		A_SpawnParticleEx("", TexMan.CheckForTexture("DTPRO0"), STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, 40, 40, xoff: 1, yoff: -3, zoff: 48, sizestep: -5, startroll: random(-180,180), rollvel: frandom(-40, 40));
		}
		KNOH GGGG 1
		{
			PM_CavalierEffects();
			A_SpawnParticleEx("", TexMan.CheckForTexture("DTPRO0"), STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, 40, 40, xoff: 1, yoff: -3, zoff: 48, sizestep: -5, startroll: random(-180,180), rollvel: frandom(-40, 40));
			A_SpawnItemEx("PM_GenericPhaseGhost",zofs:6,flags:SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE|SXF_TRANSFERSTENCILCOL);
			A_CustomMeleeAttack((6));
		}
		KNOH GGGGGGGG 1
		{
			PM_CavalierEffects();
			A_SpawnParticleEx("", TexMan.CheckForTexture("DTPRO0"), STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, 40, 40, xoff: 1, yoff: -3, zoff: 48, sizestep: -5, startroll: random(-180,180), rollvel: frandom(-40, 40));
			A_SpawnItemEx("PM_GenericPhaseGhost",zofs:6,flags:SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE|SXF_TRANSFERSTENCILCOL);
			A_Recoil(-0.5);
		}
		KNOH G 0 A_Jump(15, "Retreat");
		KNOH G 0 A_Jump(80, "Recoil");
		Goto See;
	WarCry:
		KNOH H 0 { if (warcrycool >= 0) SetStateLabel("Retreat"); else bNOPAIN = true; damagefactor = 0.5; }
		KNOH H 25
		{
			A_FaceTarget();
			A_StartSound("RCavalier/GhostAppear", 14);
			A_SpawnParticleEx("", TexMan.CheckForTexture("DTPRO0"), STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, 20, 150, xoff: 1, yoff: -3, zoff: 48, sizestep: -35, startroll: random(-180,180), rollvel: frandom(-40, 40));
		}
		KNOH H 1 { warcrycool = random(2000, 3000); A_StartSound("RCavalier/WarCry", CHAN_6); }
		KNOH EEEEEEEEEEEEEEEEEEEEEE 1
		{
			A_FaceTarget();
			Radius_Quake(4, 2, 0, 10, 0);
			A_SpawnParticleEx("", TexMan.CheckForTexture("DTPRO0"), STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, 20, 80, xoff: 1, yoff: -3, zoff: 48, sizestep: -35, startroll: random(-180,180), rollvel: frandom(-40, 40));
		}
		KNOH E 0
		{
			A_StartSound("RCavalier/Buff", 14);
			A_RadiusGive("PM_CavilerEnthusiasmBuffGiver", 500, RGF_MONSTERS|RGF_CUBE|RGF_NOSIGHT);
		}
		KNOH EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 1
		{
			A_FaceTarget();
			Radius_Quake(4, 2, 0, 10, 0);
			A_SpawnParticleEx("", TexMan.CheckForTexture("DTPRO0"), STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, 20, 80, xoff: 1, yoff: -3, zoff: 48, sizestep: -35, startroll: random(-180,180), rollvel: frandom(-40, 40));
		}
		KNOH E 0 { bNOPAIN = false; damagefactor = 1; }
		Goto See;
	Recoil:
		KNOH E 1
		{
			A_FaceTarget();
			A_Recoil(random(10, 40));
			VelFromAngle(frandom(0, 40), angle + randompick(-90, 90));
		}
		KNOH EEEEEEEEEEEEEEEEEEE 1
		{
			A_FaceTarget();
			A_SpawnItemEx("PM_GenericPhaseGhost",zofs:6,flags:SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE|SXF_TRANSFERSTENCILCOL);
		}
		Goto See;
	FadeIn:
		KNOH NNNNNNNNNNNNNNN 1 { A_FaceTarget(); A_FadeIn(0.075); }
		KNOH N 1 { bVISIBILITYPULSE = true; PM_AlertSound(); }
		Goto See;
	Missile:
		KNOH E 0
		{
			if (!random(0, 7))
			{
				BlockThingsIterator t = BlockThingsIterator.Create(self, 600);
				actor m;
				
				while(t.Next())
				{
					m = t.Thing;
					if (!m || !m.bISMONSTER || !CheckSight(m) || Distance3D(m) > 500 ||  m.Health > 1000 || m.bBOSS) return;
					if (m.Health > 0 && m != self) SetStateLabel("WarCry");
					else continue;
				}
			}
		}
		KNOH E 1
		{
			PM_CavalierEffects();
			A_FaceTarget();
			A_StartSound("RCavalier/Sight", 14, pitch: frandom(1.4, 1.6));
			A_SpawnParticleEx("", TexMan.CheckForTexture("DTPRO0"), STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, 20, 150, xoff: 1, yoff: -3, zoff: 48, sizestep: -35, startroll: random(-180,180), rollvel: frandom(-40, 40));
		}
		KNOH EEEEEEEEEEEEEE 1
		{
			PM_CavalierEffects();
			A_Recoil(-0.1);
			A_FaceTarget();
		}
		KNOH F 1
		{
			PM_CavalierEffects();
			A_StartSound("Whiplash/MeleeSwing", 15, CHANF_OVERLAP, pitch: 0.65);
			A_StartSound("Whiplash/Blades", 15, CHANF_OVERLAP, pitch: 0.65);
			A_Recoil(-5);
			A_SpawnParticleEx("", TexMan.CheckForTexture("DTPRO0"), STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, 40, 40, xoff: 1, yoff: -3, zoff: 48, sizestep: -5, startroll: random(-180,180), rollvel: frandom(-40, 40));
			A_FaceTarget();
			A_StartSound("RCavalier/Swing", 13, pitch: frandom(0.4, 0.6));
			A_SpawnProjectile("PM_CavalierSlashTracer");
		}
		KNOH FFFFFGGGGGGGGGGGGGGGGG 1
		{
			PM_CavalierEffects();
			A_SpawnParticleEx("", TexMan.CheckForTexture("DTPRO0"), STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, 40, 40, xoff: 1, yoff: -3, zoff: 48, sizestep: -5, startroll: random(-180,180), rollvel: frandom(-40, 40));
			A_SpawnItemEx("PM_GenericPhaseGhost",zofs:6,flags:SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE|SXF_TRANSFERSTENCILCOL);
			A_Recoil(-0.5);
		}
		KNOH G random(1, 20);
		Goto See;
	Pain:
		KNOH H 4 { bFRIGHTENED = false; bNOFEAR = true; }
		KNOH H 2 A_Pain();
		KNOH H 0 A_Jump(70, "Retreat", "Recoil");
		Goto See;
	Retreat:
		KNOH A 0 { alpha = 0.8; bFRIGHTENED = true; bVISIBILITYPULSE = false; bNOFEAR = false; }
		KNOH A 0 A_StartSound("RCavalier/GhostAppear", 14, volume: 0.7);
		KNOH AABBCCDDAABBCCDDAABBCCDDAABBCCDDDAABBCCDDAABBCCDD 1
		{
			A_Chase(null, null);
			A_SpawnItemEx("PM_GenericPhaseGhost",zofs:6,flags:SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE|SXF_TRANSFERSTENCILCOL);
			A_Recoil(-3);
			A_FadeOut(0.025, 0|FTF_CLAMP);
		}
		KNOH A 0 { bFRIGHTENED = false; bNOFEAR = true; bVISIBILITYPULSE = true; }
		Goto Spotted;
	Death:
		KNOH H 5;
		KNOH H 1 { bFRIGHTENED = false; bNOFEAR = true; bVISIBILITYPULSE = true; }
		KNOH I 6 A_Scream();
		KNOH J 6 A_NoBlocking();
		KNOH KLM 6;
		KNOH M random(50, 200) CanRaise;
		KNOH M 0 A_StartSound("Abhor/SoulExp", 14);
		TNT1 AAAAAAAAAA 0 PM_CavalierWither();
		TNT1 A 0 A_SpawnParticleEx("", TexMan.CheckForTexture("SPKWE0"), style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT, lifetime: random(200,300), size: 10, zoff: 5, accelx: frandom(-0.05,0.05), accely: frandom(-0.05,0.05), accelz: frandom(-0.05,0.2), startalphaf: frandom(0.8,1), fadestepf: 0, sizestep: -0.01, startroll: random(-180,180));
		KNOH M 1 { A_SpawnItemEx("PM_GenericPhaseGhost",flags:SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE|SXF_TRANSFERSTENCILCOL|SXF_TRANSFERALPHA); A_FadeOut(0.1); PM_CavalierWither(); }
		Wait;
	Raise:
		KNOH MLKJIH 5;
		Goto Spotted;
	}
}

Class PM_SlashTrail : Actor
{
	Default
	{
		Alpha 1;
		Scale 1;
		RenderStyle "AddShaded";
		StencilColor "aaaaaa";
		+NOINTERACTION
		-SOLID
		+BRIGHT
	}
	
	States
	{
	Spawn:
		TRCR A 0 NoDelay
		{
			A_ChangeVelocity(vel.x / 100, vel.y / 100, vel.z / 100, CVF_REPLACE);
			A_FaceMovementDirection();
		}
		Goto Looping;
	Looping:
		TRCR A 1 A_FadeOut(0.075);
		Wait;
	}
}



Class PM_CavalierSlashTracer : PM_BulletTracer
{
	Default
	{
	Speed 32;
	+RIPPER
	DamageFunction 7;
	+THRUGHOST
	+BRIGHT
	+ROLLSPRITE
	StencilColor "Yellow";
	}
	
	override void PostBeginPlay()
	{
		super.PostBeginPlay();
		roll = frandom(-40, 40);
	}
	
	void SpawnFX()
	{
		let FX = spawn("PM_SlashTrail", Vec3Offset(0, 0, 0));
		if (FX)
		{
			FX.angle = angle;
			FX.pitch = pitch;
			FX.roll = roll;
			FX.scale.x = scale.x;
			FX.scale.y = scale.y;
			FX.vel = vel;
			FX.SetShade("bf7628");
			FX.A_SetRenderStyle(0.5, STYLE_ADDSHADED);
		}
	}
	
	States
	{
	Spawn:
		TRCR A 1 Light("AvatarFireball2") SpawnFX();
		Loop;
	Death:
	XDeath:	
		TRCR A 0;
		Stop;
	}
}

Class PM_CavilerEnthusiasmBuffGiver : Inventory
{
  Default
  {
	+INVENTORY.ALWAYSPICKUP;
	+INVENTORY.AUTOACTIVATE;
  }
  
  override bool Use(bool pickup)
  {
	if (!owner) return false;
	if (owner.bISMONSTER && !owner.bBOSS && owner.health > 0 && owner.health <= 1000)
		owner.GiveInventory("PM_CavilerEnthusiasmBuff", 1);
	return true;
  }
}

Class PM_CavilerEnthusiasmBuff : PowerProtection
{
  Default
  {
	+INVENTORY.ALWAYSPICKUP;
	+INVENTORY.AUTOACTIVATE;
	Powerup.Duration -40;
	DamageFactor 0.85;
  }
  
  bool has1, has2;
  
  override void PostBeginPlay()
  {
	if (owner && owner.health > 0)
	{
		owner.A_AttachLight("WarBuff", DynamicLight.PulseLight, "bf7628",  int(ceil( owner.radius )) * 2, int(ceil( owner.radius )) * 3);
		for (int i = 0; i < 360; i += random(10, 50)) owner.A_SpawnParticleEx("bf7628", TexMan.CheckForTexture("GNSMK0"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, 180, 30, 0, frandom(owner.radius, -owner.radius), frandom(-owner.radius, owner.radius), frandom(0, owner.height), frandom(-0.01, 0.01) + 5, frandom(-0.01, 0.01), frandom(0.01, -0.01), frandom(-0.25, 0.25), frandom(-0.25, 0.25), frandom(-0.25, 0.25), startalphaf: 0.85, fadestepf: 0.0375, sizestep: 3.5, startroll: frandom(0, 360), rollvel: random(0, 1) ? 0.5 : -0.5);
	}
  }
  
  override void DoEffect()
  {
	super.DoEffect();
	
	if (owner && owner.health > 0 && !level.isFrozen())
	{
		if ((level.time % random(1, 5)) == 0)
			owner.A_SpawnParticleEx("472c0f", TexMan.CheckForTexture("GNSMK0"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, 180, 60, 0, frandom(owner.radius, -owner.radius), frandom(-owner.radius, owner.radius), frandom(0, owner.height), frandom(-0.01, 0.01), frandom(-0.01, 0.01), frandom(0.01, -0.01), frandom(-0.25, 0.25), frandom(-0.25, 0.25), frandom(-0.25, 0.25), startalphaf: 0.85, fadestepf: 0.0375, sizestep: 3.5, startroll: frandom(0, 360), rollvel: random(0, 1) ? 0.5 : -0.5);
		
		owner.A_SetTics(int(owner.tics / randompick(1, 2)));
		if (owner.bNOINFIGHTING) has1 = true;
		if (!has1) owner.bNOINFIGHTING = true;
		if (owner.bNOTARGET) has2 = true;
		if (!has2) owner.bNOTARGET = true;
	}
  }
  
  override void DetachFromOwner()
  {
	if (owner && owner.health > 0)
	{
		owner.A_StopSounds(0, 0);
		owner.A_RemoveLight("WarBuff");
		
		for (int i = 0; i < 360; i += random(10, 50)) owner.A_SpawnParticleEx("bf7628", TexMan.CheckForTexture("GNSMK0"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, 180, 30, 0, frandom(owner.radius, -owner.radius), frandom(-owner.radius, owner.radius), frandom(0, owner.height), frandom(-0.01, 0.01) + 5, frandom(-0.01, 0.01), frandom(0.01, -0.01), frandom(-0.25, 0.25), frandom(-0.25, 0.25), frandom(-0.25, 0.25), startalphaf: 0.85, fadestepf: 0.0375, sizestep: 3.5, startroll: frandom(0, 360), rollvel: random(0, 1) ? 0.5 : -0.5);
	
		if (!has1) owner.bNOINFIGHTING = false;
		if (!has2) owner.bNOTARGET = false;
	}
  }
  
  override void OwnerDied()
  {
	if (owner)
	{
		owner.A_StopSounds(0, 0);
		owner.A_RemoveLight("WarBuff");
		
		for (int i = 0; i < 360; i += random(10, 50)) owner.A_SpawnParticleEx("bf7628", TexMan.CheckForTexture("GNSMK0"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, 180, 30, 0, frandom(owner.radius, -owner.radius), frandom(-owner.radius, owner.radius), frandom(0, owner.height), frandom(-0.01, 0.01) + 5, frandom(-0.01, 0.01), frandom(0.01, -0.01), frandom(-0.25, 0.25), frandom(-0.25, 0.25), frandom(-0.25, 0.25), startalphaf: 0.85, fadestepf: 0.0375, sizestep: 3.5, startroll: frandom(0, 360), rollvel: random(0, 1) ? 0.5 : -0.5);
		
		if (!has1) owner.bNOINFIGHTING = false;
		if (!has2) owner.bNOTARGET = false;
		
		Destroy();
	}
  }
}