Class PM_Cataclysm : PMWarMonsterBase
{
  Default
	{
		PMMonsterBase.CodexLore
	    "\c[Yellow]HELL IS BLISS. EVERYTHING MUST FALL UNDER DESTRUCTION. NOW.\c-
		
		Full of madness and conquest-driven mecha aeronauts that are capable of casting a thousand superheated plasma and laser bolts.
		These masochistic, demonic robots of the third apocalypse, War, are programmed to spread and emit upheaval in every location and every area they gaze. Whenever it sees chaos, it's fueled to commit more chaos.
		Catalysts of Cataclysm are served in the more warzone-like areas of Inferno, and since it's a guardian of the horsemen, it will NOT go easy on you.
		
		Faster and tankier than your average cacodemons, can spit hundreds of plasma balls and lasers. Given the opportunity of full energy potential, they can do much worse.";
		SeeSound "Cataclysm/SCREAM";
		PainSound "Cataclysm/Machinery";
		DeathSound "Cataclysm/Death";
		ActiveSound "Cataclysm/Active";
		Obituary "%o got absolutely expunged by a catalyst of Cataclysm.";
		HitObituary "%o got absolutely expunged by a catalyst of Cataclysm.";
		Health 500;
		Radius 31;
		Height 56;
		Mass 400;
		Speed 8;
		MinMissileChance 200;
		PainChance 50;
		FastSpeed 9;
		FloatBobStrength 0.4;
		Tag "Cataclysm";
		Species "Cacodemon";
		BloodColor "ff ff 00";
		StencilColor "ff cc 24";
		MeleeThreshold 100;
		MeleeRange 85;
		+FLOATBOB
		+FLOAT
		+NOGRAVITY
		+SLIDESONWALLS
		+DONTHARMSPECIES
		+DONTHARMCLASS
		+NOFEAR
		+MISSILEMORE
		//+NOTARGET
		Bloodtype "PM_LavaWarBloodBase";
		TeleFogSourceType "PM_SmallDemonicTeleportFog";
		TeleFogDestType "PM_WarTeleportFog";
	}
	
	void CataclysmElec()
	{
		if (!random(0, 2)) for (int i = random(1, 2); i > 0; i--) A_SpawnParticleEx("", tex[1], STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, random(2,30), random(1,200), xoff: frandom(-60, 60), yoff: frandom(-60, 60), zoff: 35 + frandom(-10, 10), velx: random(-3,3), vely: random(-3,3), velz: random(-3,3), startalphaf: frandom(0.5,1), startroll: random(-180,180));
		A_SpawnParticleEx("c25419", tex[0], STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, random(50, 100), random(40,100), xoff: frandom(-20, 20), yoff: frandom(-20, 20), zoff: 35 + frandom(-5, 5), velx: frandom(0, 3), vely: frandom(-2, 2), velz: frandom(-2, 2), startalphaf: frandom(0.3, 0.6), sizestep: frandom(0, 1), startroll: random(-180,180), rollvel: frandom(-4, 4));
	}
	
	void CataclysmCharge()
	{
		A_SpawnItemEx("PM_OrangeEmbersFloat",0,random(-10,10),15,random(5,20),random(-5,5),random(-5,5));
		if (!random(0, 2)) for (int i = random(1, 2); i > 0; i--) A_SpawnParticleEx("", tex[1], STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, random(2,30), random(1,200), xoff: frandom(-60, 60), yoff: frandom(-60, 60), zoff: 35 + frandom(-10, 10), velx: random(-3,3), vely: random(-3,3), velz: random(-3,3), startalphaf: frandom(0.5,1), startroll: random(-180,180));
		A_SpawnParticleEx("", tex[3], STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, 1, random(100,300), xoff: 15, zoff: 35, startroll: random(-180,180));
		A_SpawnParticleEx("ffff24", tex[2], STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, random(100, 200), random(40,100), xoff: frandom(-20, 20), yoff: frandom(-20, 20), zoff: 35 + frandom(-5, 5), velx: frandom(0, 3), velz: frandom(-2, 2), startalphaf: frandom(0.3, 0.6), sizestep: frandom(0, 1), startroll: random(-180,180), rollvel: frandom(-4, 4));
	}
	
	void CataclysmBreath()
	{
		if (!random(0, 1)) A_SpawnItemEx("PM_OrangeEmbersFloat",0,random(-10,10),15,random(5,20),random(-5,5),random(-5,5));
		if (!random(0, 2)) A_SpawnParticleEx("", tex[1], STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, random(2,30), random(1,200), xoff: frandom(-60, 60), yoff: frandom(-60, 60), zoff: 35 + frandom(-10, 10), velx: random(-3,3), vely: random(-3,3), velz: random(-3,3), startalphaf: frandom(0.5,1), startroll: random(-180,180));
		A_SpawnParticleEx("ffff24", tex[2], STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, 1, random(300,400), xoff: 15, zoff: 35, startalphaf: 0.45, startroll: random(-180,180));
		A_SpawnParticleEx("c25419", tex[0], STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, random(50, 100), random(40,100), xoff: frandom(-20, 20), yoff: frandom(-20, 20), zoff: 35 + frandom(-5, 5), velx: frandom(0, 3), vely: frandom(-2, 2), velz: frandom(-2, 2), startalphaf: frandom(0.3, 0.6), sizestep: frandom(0, 1), startroll: random(-180,180), rollvel: frandom(-4, 4));
	}
	
	override void PostBeginPlay()
	{
		super.PostBeginPlay();
		tex[0] = TexMan.CheckForTexture("GNSML0",TexMan.Type_Sprite);
		tex[1] = TexMan.CheckForTexture("YLWLA0",TexMan.Type_Sprite);
		tex[2] = TexMan.CheckForTexture("LEYSO0",TexMan.Type_Sprite);
		tex[3] = TexMan.CheckForTexture("DTPRO0",TexMan.Type_Sprite);
	}
	
	textureID tex[4];
	
	int gigalasercooldown;
	
	override void Tick()
	{
		super.Tick();
		if (gigalasercooldown > 0) gigalasercooldown--;
	}
	
	States
	{
	Spawn:
		C0C3 D 0;
		Goto Idle;
	Idle:
		C0C3 A 10 PM_Look();
		Loop;
	Look:
		C0C3 A 3
		{
			A_Recoil(-0.15);
			PM_LookingForPlayer();
		}
		TNT1 A 0 A_JumpIfTargetinLOS("Spotted",250,JLOSF_DEADNOJUMP);
		Loop;
	Spotted:
		TNT1 A 0 A_Jump(256,"Roar","RoarNoAnim");
	RoarNoAnim:
		TNT1 A 0 PM_AlertSound();
	See:
		C0C3 A 0 A_SetSpeed(8);
		C0C3 A 2
		{
			A_Recoil(-0.15);
			A_FaceTarget();
			A_Chase();
			
			if (!random(0, 35)) SetStateLabel("Rush");
			if (!random(0, 50)) SetStateLabel("Dodge");
		}
		Loop;
	Rush:
		TNT1 A 0 A_StartSound("GenericChargeHeavy",15);
		C0C3 A 0 A_SetSpeed(random(11, 18));
		C0C3 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1
		{
			A_Chase();
			A_SpawnItemEx("PM_GenericPhaseGhost",xofs:-5,flags:SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE|SXF_TRANSFERSTENCILCOL);
			if (!random(0, 2)) for (int i = random(1, 2); i > 0; i--) A_SpawnParticleEx("", tex[1], STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, random(2,30), random(1,200), xoff: frandom(-60, 60), yoff: frandom(-60, 60), zoff: 35 + frandom(-10, 10), velx: random(-3,3), vely: random(-3,3), velz: random(-3,3), startalphaf: frandom(0.5,1), startroll: random(-180,180));
			A_SpawnParticleEx("c25419", tex[0], STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, random(50, 100), random(40,100), xoff: frandom(-20, 20), yoff: frandom(-20, 20), zoff: 35 + frandom(-5, 5), velx: frandom(0, 3), vely: frandom(-2, 2), velz: frandom(-2, 2), startalphaf: frandom(0.3, 0.6), sizestep: frandom(0, 1), startroll: random(-180,180), rollvel: frandom(-4, 4));
		}
		C0C3 A 0 A_SetSpeed(8);
		Goto See;
	Dodge:
		C0C3 A 0 Vel3DFromAngle(8, 45 * random(0, 4), frandom(-40, 40));
		C0C3 BBBBBBB 3 A_FaceTarget();
		C0C3 K 0 A_Stop();
		C0C3 K 0 A_Jump(128, "Fireball");
		Goto See;
	ROAR:
		C0C3 A 2 A_FaceTarget();
		C0C3 A 0 A_StartSound(SeeSound, CHAN_VOICE, CHANF_OVERLAP);
		C0C3 BBCCDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDCCBB 1 Light("AvatarFireball")
		{
		Radius_Quake(random(1, 2), 2, 0, 10, 0);
		CataclysmBreath();
		A_FaceTarget();
		}
		Goto See;
	Missile:
		C0C3 A 0 { vel /= 2.5; }
		C0C3 A 0 A_Jump(20, "Gigalaser");
		C0C3 A 0 A_Jump(45, "Roar");
		C0C3 A 0 A_Jump(128, "Plasma");
		Goto LaserBarrage;
	LaserBarrage:
		C0C3 A 5 A_FaceTarget();
		C0C3 A 0
		{
			A_StartSound("", CHAN_7);
			A_StartSound("Cataclysm/Machinery", CHAN_6);
		}
		C0C3 BBBCCCCDDDDDDDDDDDDD 2 Light("AvatarFireball2")
		{
			A_FaceTarget();
			CataclysmElec();
		}
		C0C3 D 0 { pm_attackloop = random(15, 35); }
		Goto LaserBarrageLoop;
	LaserBarrageLoop:
		C0C3 D random(1, 5) Light("AvatarFireball")
		{
			A_StartSound("Cataclysm/SmallLaser", CHAN_WEAPON, CHANF_OVERLAP, pitch: frandom(.7, 1.1));
			A_SpawnProjectile("PM_CataclysmLaser", random(18, 25), random(-20, 20), frandom(-5, 5), CMF_OFFSETPITCH|CMF_AIMDIRECTION, pitch + frandom(-5, 5));
			CataclysmElec();
			A_FaceTarget(3, 3);
			pm_attackloop--;
		}
		C0C3 C 0 { if (pm_attackloop <= 0) SetStateLabel("Cooldown"); }
		Loop;
	Plasma:
		C0C3 A 5 A_FaceTarget();
		C0C3 A 0
		{
			A_StartSound("", CHAN_7);
			A_StartSound("Cataclysm/Command", CHAN_6);
		}
		C0C3 BBBCCCCDDDDDDD 2 Light("AvatarFireball2")
		{
			A_FaceTarget();
			CataclysmElec();
			if (!random(0, 2)) for (int i = random(1, 2); i > 0; i--) A_SpawnParticleEx("", tex[1], STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, random(2,30), random(1,200), xoff: frandom(-60, 60), yoff: frandom(-60, 60), zoff: 35 + frandom(-10, 10), velx: random(-3,3), vely: random(-3,3), velz: random(-3,3), startalphaf: frandom(0.5,1), startroll: random(-180,180));
			A_SpawnParticleEx("c25419", tex[0], STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, random(50, 100), random(40,100), xoff: frandom(-20, 20), yoff: frandom(-20, 20), zoff: 35 + frandom(-5, 5), velx: frandom(0, 3), vely: frandom(-2, 2), velz: frandom(-2, 2), startalphaf: frandom(0.3, 0.6), sizestep: frandom(0, 1), startroll: random(-180,180), rollvel: frandom(-4, 4));
		}
		C0C3 D 2 Vel3DFromAngle(7, 45 * random(0, 4), frandom(-40, 40));
		C0C3 DDDDDDDDD 2 Light("AvatarFireball2")
		{
			A_FaceTarget();
			CataclysmElec();
			if (!random(0, 2)) for (int i = random(1, 2); i > 0; i--) A_SpawnParticleEx("", tex[1], STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, random(2,30), random(1,200), xoff: frandom(-60, 60), yoff: frandom(-60, 60), zoff: 35 + frandom(-10, 10), velx: random(-3,3), vely: random(-3,3), velz: random(-3,3), startalphaf: frandom(0.5,1), startroll: random(-180,180));
			A_SpawnParticleEx("c25419", tex[0], STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, random(50, 100), random(40,100), xoff: frandom(-20, 20), yoff: frandom(-20, 20), zoff: 35 + frandom(-5, 5), velx: frandom(0, 3), vely: frandom(-2, 2), velz: frandom(-2, 2), startalphaf: frandom(0.3, 0.6), sizestep: frandom(0, 1), startroll: random(-180,180), rollvel: frandom(-4, 4));
		}
		C0C3 D 2 PM_LeadTarget(20);
		C0C3 D 20
		{
			A_Stop();
			for (int i = -10; i < 11; i += 10) A_SpawnProjectile("PM_CataclysmPlasma", 25, 0, i, CMF_OFFSETPITCH|CMF_AIMDIRECTION, pitch);
			for (int i = -10; i < 11; i += 20) A_SpawnProjectile("PM_CataclysmPlasma", 25, flags: CMF_OFFSETPITCH|CMF_AIMDIRECTION, pitch: pitch - i);
		}
		Goto Cooldown;
	Gigalaser:
		C0C3 A 0 { if (gigalasercooldown > 0) SetStateLabel("LaserBarrage"); }
		C0C3 A 2 A_FaceTarget();
		C0C3 A 0 A_StartSound(SeeSound, CHAN_VOICE, CHANF_OVERLAP);
		C0C3 BBCCDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD 1 Light("AvatarFireball")
		{
		Radius_Quake(random(1, 2), 2, 0, 10, 0);
		CataclysmCharge();
		A_FaceTarget();
		}
		C0C3 D 0 A_StartSound("Cataclysm/GigalaserCharge", 15);
		C0C3 DDDDDDDDDDDDDDDDDDDDDD 1 Light("AvatarFireball")
		{
		Radius_Quake(random(1, 2), 2, 0, 10, 0);
		CataclysmCharge();
		A_FaceTarget(0.1,0.1);
		}
		C0C3 D 0
		{
			gigalasercooldown = 1200;
			A_SetAngle(angle+random(-30,30));
			A_SetPitch(pitch+random(-20,20));
			A_StartSound("Cataclysm/GigalaserAdd", 15, CHANF_OVERLAP);
			A_StartSound("Cataclysm/Gigalaser", 15, CHANF_OVERLAP);
			pm_attackloop = random(70, 90);
		}
		Goto GigalaserLoop;
	GigalaserLoop:
		C0C3 D 1
		{
			A_FaceTarget(0.3,0.3);
			A_SpawnProjectile("PM_CataclysmGigaLaser", 25, flags: CMF_AIMDIRECTION|CMF_OFFSETPITCH, pitch);
			pm_attackloop--;
		}
		C0C3 D 0 { if (pm_attackloop <= 0) SetStateLabel("MegaCooldown"); }
		Loop;
	Cooldown:
		C0C3 DCBA 5 A_FaceTarget();
		Goto See;
	MegaCooldown:
		C0C3 DCBAAAAAAAAA 5
		{
			A_FaceTarget(0.1, 0.1);
			A_SpawnParticleEx("", tex[0], STYLE_NONE, SPF_ROLL|SPF_RELATIVE, random(100, 400), frandom(80, 256), angle, frandom(-20, 20), frandom(-20, 20), frandom(10, 25), frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(0.1, 1.5), startalphaf: frandom(.2, .4), sizestep: frandom(0,.8), startroll: frandom(-180, 180), rollvel: frandom(-2, 2));
		}
		Goto See;
	Pain:
		C0C3 E 0 A_StopSound(15);
		C0C3 E 0 A_Jump(60, "Dodge");
		C0C3 E 3;
		C0C3 F 3 A_Pain();
		C0C3 F 0 { if (target && CheckSight(target) && !random(0, 5)) SetStateLabel("Missile"); }
		Goto See;
	Death:
		C0C3 E 0 { A_Fall(); A_StopSound(15); }
		C0C3 E 6
		{
			vel.z += frandom(0, 5);
			vel.xy += (frandom(-2, 2), frandom(-2, 2));
		}
		C0C3 F 6 PM_Scream();
		C0C3 G 6;
		C0C3 HIJ 6;
		Wait;
	Crash:
		TNT1 A 0
		{
			bFLOAT = false;
			bFLOATBOB = false;
			A_StartSound("Director/Step",CHAN_7,attenuation: .45);
			A_StartSound("PMInfernal/Explode",8);
			A_StartSound("Cataclysm/Collide",CHAN_6);
			A_QuakeEx(1, 1, 3, 60, 0, 525, "", QF_SCALEDOWN|QF_3D);
			
			A_SetRenderStyle(1, STYLE_ADDSHADED);
			for (int i = random(4, 6); i > 0; i--) A_SpawnItemEx("PM_InfernalLavaSplashBig",random(-8,8),random(-8,8),random(-2,8),random(-8,8),random(-8,8),random(-2,8),0,SXF_NOCHECKPOSITION|SXF_TRANSFERRENDERSTYLE|SXF_TRANSFERSTENCILCOL);
			for (int i = 25; i > 0; i--) A_SpawnItemEx("PM_BigFireGlobs",0,0,0,random(-12,12),random(-12,12),random(-9,12),0,SXF_NOCHECKPOSITION);
			for (int i = random(3, 6); i > 0; i--) A_SpawnItemEx("PM_GenericExplosionFlames",0,0,0,random(-3,3),random(-3,3),random(-2,3),0,SXF_NOCHECKPOSITION);
			for (int i = random(5, 10); i > 0; i--) A_SpawnItemEx("PM_WarMeatChunkLauncher", frandom(-20, 20), frandom(-20, 20), frandom(15, 25), frandom(-18, 18), frandom(-18, 18), frandom(-1, 22), frandom(0, 360), SXF_NOCHECKPOSITION);
		}
		TNT1 A 0 A_SetRenderStyle(1, STYLE_NORMAL);
		C0C3 KL 6;
		C0C3 LLLLLLLLLLLLLLLLLLLLL random(10, 20)
		{
			if (!random(0, 1)) A_CustomRailgun(5,0,"","White",RGF_SILENT|RGF_CENTERZ|RGF_FULLBRIGHT,0,9000,"PM_BlueLongFlare2",180,180,random(50,800),0,3,0,"PM_ConduitArcs");
			A_SpawnParticleEx("", tex[0], STYLE_NONE, SPF_ROLL|SPF_RELATIVE, random(100, 400), frandom(80, 256), angle, frandom(-20, 20), frandom(-20, 20), frandom(10, 25), frandom(-0.1, 0.1), frandom(-0.1, 0.1), frandom(0.1, 1.5), startalphaf: frandom(.4, .8), sizestep: frandom(0,.8), startroll: frandom(-180, 180), rollvel: frandom(-2, 2));
		}
		C0C3 L -1;
		Stop;
	Resurrect:
		C0C3 LKJIHGFEA 5;
		C0C3 A 5 { bFLOAT = true;
			bFLOATBOB = true; }
		Goto Spotted;
	}
}

Class PM_CataclysmLaser : PM_BlashemerBHBall
{
	Default
	{
		Radius 12;
		Speed 32;
		+NEVERFAST
		Scale .7;
		SeeSound "";
		DamageType "Plasma";
		DamageFunction 5;
	}
	
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			for (int i = 3; i > 0; i--)
				A_SpawnParticleEx("", TexMan.CheckForTexture("DTPRO0"), style: STYLE_Add, flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, lifetime: random(3,8), size: random(80,130), startalphaf: 1, fadestepf: -1, sizestep: -15, startroll: random(-180,180));
		}
	Go:
		TRCR A 1 Bright A_SetRoll(roll+25);
		Loop;
	Death:
		TNT1 AA 0 A_SpawnParticleEx("", TexMan.CheckForTexture("DTPRO0"), style: STYLE_Add, flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, lifetime: random(2,8), size: random(100,170), startalphaf: 0.95, fadestepf: -1, sizestep: -15, startroll: random(-180,180));
		TNT1 AAAAA 0 A_SpawnParticleEx("", TexMan.CheckForTexture("YLWLA0"), style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(6,15), size: random(15,30), velx: random(-3,3), vely: random(-3,3), velz: random(-3,3), startalphaf: 0.7, fadestepf: -1, startroll: random(-180,180));
		TNT1 A 5 Light("AvatarFireball4");
		Stop;
	}
}

Class PM_CataclysmGigaLaser : PM_CataclysmLaser
{
	Default
	{
		Radius 25;
		Speed 60;
		Scale 1.25;
		DamageFunction 7;
	}
	
	override void PostBeginPlay()
	{
		super.PostBeginPlay();
		tex[0] = TexMan.CheckForTexture("GNSML0",TexMan.Type_Sprite);
		tex[1] = TexMan.CheckForTexture("YLWLA0",TexMan.Type_Sprite);
		tex[2] = TexMan.CheckForTexture("SPKOA0",TexMan.Type_Sprite);
		tex[3] = TexMan.CheckForTexture("DTPRO0",TexMan.Type_Sprite);
	}
	
	textureID tex[4];
	
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			for (int i = 5; i > 0; i--)
				A_SpawnParticleEx("", TexMan.CheckForTexture("DTPRO0"), style: STYLE_Add, flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, lifetime: random(3,8), size: random(80,130), startalphaf: 1, fadestepf: -1, sizestep: -15, startroll: random(-180,180));
		
			A_SpawnParticleEx
			( "", tex[3], style: STYLE_Add, flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL,
			lifetime: random(1,7), size: random(300,500), xoff: -7, startalphaf: frandom(0.65,0.95), fadestepf: -1, sizestep: 2, startroll: random(-180,180));
			for(int i=random(1,4);i>0;i--)
			 A_SpawnParticleEx
			 ( "", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
			 lifetime: random(1,50), size: random(10,20), velx: frandom(1,4.5), vely: frandom(-4,4), velz: frandom(-4,2),
			 accelz: frandom(-0.0095,-0.0115), startalphaf: frandom(0.55,0.95), fadestepf: -1, startroll: random(-180,180) );
		}
	Go:
		TRCR A 1 Bright
		{
			A_SpawnParticleEx("", tex[1], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(6,25), size: random(15,50), velx: random(-10,10), vely: random(-10,10), velz: random(-10,10), startalphaf: 0.7, fadestepf: -1, startroll: random(-180,180));
			A_SpawnParticleEx("c25419", tex[0], STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, random(50, 150), random(40,100), xoff: frandom(-20, 20), velx: frandom(5, 25), velz: frandom(-1, 1), startalphaf: frandom(0.3, 0.6), sizestep: frandom(0, 1), startroll: random(-180,180), rollvel: frandom(-4, 4));
			A_QuakeEx(1,1,1,10,0,500,"",QF_RELATIVE|QF_SCALEDOWN|QF_3D,rollintensity:0.8,rollwave:0.8);
		}
		Loop;
	Death:
		TNT1 A 0 A_SpawnParticleEx("", tex[3], style: STYLE_Add, flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, lifetime: random(1,20), size: random(200,400), yoff: 12, startalphaf: frandom(0.65,0.95), fadestepf: -1, startroll: random(-180,180));
		TNT1 AA 0 A_SpawnParticleEx("", TexMan.CheckForTexture("DTPRO0"), style: STYLE_Add, flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, lifetime: random(2,8), size: random(100,170), startalphaf: 0.95, fadestepf: -1, sizestep: -15, startroll: random(-180,180));
		TNT1 AAAAAAA 0 A_SpawnParticleEx("", tex[1], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(6,25), size: random(15,50), velx: random(-10,10), vely: random(-10,10), velz: random(-10,10), startalphaf: 0.7, fadestepf: -1, startroll: random(-180,180));
		TNT1 A 5 Light("AvatarFireball4");
		Stop;
	}
}

Class PM_CataclysmPlasma : PM_CataclysmLaser
{
	override void PostBeginPlay()
	{
		super.PostBeginPlay();
		rollv = frandom(-125, 125);
		tex[0] = TexMan.CheckForTexture("GNSML0",TexMan.Type_Sprite);
		tex[1] = TexMan.CheckForTexture("YLWLA0",TexMan.Type_Sprite);
		tex[2] = TexMan.CheckForTexture("SPKOA0",TexMan.Type_Sprite);
		tex[3] = TexMan.CheckForTexture("DTPRO0",TexMan.Type_Sprite);
	}
	
	float rollv;
	
	Default
	{
		Radius 5;
		Speed 10;
		Scale 0.75;
		DamageFunction 10;
		DeathSound "Cataclysm/BallExplode";
		SeeSound "Cataclysm/Ball";
		+SEEKERMISSILE
	}
	
	textureID tex[4];
	
	void BallFX()
	{
		roll += rollv;
		scale = frandom(.8, 1.2) * (.35, .35);
		if (!random(0, 2)) A_SpawnParticleEx("", tex[1], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(6,25), size: random(15,50), velx: random(-10,10), vely: random(-10,10), velz: random(-10,10), startalphaf: 0.7, fadestepf: -1, startroll: random(-180,180));
		A_SpawnParticleEx("c25419", tex[0], STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, random(20, 50), random(25,70), startalphaf: 1, sizestep: frandom(0, 1), startroll: random(-180,180), rollvel: frandom(-4, 4));
		A_SpawnParticleEx("", tex[3], STYLE_Add, SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, random(2,10), random(1,20), xoff: frandom(-10, 10), yoff: frandom(-10, 10), zoff: frandom(-10, 10), startalphaf: 1, startroll: random(-180,180));
	}
	
	int count;
	
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			for (int i = 5; i > 0; i--)
				A_SpawnParticleEx("", TexMan.CheckForTexture("DTPRO0"), style: STYLE_Add, flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, lifetime: random(3,8), size: random(80,130), startalphaf: 1, fadestepf: -1, sizestep: -15, startroll: random(-180,180));
		
			A_SpawnParticleEx
			( "", tex[3], style: STYLE_Add, flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL,
			lifetime: random(1,7), size: random(100,200), xoff: -7, startalphaf: frandom(0.65,0.95), fadestepf: -1, sizestep: 2, startroll: random(-180,180));
		}
		Goto Go;
	Go:
		DTPR OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO 1 Bright BallFX();
		TNT1 AAAAA 0 A_SeekerMissile(90,90,SMF_LOOK|SMF_PRECISE);
		TNT1 A 0
		{
			count++;
			if (count > random(2, 3)) SetStateLabel("Charge");
			A_ScaleVelocity(0.05);
		}
		DTPR OOOOOOOOOOOOOO 1 Bright BallFX();
		TNT1 A 0 A_ChangeVelocity(0,frandom(-0.1,0.1),frandom(-0.1,0.1),CVF_RELATIVE);
		DTPR O 1
		{
			A_StartSound("Cataclysm/Plasma", 15, CHANF_OVERLAP, pitch: frandom(1.5, 1.55));
			A_StartSound("Cataclysm/Beam", 15, CHANF_OVERLAP);
			A_SpawnParticleEx
			( "", tex[3], style: STYLE_Add, flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL,
			lifetime: random(1,7), size: random(100,200), xoff: -7, startalphaf: frandom(0.65,0.95), fadestepf: -1, sizestep: 2, startroll: random(-180,180));
		
			A_ScaleVelocity(20);
		}
		Loop;
	Charge:
		DTPR OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO 1 Bright { for (int i = 2; i > 0; i--) BallFX(); }
		DTPR O 1
		{
			A_StartSound("Cataclysm/Plasma", 15, CHANF_OVERLAP, pitch: frandom(1.5, 1.55));
			A_StartSound("Cataclysm/Beam", 15, CHANF_OVERLAP);
			A_StartSound("Bacillus/Proj", 15, CHANF_OVERLAP, pitch: frandom(1.2, 1.22));
			A_SpawnParticleEx
			( "", tex[3], style: STYLE_Add, flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL,
			lifetime: random(1,7), size: random(200,300), xoff: -7, startalphaf: frandom(0.65,0.95), fadestepf: -1, sizestep: 2, startroll: random(-180,180));
		
			A_ScaleVelocity(40);
		}
		Goto Looper;
	Looper:
		DTPR O 1 Bright BallFX();
		Loop;
	}
}