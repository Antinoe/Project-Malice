Class PM_Fleshspawn : PMFamineMonsterBase
{
  Default
  {
	PMMonsterBase.CodexLore
	"Crazed sentinels of Famine. Even the smallest of the smallest are in constant torment due to starvation. These little living orbs show no mercy, and they will close in the gap for constant mauling.
	Unlike other demons residing within Famine, they cannot eat large corpses, so they will mostly have to rely on fodder, humans, and other lesser demons.
	
	Will charge at you like any other soul, but can sometimes charge two times and even dodge.";
    Obituary "A Fleshspawn considered %o as food." ;
    HitObituary "%o was devoured by a FleshSpawn.";
    health 16;
    radius 13;
    height 15;
    mass 80;
    speed 10;
    damage 1;
	Scale 0.7;
    painchance 224;
	Species "Soul";
    attacksound "Fleshspawn/Attack";
    seesound "Fleshspawn/Sight";
    painsound "Fleshspawn/Pain";
    deathsound "Fleshspawn/Death";
    activesound "Fleshspawn/Active";
	Tag "Fleshspawn";
    MONSTER;
	Bloodtype "PM_NormalBloodBase";
    +FLOAT
    +NOGRAVITY
    +DONTHARMCLASS
	+DONTHARMSPECIES
    //+NOINFIGHTING
    +NOTARGET
	+Thruspecies
	TeleFogSourceType "PM_SmallDemonicTeleportFog";
	TeleFogDestType "PM_SmallDemonicTeleportFog";
  }

  override void PostBeginPlay()
  {
	super.PostBeginPlay();
	scale.x = frandom(0.6, 0.85);
	scale.y = scale.x;
  }
  
  override void Tick()
  {
	super.Tick();
	if (!(GetAge() % 2)) HandleEating(90);
  }
  
  override void PM_Gib()
 {
  for(int gib=0;gib<3;gib++)
 { A_SpawnItemEx("PM_NormalMeatChunkLauncher",0,0,random(10,30),0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY); }
  for(int a=0;a<3;a++)
 { A_SpawnItemEx("PM_NormalBloodMulti",0,0,32,random(-1,1),random(-1,1),random(-1,1),frandom(0,360),SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY); }
 A_SpawnItemEx("PM_NormalBloodMist",0,0,32,random(-1,1),random(-1,1),random(-1,1),frandom(0,360),SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY);
   A_StartSound("GBloodSplashBig",CHAN_7,CHANF_DEFAULT,0.75);
 }
  
  States
  {
  Spawn:
    F_LS AB 8 PM_Look();
    loop;
  Look:
    F_LS AABB 2 PM_LookingForPlayer();
	Loop;
  Spotted:
    TNT1 A 0 PM_AlertSound();
  See:
	F_LS A 0 A_SetSpeed(10);
    F_LS AABB 2 A_Chase();
	TNT1 A 0 A_ChangeVelocity(frandom(-0.6,0.6),frandom(-0.6,0.6),frandom(-0.3,0.3));
	TNT1 A 0 A_JumpIfCloser(170,"Backup");
	TNT1 A 0 A_Jump(20, "Rush");
	TNT1 A 0 A_Jump(62, "Dodge");
    loop;
  Rush:
	F_LS A 0 A_SetSpeed(17);
	F_LS AABBAABBAABB 1
	{
		A_Recoil(-0.3);
		A_Chase();
	}
	TNT1 A 0 A_Jump(60, "See");
	Loop;
  Eat:
	F_LS ABCDEFDCBABCDEFDCB 2;
	Goto See;
  Missile:
    F_LS C 0 A_Jump(256,"Charge","Stare");
    goto See;
  Stare:
	F_LS A 0 A_ChangeVelocity(0,0,0,CVF_REPLACE);
	F_LS AAAABBBBAAAABBBB random(1, 3) A_FaceTarget();
	Goto See;
  Backup:
	F_LS A 1 A_FaceTarget();
	TNT1 A 0 A_Recoil(20);
	F_LS AABBAAAABBAA 1 A_SpawnItemEx("PM_GenericPhaseGhost", flags: SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE|SXF_TRANSFERRENDERSTYLE|SXF_TRANSFERSTENCILCOL);
	F_LS A 0 A_Stop();
    Goto See;
  Charge:
    F_LS C 0 A_Jump(96, "StaggerCharge", "Dodge");
    F_LS C 15 A_FaceTarget();
    F_LS D 10 A_FaceTarget();
    F_LS E 1 A_SkullAttack(28);
  ChargeLoop:
    F_LS FE 1 A_SpawnItemEx("PM_GenericPhaseGhost", flags: SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE|SXF_TRANSFERRENDERSTYLE|SXF_TRANSFERSTENCILCOL);
    Loop;
  StaggerCharge:
    F_LS C 8 A_FaceTarget();
    F_LS D 4 A_FaceTarget();
    F_LS E 4 A_SkullAttack(28);
    F_LS FFFEEEFFFEEE 1 A_SpawnItemEx("PM_GenericPhaseGhost", flags: SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE|SXF_TRANSFERRENDERSTYLE|SXF_TRANSFERSTENCILCOL);
	F_LS F 0 A_Stop();
    F_LS C 6 A_FaceTarget();
    F_LS D 4 A_FaceTarget();
    F_LS E 4 A_SkullAttack(28);
    F_LS FFFEEEFFFEEE 1 A_SpawnItemEx("PM_GenericPhaseGhost", flags: SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE|SXF_TRANSFERRENDERSTYLE|SXF_TRANSFERSTENCILCOL);
    Goto ChargeLoop;
  Pain:
    F_LS I 3 A_Stop();
    F_LS I 3 A_Pain();
	F_LS I 0 A_Jump(40, "Rush", "Dodge");
    Goto See;
  Dodge:
	F_LS I 1 Vel3DFromAngle(random(10, 20), frandom(0, 360), frandom(-20, 20));
	F_LS IIIIII 1 A_SpawnItemEx("PM_GenericPhaseGhost", flags: SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE|SXF_TRANSFERRENDERSTYLE|SXF_TRANSFERSTENCILCOL);
    F_LS I 0 A_Stop();
	Goto See;
  Death:
    F_LS I 5;
    F_LS J 5 { PM_Gib(); PM_Scream(); }
    F_LS K 5;
    F_LS L 5 A_NoBlocking();
    F_LS MN 5 A_SetFloorClip();
    F_LS O -1;
    Stop;
  XDeath:
    F_LS P 3;
    F_LS Q 3
    {
      A_FaceTarget();
	  for (int i = 3; i > 0; i--) PM_Gib();
    }
    F_LS R 3 A_NoBlocking();
    F_LS STU 3;
    Stop;
  Raise:
    F_LS O 5 A_UnSetFloorClip();
    F_LS NMLKJI 5;
    Goto Look;
  }
}