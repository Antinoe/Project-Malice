Class PM_Fleshspawn : PMFamineMonsterBase
{
  Default
  {
	PMMonsterBase.CodexLore
	"Crazed sentinels of Famine. Even the smallest of the smallest are in constant torment due to starvation. These little living orbs show no mercy, and they will close in the gap for constant mauling.
	Unlike other demons residing within Famine, they cannot eat large corpses, so they will mostly have to rely on fodder, humans, and other lesser demons.
	
	Will charge at you like any other soul, but can sometimes charge two times and even dodge.";
    Obituary "A Fleshspawn considered %o as food." ;
    HitObituary "%o was devoured by a FleshSpawn.";
    health 16;
    radius 13;
    height 15;
    mass 80;
    speed 10;
    damage 1;
	Scale 0.7;
    painchance 224;
	Species "Soul";
    attacksound "Fleshspawn/Attack";
    seesound "Fleshspawn/Sight";
    painsound "Fleshspawn/Pain";
    deathsound "Fleshspawn/Death";
    activesound "Fleshspawn/Active";
	Tag "Fleshspawn";
    MONSTER;
	Bloodtype "PM_NormalBloodBase";
    +FLOAT
    +NOGRAVITY
    +DONTHARMCLASS
	+DONTHARMSPECIES
    //+NOINFIGHTING
    +NOTARGET
	+Thruspecies
	TeleFogSourceType "PM_SmallDemonicTeleportFog";
	TeleFogDestType "PM_SmallDemonicTeleportFog";
  }

  override void PostBeginPlay()
  {
	super.PostBeginPlay();
	scale.x = frandom(0.6, 0.85);
	scale.y = scale.x;
  }
  
  override void Tick()
  {
	super.Tick();
	if (!(GetAge() % 2)) HandleEating(90);
  }
  
  override void PM_Gib()
 {
  for(int gib=0;gib<3;gib++)
 { A_SpawnItemEx("PM_NormalMeatChunkLauncher",0,0,random(10,30),0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY); }
  for(int a=0;a<3;a++)
 { A_SpawnItemEx("PM_NormalBloodMulti",0,0,32,random(-1,1),random(-1,1),random(-1,1),frandom(0,360),SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY); }
 A_SpawnItemEx("PM_NormalBloodMist",0,0,32,random(-1,1),random(-1,1),random(-1,1),frandom(0,360),SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY);
   A_StartSound("GBloodSplashBig",CHAN_7,CHANF_DEFAULT,0.75);
 }
  
  States
  {
  Spawn:
    FLSP AB 8 PM_Look();
    loop;
  Look:
    FLSP AABB 2 PM_LookingForPlayer();
	Loop;
  Spotted:
    TNT1 A 0 PM_AlertSound();
  See:
	FLSP A 0 A_SetSpeed(10);
    FLSP AABB 2 A_Chase();
	TNT1 A 0 A_ChangeVelocity(frandom(-0.6,0.6),frandom(-0.6,0.6),frandom(-0.3,0.3));
	TNT1 A 0 A_JumpIfCloser(170,"Backup");
	TNT1 A 0 A_Jump(20, "Rush");
	TNT1 A 0 A_Jump(62, "Dodge");
    loop;
  Rush:
	FLSP A 0 A_SetSpeed(17);
	FLSP AABBAABBAABB 1
	{
		A_Recoil(-0.3);
		A_Chase();
	}
	TNT1 A 0 A_Jump(60, "See");
	Loop;
  Eat:
	FLSP ABCDEFDCBABCDEFDCB 2;
	Goto See;
  Missile:
    FLSP C 0 A_Jump(256,"Charge","Stare");
    goto See;
  Stare:
	FLSP A 0 A_ChangeVelocity(0,0,0,CVF_REPLACE);
	FLSP AAAABBBBAAAABBBB random(1, 3) A_FaceTarget();
	Goto See;
  Backup:
	FLSP A 1 A_FaceTarget();
	TNT1 A 0 A_Recoil(20);
	FLSP AABBAAAABBAA 1 A_SpawnItemEx("PM_GenericPhaseGhost", flags: SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE|SXF_TRANSFERRENDERSTYLE|SXF_TRANSFERSTENCILCOL);
	FLSP A 0 A_Stop();
    Goto See;
  Charge:
    FLSP C 0 A_Jump(96, "StaggerCharge", "Dodge");
    FLSP C 15 A_FaceTarget();
    FLSP D 10 A_FaceTarget();
    FLSP E 1 A_SkullAttack(28);
  ChargeLoop:
    FLSP FE 1 A_SpawnItemEx("PM_GenericPhaseGhost", flags: SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE|SXF_TRANSFERRENDERSTYLE|SXF_TRANSFERSTENCILCOL);
    Loop;
  StaggerCharge:
    FLSP C 8 A_FaceTarget();
    FLSP D 4 A_FaceTarget();
    FLSP E 4 A_SkullAttack(28);
    FLSP FFFEEEFFFEEE 1 A_SpawnItemEx("PM_GenericPhaseGhost", flags: SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE|SXF_TRANSFERRENDERSTYLE|SXF_TRANSFERSTENCILCOL);
	FLSP F 0 A_Stop();
    FLSP C 6 A_FaceTarget();
    FLSP D 4 A_FaceTarget();
    FLSP E 4 A_SkullAttack(28);
    FLSP FFFEEEFFFEEE 1 A_SpawnItemEx("PM_GenericPhaseGhost", flags: SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE|SXF_TRANSFERRENDERSTYLE|SXF_TRANSFERSTENCILCOL);
    Goto ChargeLoop;
  Pain:
    FLSP I 3 A_Stop();
    FLSP I 3 A_Pain();
	FLSP I 0 A_Jump(40, "Rush", "Dodge");
    Goto See;
  Dodge:
	FLSP I 1 Vel3DFromAngle(random(10, 20), frandom(0, 360), frandom(-20, 20));
	FLSP IIIIII 1 A_SpawnItemEx("PM_GenericPhaseGhost", flags: SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE|SXF_TRANSFERRENDERSTYLE|SXF_TRANSFERSTENCILCOL);
    FLSP I 0 A_Stop();
	Goto See;
  Death:
    FLSP I 5;
    FLSP J 5 { PM_Gib(); PM_Scream(); }
    FLSP K 5;
    FLSP L 5 A_NoBlocking();
    FLSP MN 5 A_SetFloorClip();
    FLSP O -1;
    Stop;
  XDeath:
    FLSP P 3;
    FLSP Q 3
    {
      A_FaceTarget();
	  for (int i = 3; i > 0; i--) PM_Gib();
      A_SpawnItemEx("PM_FleshSpawnGibs", flags: SXF_CLIENTSIDE);
    }
    FLSP R 3 A_NoBlocking();
    FLSP STU 3;
    Stop;
  Raise:
    FLSP O 5 A_UnSetFloorClip();
    FLSP NMLKJI 5;
    Goto Look;
  }
}

Class PM_FleshSpawnGibs : Actor
{
  Default
  {
    +NoClip
    +ClientSideOnly
  }

  States
  {
  Spawn:
    TNT1 A 0 NoDelay
    {
      A_SpawnProjectile("PM_FleshSpawnGib1", 14, 0, random(-180,180), 2, random(-10,-40));
      A_SpawnProjectile("PM_FleshSpawnGib2", 6, 2, random(-180,180), 2, random(0,-25));
      A_SpawnProjectile("PM_FleshSpawnGib2B", 10, -2, random(-180,180), 2, random(0,-25));
      A_SpawnProjectile("PM_FleshSpawnGib3", 8, 0, random(-180,180), 2, random(0,-35));
      A_SpawnProjectile("PM_FleshSpawnGib4", 12, 5, random(-180,180), 2, random(5,-40));
      A_SpawnProjectile("PM_FleshSpawnGib4B", 5, -5, random(-180,180), 2, random(0,-30));
      A_SpawnProjectile("PM_FleshSpawnGib5", 6, 3, random(-180,180), 2, random(-10,-60));
      A_SpawnProjectile("PM_FleshSpawnGib5", 8, 0, random(-180,180), 2, random(10,-55));
      A_SpawnProjectile("PM_FleshSpawnGib6", 12, 0, 0, 2, 0);
    }
    Stop;
  }
}

Class PM_FleshSpawnGib1 : Actor
{
  Default
  {
    Speed 8;
    Mass 100;
    Radius 1;
    Height 1;
    Projectile;
    -NOGRAVITY
    +DROPOFF
    +ClientSideOnly
  }

  States
  {
  Spawn:
    FGB1 ABCD 4;
    loop;
  Death:
    FGB1 E -1;
    stop;
  }
}

Class PM_FleshSpawnGib2 : PM_FleshSpawnGib1
{
  States
  {
  Spawn:
    FGB2 ABCD 4;
    loop;
  Death:
    FGB2 I -1;
    stop;
  }
}

Class PM_FleshSpawnGib2B : PM_FleshSpawnGib1
{
  States
  {
  Spawn:
    FGB2 EFGH 4;
    loop;
  Death:
    FGB2 J -1;
    stop;
  }
}

Class PM_FleshSpawnGib3 : PM_FleshSpawnGib1
{
  States
  {
  Spawn:
    FGB3 ABCD 4;
    loop;
  Death:
    FGB3 E -1;
    stop;
  }
}

Class PM_FleshSpawnGib4 : PM_FleshSpawnGib1
{
  States
  {
  Spawn:
    FGB4 ABCD 4;
    loop;
  Death:
    FGB4 I -1;
    stop;
  }
}

Class PM_FleshSpawnGib4B : PM_FleshSpawnGib1
{
  States
  {
  Spawn:
    FGB4 EFGH 4;
    loop;
  Death:
    FGB4 J -1;
    stop;
  }
}

Class PM_FleshSpawnGib5 : PM_FleshSpawnGib1
{
  States
  {
  Spawn:
    FGB5 ABCD 4;
    loop;
  Death:
    FGB5 E -1;
    stop;
  }
}

Class PM_FleshSpawnGib6 : PM_FleshSpawnGib1
{
  Default
  {
    Speed 0;
  }

  States
  {
  Spawn:
    FGB6 A 4;
    loop;
  Death:
    FGB6 BC 4;
    FGB6 D -1;
    stop;
  }
}
