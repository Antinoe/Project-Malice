Class PM_MechaAranea : PMEnvyMonsterBase
{
	int reloadtimer;
	
	static const int sweepangles[] = { -70, -60, -50, -40, -30, -20, -10, -5, -3, 0, 3, 5, 10, 20, 30, 40, 50, 60, 70 };
	int sweepindex;
	bool shielded;
	
	Default
	{
		PMMonsterBase.CodexLore
		"Large masses of incorporeal Envy demons often don't physically manifest in the mortal plane. Instead, they'd rather usurp bodies of some greater demons and completely take them over, possessing all of their capabilities and strengths for itself.
		 In this case, it's possessed a type of Fusionite whose chariot was designed with speed in mind, enabling it to scurry around to dodge shots or quickly find cover to reload.
		
		Fires lightning-fast bolts of electricity at you alongside a sniper shot and three overcharged plasma orbs.";
		Tag "Mecha-Aranea";
		BloodColor "DarkGreen";
		Health 500;
		Mass 600;
		PainChance 50;
		Speed 11;
		Height 64;
		Radius 48;
		Scale 1;
		MaxStepHeight 24;
		MaxDropOffHeight 24;
		Obituary "%o was air-fried by a Mecha-Aranea.";
		Species "Arachnotron";
		Monster;
		+DONTHARMSPECIES
		+MISSILEMORE
		+FLOORCLIP
		+BOSSDEATH
		Bloodtype "PM_DarkGreenCyberBloodBase";
		SeeSound "MechaAranea/Sight";
		PainSound "MechaAranea/Pain";
		DeathSound "MechaAranea/Death";
		ActiveSound "MechaAranea/Active";
		StencilColor "DarkGreen";
		TeleFogSourceType "PM_SmallDemonicTeleportFog";
		TeleFogDestType "PM_EnvyTeleportFog";
	}
	
	void SlothShield(bool act)
	{
		bINVULNERABLE = act;
		bNOPAIN = act;
		
		if (act)
		{
		A_TakeInventory("PM_EnvySigilGoAway", 1);
		let slothshield = Spawn("PM_CopyForlornShield",pos);
		slothshield.master = self;
		shielded = true;
		A_StartSound("PM/EnvyTele", CHAN_WEAPON, pitch:1);
		A_StartSound("ForlornWalker/Shield", CHAN_6, volume: 0.75, pitch: 0.85);
		}
		else
		{ 
		if (shielded) A_GiveInventory("PM_EnvySigilGoAway");
		shielded = false;
		}
	}
	
	void AraneaCharge()
	{
		A_SpawnParticleEx("", TexMan.CheckForTexture("DTPRA0"), style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT, lifetime: random(40,100), size: frandom(10,150), xoff: frandom(10,15), zoff: frandom(-3.5,3.5) + 65, startalphaf: 0.3, fadestepf: -1, startroll: random(-180,180));
		A_SpawnParticleEx("", TexMan.CheckForTexture("GRNLA0"), style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(1,4), size: random(3,150), xoff: frandom(10,15), zoff: frandom(-3.5,3.5) + 65, velx: random(-6,6), vely: random(-6,6), velz: random(-6,6), startalphaf: 0.9, fadestepf: 0, sizestep: 0, startroll: random(-180,180), rollvel: frandom(-30,30));
	}
	
	void AraneaChargeBig()
	{
		A_SpawnParticleEx("", TexMan.CheckForTexture("DTPRA0"), style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT, lifetime: random(80,250), size: frandom(10,250), xoff: frandom(10,15), zoff: frandom(-3.5,3.5) + 65, startalphaf: 0.3, fadestepf: -1, startroll: random(-180,180));
		A_SpawnParticleEx("", TexMan.CheckForTexture("GRNLA0"), style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(1,6), size: random(3,250), xoff: frandom(10,15), zoff: frandom(-3.5,3.5) + 65, velx: random(-6,6), vely: random(-6,6), velz: random(-6,6), startalphaf: 0.9, fadestepf: 0, sizestep: 0, startroll: random(-180,180), rollvel: frandom(-30,30));
	}
	
	void AraneaAimLaser(Vector2 off = (0, 0), double scal = 0.065)
	{
		if (!Target) return;
		double sa = sin(Angle);
		double ca = cos(Angle);
		Vector2 relOff = (off.X * ca + off.Y * sa, off.X * sa - off.Y * ca);
		PM_SpawnBolt(self, Target.Vec3Offset(0,0,Target.Height-60),"24ff24",TexMan.CheckForTexture("RLSSA0"),maxDiff: 0,scale: scal, offset: (relOff.X, relOff.Y, 65),baseTime: 1,fadeTime: 0);
	}
	
	void AraneaCopyFX(name sprt = "FSPI")
	{
		A_StartSound("PMGreaterSigil", 20);
		A_StartSound("Envy/SigilSummon", 21, volume: 0.75, pitch: 1);
		A_StartSound("PM/EnvyTele", 22, volume: 0.75, pitch: 1);
		
		A_SpawnItemEx("PM_GreatEnvyCircle", flags: SXF_NOCHECKPOSITION);
		let spr = Spawn("PM_GreatEnvySprite", Vec3Offset(0, 0, 6));
		if (spr)
		{
			spr.sprite = GetSpriteIndex(sprt);
			spr.angle = angle;
			spr.scale = scale;
		}
	}
	
	void AraneaDodgeChance()
	{
	 if(target && CheckSight(target) && CheckIfInTargetLOS(5,JLOSF_DEADNOJUMP,765,0) && random(1,40) == 1)
	  SetStateLabel("Evade");
	}
	
	void PM_CheckForNoAmmo(int amount = 1)
	{
	 if (user_numbullets <= 0) SetStateLabel("ReloadRetreat");
	 user_numbullets -= amount;
	}
	
	bool look;
	
	States
	{
		Spawn:
			SCRP A 0 NoDelay
			{
				user_numbullets = random(5,200);
			}
		Idle:
			SCRP B 10 PM_Look();
			Loop;
		Look:
			SCRP B 2 A_StartSound("MechaAranea/Step",CHAN_6);
			SCRP B 2 PM_LookingForPlayer();
			TNT1 A 0 A_StartSound("MechaAranea/Servos",CHAN_7,CHANF_DEFAULT,0.7);
			SCRP BBCC 2 PM_LookingForPlayer();
			TNT1 A 0 A_JumpIfTargetinLOS("Spotted",270,JLOSF_DEADNOJUMP);
			SCRP A 2 A_StartSound("MechaAranea/Step",CHAN_6);
			SCRP A 2 PM_LookingForPlayer();
			Loop;
		Spotted:
			TNT1 A 0 PM_AlertSound();
		See:
			SCRP A 0 A_SetSpeed(11);
			SCRP A 2 A_StartSound("MechaAranea/Step",CHAN_6,CHANF_OVERLAP);
			TNT1 A 0 { bFRIGHTENED = false; }
			SCRP A 2 A_Chase();
			TNT1 A 0 A_StartSound("MechaAranea/Servos",CHAN_7,CHANF_OVERLAP,0.7);
			SCRP BBCC 2 A_Chase();
			SCRP D 0 A_Jump(20,"Rush");
			Loop;
		Rush:
			TNT1 A 0 A_SetSpeed(13);
			SCRP AA 1 
			{
			  if(target && !CheckSight(target))
			   bFRIGHTENED = false;
			  else
			   bFRIGHTENED = true;
			  A_Chase();
			  A_SpawnItemEx("PM_GenericPhaseGhost",zofs:6,flags:SXF_TRANSFERSTENCILCOL|SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE);
			}
			TNT1 A 0 A_StartSound("MechaAranea/Scurry",CHAN_7,CHANF_OVERLAP,0.7);
			SCRP BBCC 1 
			{
			  if(target && !CheckSight(target))
			   bFRIGHTENED = false;
			  else
			   bFRIGHTENED = true;
			  A_Chase();
			  A_SpawnItemEx("PM_GenericPhaseGhost",zofs:6,flags:SXF_TRANSFERSTENCILCOL|SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE);
			}
			SCRP D 0 A_Jump(19,"See");
			Loop;
		Evade:
			TNT1 A 0 { bNODROPOFF = true; }
			TNT1 A 0 A_StartSound("MechaAranea/Dodge", volume: 0.8);
			TNT1 A 0 { A_FaceTarget(); ThrustThing(randompick(0,128),19,0,0); }
			SCRP DDDDDDDDDDDDDD 1
			{
				A_SpawnItemEx("PM_OrangeEmbers",0,40,5,random(-5,5),random(-5,5),random(1,8),0,SXF_NOCHECKPOSITION);
				A_SpawnItemEx("PM_OrangeEmbers",0,-40,5,random(-5,5),random(-5,5),random(1,8),0,SXF_NOCHECKPOSITION);
			}
			SCRP AAAA 1 A_FaceTarget();
			TNT1 A 0 { bNODROPOFF = false; }
			Goto See;
		ReloadRetreat:
		    TNT1 A 0 
			{ 
			  A_StartSound("PhaseCaco/Phase",10); 
			  bFRIGHTENED = true; 
			  bNOPAIN = true; 
			}
			SCRP EEEEEEEEEEEEEEEEEEEEE 2 A_FadeOut(0.1,0);
		RetreatLoop:
		    TNT1 A 0 
			{ 
			  for(int i=40;i>0;i--)
			   { A_Wander(); }
			  A_SetSpeed(12);
			}
		    SCRP AA 1
			{
			  A_Chase(null,null,CHF_NOPLAYACTIVE);
			  A_SpawnItemEx("PM_GenericPhaseGhost",zofs:6,flags:SXF_TRANSFERSTENCILCOL|SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE);
			}
			TNT1 A 0 A_StartSound("MechaAranea/Scurry",CHAN_7,CHANF_OVERLAP,0.15);
			SCRP BBCC 1
			{
			  A_Chase(null,null,CHF_NOPLAYACTIVE);
			  A_SpawnItemEx("PM_GenericPhaseGhost",zofs:6,flags:SXF_TRANSFERSTENCILCOL|SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE);
			}
			TNT1 A 0 A_Jump(5,"NoAmmo");
			TNT1 A 0 A_CheckSight("NoAmmo");
			Goto RetreatLoop+1;
		Missile:
			SCRP A 0 A_StartSound("MechaAranea/Attack", CHAN_VOICE);
			TNT1 A 0 { if (health < (GetMaxHealth() / 2) && !random(0, 5)) SetStateLabel("Copy"); }
			TNT1 A 0 A_Jump(24, "Copy");
			TNT1 A 0 A_Jump(115, "Orbs", "Sniper");
			Goto LightningTracers;
		Orbs:
			SCRP A 10 A_Facetarget();
			SCRP A 0
			{
				pm_attackloop = 3;
				look = randompick(false, true);
				A_StartSound("MechaAranea/Attack", CHAN_VOICE);
				A_StartSound("MechaAraneaReady", CHAN_6);
			}
			SCRP D 20 A_FaceTarget();
			SCRP D 0 A_StartSound("MechaAraneaBeamCharge", CHAN_WEAPON);
			SCRP DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD 1 Light("FeralimpFireball2")
			{
				A_FaceTarget();
				AraneaChargeBig();
			}
			SCRP E 0
			{
				A_StopSound(CHAN_WEAPON);
				if (look) A_SetAngle(angle - 30); else A_SetAngle(angle + 30);
			}
			Goto OrbLoop;
		OrbLoop:
			SCRP E 5 Light("FeralimpFireball2")
			{
				PM_CheckForNoAmmo(5);
				if (pm_attackloop <= 0) SetStateLabel("See");
				else
				{
				A_StartSound("DEmi/CannonFire", CHAN_WEAPON, pitch: 1.5);
				A_SpawnProjectile("PM_AraneaOrb", 60, 0, 0, CMF_AIMDIRECTION|CMF_OFFSETPITCH, pitch + frandom(0, 4));
				}
			}
			SCRP D 5 { pm_attackloop--; }
			SCRP E 0
			{
				if (!look) A_SetAngle(angle - 30); else A_SetAngle(angle + 30);
			}
			Loop;
		LightningTracers:
			SCRP AD 10 A_FaceTarget();
			SCRP D 0 A_StartSound("Aranea/ArcCharge",29);
			SCRP DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD 1 Light("FeralimpFireball4")
			{
			    A_FaceTarget();
				AraneaCharge();
			}
			TNT1 A 0
			{
				A_SetAngle(angle+random(-30,30));
				A_SetPitch(pitch+random(-15,30));
			}
			SCRP EDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED 3 Light("FeralimpFireball4")
			{
				A_FaceTarget(5, 5);
				AraneaCharge();
				PM_CheckForNoAmmo(1);
				AraneaDodgeChance();
				A_StartSound("Aranea/ArcFire",30,CHANF_OVERLAP,pitch:frandom(0.95,1.25));
				A_SpawnProjectile("PM_AraneaArcs", 60, 0, frandom(-2, 2), CMF_AIMDIRECTION|CMF_OFFSETPITCH, pitch + frandom(-2, 2) + 2);
			}
			Goto See;
		Sniper:
			SCRP AD 10 A_FaceTarget();
			SCRP D 0
			{
				A_SpawnParticleEx("", TexMan.CheckForTexture("PLAGC0"), style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT, lifetime: 60, size: 250.0, xoff: 12, zoff: 65, startalphaf: 0.3, fadestepf: -1, sizestep: -25, startroll: random(-180,180), rollvel: frandom(-5, 5));
				A_StartSound("Plasmatron/MortarCharge", 9, pitch: 1.5);
				pm_attackloop = random(1, 2);
			}
			SCRP DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD 1 Light("FeralimpFireball2")
			{
				AraneaAimLaser();
				AraneaCharge();
				AraneaDodgeChance();
				A_FaceTarget();
			}
			Goto SniperLoop;
		SniperLoop:
			SCRP E 5 Light("FeralimpFireball2")
			{
				PM_CheckForNoAmmo(5);
				PM_LeadTarget(50);
				A_SpawnProjectile("PM_AraneaSniper", 60, flags: CMF_AIMDIRECTION|CMF_OFFSETPITCH, pitch + 2);
				A_StartSound("MechaAraneaBeamFire", 9);
			}
			SCRP E 30 Light("FeralimpFireball2")
			{
				A_FaceTarget();
				pm_attackloop--;
				if (pm_attackloop <= 0) SetStateLabel("SniperEnd");
			}
			Loop;
		SniperEnd:
			SCRP D 5 A_StartSound("MechaAraneaBeamCooldown", 10);
			SCRP DDDDDDDDDDDDDD 2 A_FaceTarget();
			Goto See;
		Copy:
			SCRP E 0
			{
				A_StartSound("GenericChargeHeavy", 20);
				A_StartSound("MechaAranea/Active", CHAN_VOICE);
			}
			SCRP DDDDDDDDDDDDDDDDDDDDD 1 Light("FeralImpFireball3") A_FaceTarget();
			SCRP D 0 A_Jump(256, "CopyForlornWalker", "CopyFusionite", "CopyPlasmaTron");
			Goto CopyFusionite;
		CopyFusionite:
			SCRP E 1
			{
				A_StartSound("Fusionite/ScatterCharge",13);
				AraneaCopyFX();
			}
			SCRP DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD 1 Light("FeralImpFireball3")
			{
				A_FaceTarget();
				AraneaCharge();
			}
			Goto FusionCopy;
		FusionCopy:
			SCRP DE 1 Light("FeralImpFireball3")
			{
				A_FaceTarget(2,2);
				if (!(GetAge() % 3))
				{
					A_SpawnProjectile("PM_GreenFusioniteFireFlare",60,0);
					A_SpawnProjectile("PM_SmallFusionShot",60,0,frandom(-4,4),CMF_OFFSETPITCH|CMF_AIMDIRECTION,pitch+frandom(-3,3)+2);
				}
				PM_CheckForNoAmmo(1);
				if (!(GetAge() % 6)) A_SpawnProjectile("PM_FusionShot",60,0,0,CMF_OFFSETPITCH|CMF_AIMDIRECTION,pitch*1 + 2);
				if (!(GetAge() % 28)) { PM_CheckForNoAmmo(3); A_StartSound("Fusionite/Scattershot",10,volume:0.75,pitch:1.5); A_SpawnProjectile("PM_ScatterFusionShot",60,0,frandom(-6,6),CMF_OFFSETPITCH|CMF_AIMDIRECTION,pitch+frandom(-2,2)+2); }
			}
			SCRP D 0 A_CheckSight("See");
			Loop;
		CopyForlornWalker:
			SCRP E 1
			{
				if (user_numbullets >= 75) SlothShield(true);
				A_StartSound("PMBelphegor/AimAdd",13);
				AraneaCopyFX("WOPI");
			}
			SCRP DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD 1 Light("FeralImpFireball3")
			{
				A_FaceTarget();
				AraneaChargeBig();
			}
			Goto ForlornCopy;
		ForlornCopy:
			SCRP E random(0,5)
			{
				if (user_numbullets < 75) SlothShield(false);
				PM_CheckForNoAmmo(5);
				A_StartSound("ForlornWalker/Star", CHAN_WEAPON);
				for (int i = random(1, 2); i > 0; i--) A_SpawnProjectile("PM_CopyForlornStar", 60, 0, frandom(-50, 50), CMF_OFFSETPITCH|CMF_AIMDIRECTION, pitch+frandom(-1, 6));
				A_FaceTarget(5, 5);
			}
			SCRP D random(0, 5)
			{
				if (CheckProximity("PM_ForlornWalker", 400, 3, CPXF_CHECKSIGHT)) tics = random(2, 7);
				if (CheckProximity("PM_MechaAranea", 400, 3, CPXF_CHECKSIGHT)) tics = random(2, 7);
				A_FaceTarget(5, 5);
			}
			SCRP D 0
			{
				if (target && !CheckSight(target)) { if (shielded) SlothShield(false); SetStateLabel("See"); }
				if (!target) { if (shielded) SlothShield(false); SetStateLabel("See"); }
				if (target && target.Health <= 0) { if (shielded) SlothShield(false); SetStateLabel("See"); }
			}
			Loop;
		CopyPlasmatron:
			SCRP E 1
			{
				A_StartSound("Fusionite/SmallCharge",18,volume:1,pitch:0.65);
				AraneaCopyFX("PL01");
				sweepindex = 0;
			}
			SCRP DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD 1 Light("FeralImpFireball3")
			{
				A_FaceTarget();
				AraneaChargeBig();
			}
			Goto PlasmatronLoop1;
		PlasmatronLoop1:
			SCRP E 4 Light("FeralImpFireball4")
			{
				PM_CheckForNoAmmo(2);
				A_StartSound("Plasmatron/Fire");
				A_SpawnProjectile("PM_PTronBallCopy",60,0,SweepAngles[SweepIndex],CMF_OFFSETPITCH,pitch+2);
				for (int i = 2; i > 0; i--) A_SpawnProjectile("PM_PTronBallSmallCopy",60,0,SweepAngles[SweepIndex] + frandom(-6, 6),CMF_OFFSETPITCH,pitch+frandom(-3, 3)+2);
			}
			SCRP D 4 A_FaceTarget();
			TNT1 A 0 A_JumpIf(++sweepindex == sweepangles.size(), 1);
            Loop;
		PlasmatronLoop2:
		    TNT1 A 0 { sweepindex = 0; }
			TNT1 A 0 { sweepindex = sweepangles.size() - 1; }
			SCRP E 4 Light("FeralImpFireball4")
			{
				PM_CheckForNoAmmo(2);
				A_StartSound("Plasmatron/Fire");
				A_SpawnProjectile("PM_PTronBallCopy",60,0,SweepAngles[SweepIndex],CMF_OFFSETPITCH,pitch+2);
				for (int i = 3; i > 0; i--) A_SpawnProjectile("PM_PTronBallSmallCopy",60,0,SweepAngles[SweepIndex] + frandom(-12, 12),CMF_OFFSETPITCH,pitch+frandom(-3, 3)+2);
			}
			SCRP D 4 A_FaceTarget();
			TNT1 A 0 A_JumpIf(--sweepindex == -1, "See");
            Goto PlasmatronLoop2+2;
		Pain:
			SCRP F 2 A_StopSounds(0, 10);
			SCRP F 2 A_Pain();
			SCRP A 0 A_Jump(64,"Rush","Evade");
			Goto See;
		NoAmmo:
			TNT1 A 0 A_StartSound("ForlornWalker/Cooldown");
			TNT1 A 0 { bNOPAIN = true; }
			SCRP DDDDDDDDDDD 1 Light("Greenball3")
			{
			 A_SpawnParticleEx("", TexMan.CheckForTexture("SPKOG0"), style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT,lifetime: 3, size: 100.0, xoff: 10, zoff: 66, startalphaf: 0.9);
			 A_SpawnParticleEx("0b290c", TexMan.CheckForTexture("GNSMK0"), style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL, lifetime: random(10,100), size: frandom(30,80), xoff: random(3,5), yoff: random(-5,5), zoff: 66, velx: frandom(15,20), vely: frandom(-0.8,0.8), velz: frandom(-0.8,0.8), startalphaf: 0.3, fadestepf: -0.5, sizestep: 0.2, startroll: random(-180,180) );
			}
			TNT1 A 0 A_StartSound("PM/BigVentLoop",CHAN_7,CHANF_LOOP);
			SCRP DDDDDDDDDDDDDDDDDDDDDDDDDD 1 Light("Greenball3")
			{
			 A_SpawnParticleEx("", TexMan.CheckForTexture("SPKOG0"), style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT, lifetime: 2, size: 80.0, xoff: 10, zoff: 66, startalphaf: 0.7);
			 A_SpawnParticleEx("0b290c", TexMan.CheckForTexture("GNSMK0"), style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL, lifetime: random(20,100), size: frandom(30,80), xoff: random(16,20), yoff: random(-5,5), zoff: 66, velx: frandom(-0.8,4), vely: frandom(-0.8,0.8), velz: frandom(-0.8,0.8), startalphaf: 0.3, fadestepf: -0.5, sizestep: 0.2, startroll: random(-180,180) );
			 A_SpawnParticleEx("0b290c", TexMan.CheckForTexture("GNSMK0"), style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL, lifetime: random(25,50), size: 6, xoff: 10, yoff: random(-5,5), zoff: 66, vely: frandom(12,15), velz: frandom(-0.2,0.3), accely: -0.4, startalphaf: 0.5, fadestepf: -1, sizestep: 3, startroll: random(-180,180) );
			 A_SpawnParticleEx("0b290c", TexMan.CheckForTexture("GNSMK0"), style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL, lifetime: random(25,50), size: 6, xoff: 10, yoff: random(-5,5), zoff: 66, vely: frandom(-12,-15), velz: frandom(-0.2,0.3), accely: 0.4, startalphaf: 0.5, fadestepf: -1, sizestep: 3, startroll: random(-180,180) );
			 //A_SpawnParticleEx("0b290c", TexMan.CheckForTexture("GNSMK0"), style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL, lifetime: random(25,50), size: 6, xoff: 10, yoff: random(-5,5), zoff: 66, vely: frandom(-0.2,0.3), velz: frandom(12,15), accelz: -0.4, startalphaf: 0.5, fadestepf: -1, sizestep: 3, startroll: random(-180,180) );
			 //A_SpawnParticleEx("0b290c", TexMan.CheckForTexture("GNSMK0"), style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL, lifetime: random(25,50), size: 6, xoff: 10, yoff: random(-5,5), zoff: 66, vely: frandom(-0.2,0.3), velz: frandom(-12,-15), accelz: 0.4, startalphaf: 0.5, fadestepf: -1, sizestep: 3, startroll: random(-180,180) );
			}
			TNT1 A 0 A_StopSound(CHAN_7);
			TNT1 A 0 A_StartSound("PM/BigVentEnd",CHAN_7);
		ZReload:
			TNT1 A 0 A_StartSound("PM/ArachnoReloadStart",CHAN_5);
			SCRP A 20 A_FaceTarget();
			SCRP A 0
			{
			    alpha = 1;
				A_StartSound("Envy/SigilSummon", volume: 0.65, pitch: 0.85);
				A_StartSound("Draugr/BuffMonLoop", 9, CHANF_LOOPING, pitch: 0.9);
				A_SpawnItemEx("PM_GreatEnvyReload", flags: SXF_SETMASTER);
			}
			SCRP DE 1 Light("Greenball2")
			{
				if (reloadtimer >= 90) { bNOPAIN = false; SetStateLabel("Ready"); }
				reloadtimer++;
			}
			Goto ZReload+3;
		Ready:
			SCRP D 20
			{
				reloadtimer = 0;
				user_numbullets = random(170, 200);
				A_StopSound(9);
				A_StartSound("MechaAraneaReadyAlt", CHAN_WEAPON);
				A_StartSound("PM/NailgunReady",10);
			}
			Goto See;
		Death:
			SCRP F 6;
			SCRP F 15
			{
				A_StopSounds(0, 10);
				A_Scream();
			}
			TNT1 A 0 A_SpawnItemEx("PM_OFireBallExplode",random(-10,10),0,30);
			SCRP G 4 Light("AvatarFireball4") A_SpawnItemEx("PM_OrangeEmbersSpawn",0,0,30);
			TNT1 A 0 A_StartSound("ArachChassisExplode",CHAN_5);
			TNT1 A 0 A_SpawnItemEx("PM_OrangeEmbersSpawn",0,0,30);
			TNT1 A 0 A_SpawnItemEx("PM_OFireBallExplode",random(-10,10),0,30);
			TNT1 A 0 A_Explode(25,130);
			TNT1 AAAAA 0 { alpha = 1; A_SpawnItemEx("PM_ArachnotronGenericExplosionFlames",0,0,35,random(-7,7),random(-7,7),random(0,7)); }
			TNT1 A 0 A_NoBlocking();
			TNT1 AAAAAA 0 A_SpawnItemEx("PM_BlackInstestinGib",0,0,random(10,30),0,0,0,0,SXF_NOCHECKPOSITION);
			TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_SpawnItemEX("PM_ArachExpGoreSplash", 0, 0, 32, random (4, 10), random(4,10), random (4, 15), random(0, 360), flags: SXF_USEBLOODCOLOR);
			TNT1 A 0 A_SpawnItemEx("PM_ArachExpMist",0,0,20, flags: SXF_USEBLOODCOLOR);
			TNT1 A 0 A_StartSound("ArachExpGore",CHAN_6);
			SCRP H 6 Light("TyrantMExp");
			SCRP IJ 6 Light("TyrantMExp") A_SpawnItemEX("PM_ArachExpGoreSplash", 0, 0, 15, random (-3, 3), random(-3,3), random (4, 15), flags: SXF_USEBLOODCOLOR);
			TNT1 A 0 A_StartSound("ArachCrash",CHAN_7);
			SCRP K 6 Light("AvatarFireball4");
			SCRP LLLLLLL 3 A_SpawnItemEX("PM_ArachExpGoreSplash", 0, 0, 15, random (-3, 3), random(-3,3), random (4, 15), flags: SXF_USEBLOODCOLOR);
			SCRP L 1 A_KillMaster();
			SCRP L -1;
			Stop;
		Raise:
			SCRP LKJIHG 6;
			Goto See;
	}
}

Class PM_AraneaArcs : PMProjectileBase
{
	Default
	{
    Radius 2;
    Height 2;
    Speed 48;
    DamageFunction 9;
    Renderstyle "Add";
    Alpha 1;
    Scale 1;
    DeathSound "PM/ShockWarning";
    Projectile;
	DamageType "Electric";
	Translation "0:255=%[0,0,0]:[1.0,3.0,1.0]";
	PMProjectileBase.WhizSound "PM/PlasmaWhiz";
	PMProjectileBase.WhizRangeCheck 250;
	+BRIGHT
	}
	
	override void PostBeginPlay()
	{
	 tex[0] = TexMan.CheckForTexture("DTPRA0",TexMan.Type_Sprite);
	 tex[1] = TexMan.CheckForTexture("GRNLA0",TexMan.Type_Sprite);
	}
	TextureID tex[2];
	
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			A_SpawnParticleEx("", tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: 30, size: 180.0, xoff: -10, startalphaf: 0.35, fadestepf: -1, sizestep: 0, startroll: random(-180,180));
			A_SpawnParticleEx("", tex[1], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(2,10), size: random(60,195), xoff: -10, velx: random(-5,5), vely: random(-5,5), velz: random(-5,5), startalphaf: 0.9, startroll: random(-180,180));
		}
		Goto Go;
	Go:
		TRCR A 1
		{
		    PM_CheckWhiz();
			vel += (frandom(-0.5, 0.5), frandom(-0.5, 0.5), frandom(-0.5, 0.5));
			if(random(1,8) == 1) A_SpawnParticleEx("", tex[1],  style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(3,15), size: frandom(15,150), xoff: frandom(-30, 5), startalphaf: frandom(0.5,0.9), fadestepf: 0, sizestep: -0.3, startroll: random(-180,180), rollvel: frandom(-1,1));
			A_SpawnParticleEx("00ff00", tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT, lifetime: random(25,70), size: frandom(40,60), xoff: random(25,-25), velx: frandom(0,1), startalphaf: frandom(0.15,0.5), fadestepf: -1, sizestep: -0.05, startroll: random(-180,180));
		}
		Loop;
	Death:
		TNT1 A 0
		{
			A_StopSound(CHAN_6);
			for (int i = 2; i > 0; i--)
				A_SpawnParticleEx ("", tex[1], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(5,30), size: random(10,100), startalphaf: 0.9, fadestepf: 0, sizestep: 0, startroll: random(-180,180));
		}
		NLIT ABC 1 Bright Light("Feralfireball4");
		NLIT DEFG 1 Bright Light("Feralfireball4");
		Stop;
	}
}

Class PM_AraneaOrb : DoomImpBall
{
	Default
	{
		Radius 4;
		Height 4;
		Speed 23;
		FastSpeed 26;
		DamageFunction 30;
		Renderstyle "Add";
		ALPHA 1;
		Scale 1;
		SeeSound "HellSoldier/ChargePlas";
		DeathSound "HFuryProjExp";
		PROJECTILE;
		DamageType "Electric";
		Translation "0:255=%[0,0,0]:[0.1,3.0,0.1]";
	}
	
	override void PostBeginPlay()
	{
		super.PostBeginPlay();
		tex[0] = TexMan.CheckForTexture("DTPRA0", TexMan.Type_Sprite);
		tex[1] = TexMan.CheckForTexture("GRNLA0", TexMan.Type_Sprite);
		tex[2] = TexMan.CheckForTexture("SPKOG0", TexMan.Type_Sprite);
		tex[3] = TexMan.CheckForTexture("GNSML0", TexMan.Type_Sprite);
	}
	
	TextureID tex[4];
	
	States
	{
	Spawn:
		TNT1 A 1 Light("FeralimpFireball2")
		{
			A_SpawnParticleEx("", tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(1,2), size: frandom(40.0,200.0), xoff: -8, startalphaf: frandom(0.2,0.95), startroll: random(-180,180));
			A_SpawnParticleEx("", tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: 3, size: random(150, 160), startroll: random(-180,180));
			A_SpawnParticleEx("", tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(1,5),size: random(1,200), velx: random(-15,1), vely: random(-1,1), velz: random(-1,1), startalphaf: frandom(0,1), startroll: random(-180,180));
			A_SpawnParticleEx("", tex[1], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(1,5), size: random(1,200), velx: random(-15,1), vely: random(-1,1), velz: random(-1,1), startalphaf: frandom(0,1), startroll: random(-180,180));
			for(int i=random(1,3);i>0;i--)
				A_SpawnParticleEx("", tex[2], style: STYLE_Add, flags: SPF_FULLBRIGHT|SPF_RELATIVE, lifetime: random(5,50), size: random(2,20), xoff: -8, yoff: frandom(-25,25), zoff: frandom(-25,25), velx: frandom(-0.5,0.5), vely: frandom(-0.5,0.5), velz: frandom(-0.5,0.5), startalphaf: frandom(0.45,0.9), sizestep: -2, startroll: random(-180,180));
			A_SpawnParticleEx("", tex[3], style: STYLE_None, flags: SPF_ROLL|SPF_RELATIVE, lifetime: 100, size: 60.0, xoff: -10, startalphaf: 0.2, fadestepf: -0.1, startroll: random(-180,180));
		}
		Loop;
	Death:
		TNT1 A 0
		{
			A_StartSound("HellSoldier/ChargeExp");
			A_Explode(15, 150);
			for (int i = 6; i > 0; i--) A_SpawnParticleEx ("", tex[1], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(5,30), size: random(10,250), velx: frandom(-6, 6), vely: frandom(-6, 6), velz: frandom(-6, 6), startalphaf: 0.9, fadestepf: 0, sizestep: 0, startroll: random(-180,180));
			for (int i = 2; i > 0; i--) A_SpawnParticleEx("", tex[2], style: STYLE_Add, flags: SPF_FULLBRIGHT|SPF_RELATIVE, lifetime: random(15,30), size: random(252,450), xoff: frandom(-4, 4), yoff: frandom(-4, 4), zoff: frandom(-4, 4), velx: frandom(-0.5,0.5), vely: frandom(-0.5,0.5), velz: frandom(-0.5,0.5), startalphaf: frandom(.8,1), sizestep: -20, startroll: random(-180,180), rollvel: frandom(-4, 4));
			for (int i = random(5, 15); i > 0; i--) A_SpawnParticleEx("34eb3a", tex[3], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE, lifetime: random(50, 180), size: frandom(150, 250), xoff: frandom(-25, 25), yoff: frandom(-25, 25), zoff: frandom(-25, 25), startalphaf: frandom(.4, .8), sizestep: 5, startroll: random(-180,180), rollvel: frandom(-2, 2));
		}
		Stop;
	}
}

Class PM_AraneaSniper : PMProjectileBase
{
	Default
	{
		Projectile;
		+BLOODSPLATTER 
		+THRUGHOST
		+SEEKERMISSILE
		Decal "PM_GreenFireScorch";
		Speed 50;
		DamageFunction 40;
		Scale 1.0;
		Height 8;
		Radius 8;
		RenderStyle "Add";
		SeeSound "MechaAraneaBeamFire";
	    PMProjectileBase.WhizSound "PM/PlasmaWhiz";
	    PMProjectileBase.WhizRangeCheck 250;
	}
	
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		tex[0] = TexMan.CheckForTexture("GNSMK0",TexMan.Type_Sprite);
		tex[1] = TexMan.CheckForTexture("PLAGC0",TexMan.Type_Sprite);
		tex[2] = TexMan.CheckForTexture("PBALC0",TexMan.Type_Sprite);
		tex[3] = TexMan.CheckForTexture("GRNLA0",TexMan.Type_Sprite);
	}
 
	TextureID tex[4];

	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			A_StartSound("NetherConduit/ZapExp",volume:0.5,pitch:0.75);
			A_SpawnParticleEx("34eb3a",tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL,lifetime: random(30,100), size: frandom(65,100), xoff: -25,velx: frandom(0,2), vely: frandom(-0.4,0.4), velz: frandom(-0.4,0.7),startalphaf: frandom(0.45,0.85), fadestepf: -0.3, sizestep: frandom(0,1.4), startroll: random(-180,180), rollvel: frandom(-1,1));
			A_SpawnParticleEx("", tex[1], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: 50, size: frandom(300,400), xoff: -30, startalphaf: 1.0, startroll: random(-180,180), rollvel: frandom(-3, 3));
			A_SpawnParticleEx("", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: random(1,65), size: frandom(150,200), xoff: -34, startalphaf: 0.55, fadestepf: -1.5, startroll: random(-180,180));
			
			for(int i=random(5,15);i>0;i--)
				A_SpawnParticleEx("", tex[3], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: random(1,75), size: frandom(1,35), xoff: -22, velx: frandom(5,8), vely: frandom(-4,4), velz: frandom(-5,5), startalphaf: 1.0, fadestepf: -1, sizestep: frandom(-1,-0.1), startroll: random(-180,180));
		}
		Goto Go;
	Go:
		TRCR A 1 BRIGHT 
		{
		    PM_CheckWhiz();
			A_Quake(1,4,0,100,0);
			A_SpawnParticleEx("239127", tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: random(100,60), size: frandom(40,80), xoff: 44, velx: frandom(-.2, .2), vely: frandom(-.2, .2), velz: frandom(-.2, .2), startalphaf: 0.65, startroll: random(-180,180) );
			A_SpawnParticleEx("", tex[3], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: random(1,75), size: frandom(1,35), xoff: -22, velx: frandom(5,8), vely: frandom(-4,4), velz: frandom(-5,5), startalphaf: 1.0, fadestepf: -1, sizestep: frandom(-1,-0.1), startroll: random(-180,180));
		}
        Loop;
	Death:
	    TNT1 A 0
		{
			A_RadiusThrust(1200,300,RTF_NOIMPACTDAMAGE);
			A_QuakeEx(2,2,2,10,0,700,"",QF_RELATIVE|QF_SCALEDOWN|QF_3D,rollintensity:0.8,rollwave:0.8);
			for (int i = 2; i > 0; i--) A_SpawnParticleEx("", tex[2], style: STYLE_Add, flags: SPF_FULLBRIGHT|SPF_RELATIVE, lifetime: random(15,30), size: random(252,450), xoff: frandom(-4, 4), yoff: frandom(-4, 4), zoff: frandom(-4, 4), velx: frandom(-0.5,0.5), vely: frandom(-0.5,0.5), velz: frandom(-0.5,0.5), startalphaf: frandom(.8,1), sizestep: -20, startroll: random(-180,180), rollvel: frandom(-4, 4));
			for (int i = random(5, 15); i > 0; i--) A_SpawnParticleEx("34eb3a", tex[0], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE, lifetime: random(50, 180), size: frandom(30, 120), xoff: frandom(-25, 25), yoff: frandom(-25, 25), zoff: frandom(-25, 25), startalphaf: frandom(.4, .8), sizestep: 5, startroll: random(-180,180), rollvel: frandom(-2, 2));
			
			for(int i=random(5,15);i>0;i--)
				A_SpawnParticleEx("", tex[3], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: random(1,75), size: frandom(1,35), xoff: -22, velx: frandom(5,8), vely: frandom(-4,4), velz: frandom(-5,5), startalphaf: 1.0, fadestepf: -1, sizestep: frandom(-1,-0.1), startroll: random(-180,180));
		}
		TRCR A 0 
		{
		A_StartSound("PM/WrathTele2",20,pitch:frandom(1.25,1.60));
		A_StartSound("NetherConduit/ZapExp",21,pitch:frandom(1.20,1.50));
		}
		Stop;
	}
}

//Copy/Spell FX
Class PM_GreatEnvySprite : Actor
{
	Default
	{
		RenderStyle "AddStencil";
		Scale 1.1;
		StencilColor "Green";
		Alpha 0.85;
		+NOINTERACTION
		-SOLID
	}
	
	States
	{
	Spawn:
		#### # 1
		{
			A_FadeOut(0.025);
			A_SetScale(Scale.X + 0.045);
		}
		Wait;
	}
}

Class PM_GreatEnvyCircle : Actor
{
	Default
	{
		+CLIENTSIDEONLY
		+NOINTERACTION
		+BRIGHT
		-SOLID
		+FLATSPRITE
		Scale 0.1;
		Alpha 1;
		Translation "0:255=%[0,0,0]:[0.5,1.9,0.0]";
	}
	
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		tex[0] = TexMan.CheckForTexture("SPKOG0",TexMan.Type_Sprite);
		tex[1] = TexMan.CheckForTexture("GNSML0",TexMan.Type_Sprite);
	}
	
	textureID tex[2];
	
	States
	{
	Spawn:
		C1TE A 0 NoDelay
		{
			int rand = 2 * random(1, -1);
			for (int i = 0; i < 360; i += 10) A_SpawnParticleEx("", tex[0], STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE, 100, random(12, 16), i, frandom(5, 10), 0, frandom(0, 30), frandom(-0.1, 0.1) + 2, frandom(-0.1, 0.1) - rand, frandom(0.5, 1.5), accelx: -0.05, accely: -0.05 * (rand / 2), startalphaf: 1, fadestepf: 0.015, sizestep: -0.5, startroll: frandom(0, 360), rollvel: random(0, 1) ? 0.5 : -0.5);
			A_SpawnParticleEx("", tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(10,25), size: frandom(100, 250), zoff: 50, velx: frandom(-0.6,0.6), vely: frandom(-0.6,0.6), velz: frandom(-0.6,0.6), startalphaf: frandom(.5, 1), fadestepf: -0.5, sizestep: 30, startroll: random(-180,180), rollvel: frandom(-4, 4));
		}
		C1TE A 1 Bright
		{
			A_FadeOut(0.02);
			angle += 5;
			A_SetScale(Scale.X += 0.05);
			A_SpawnParticleEx("239127", tex[1], STYLE_Add, SPF_ROLL|SPF_RELATIVE, lifetime: 100, size: random(150,250), xoff: frandom(-60,60), yoff: frandom(-60,60), zoff: frandom(0,10), velx: frandom(-0.5,0.5), vely: frandom(-0.5,0.5), velz: frandom(0,3), startalphaf: frandom(0.6,1), fadestepf: -1, startroll: random(-180,180));
			if (!random(0, 1)) A_SpawnItemEx("PM_EnvyTeleportFire",random(-80,80),random(-80,80),0,0,0,random(3,6));
		}
		Wait;
    }
}

Class PM_GreatEnvyReload : PM_GreatEnvyCircle
{
	Default
	{
		Scale 1.5;
	}
	
	int timer;
	
	override void Tick()
	{
		super.Tick();
		if (!master) SetStateLabel("FadeOut");
		else A_Warp(AAPTR_MASTER, flags: WARPF_INTERPOLATE);
	}
	
	States
	{
	Spawn:
		C1TE A 0 NoDelay A_SpawnParticleEx("", tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(10,25), size: frandom(50, 150), zoff: 66, velx: frandom(-0.6,0.6), vely: frandom(-0.6,0.6), velz: frandom(-0.6,0.6), startalphaf: frandom(.5, 1), fadestepf: -0.5, sizestep: 30, startroll: random(-180,180), rollvel: frandom(-4, 4));
		C1TE A 1 Bright
		{
			if (++timer >= 60) SetStateLabel("FadeOut");
			angle += 8;
			A_SpawnParticleEx("239127", tex[1], STYLE_Add, SPF_ROLL|SPF_RELATIVE, lifetime: 100, size: random(150,250), xoff: frandom(-60,60), yoff: frandom(-60,60), zoff: frandom(0,10), velx: frandom(-0.5,0.5), vely: frandom(-0.5,0.5), velz: frandom(0,3), startalphaf: frandom(0.1,0.3), fadestepf: -1, startroll: random(-180,180));
		}
		Goto Spawn+1;
	FadeOut:
		C1TE A 1 Bright
		{
			angle += 8;
			A_FadeOut(0.1);
		}
		Wait;
    }
}

Class PM_CopyForlornStar : PM_ForlornStar
{
	Default
	{
		DamageFunction 20;
		Speed 5;
		FastSpeed 7;
		Translation "0:255=%[0.00,0.00,0.00]:[1.01,2.00,0.00]";
	}
	
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		tex[1] = TexMan.CheckForTexture("SPKOG0",TexMan.Type_Sprite);
		tex[2] = TexMan.CheckForTexture("PLAGC0",TexMan.Type_Sprite);
	}
	
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			for(int i=2; i>0; i--) A_SpawnParticleEx("", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(15,30), size: frandom(100,180), velx: frandom(-0.6,0.6), vely: frandom(-0.6,0.6), velz: frandom(-0.6,0.6), startalphaf: frandom(.8, 1), fadestepf: -0.5, sizestep: -10, startroll: random(-180,180), rollvel: frandom(-4, 4));
			A_SpawnParticleEx("34eb74", tex[4], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,  lifetime: 12, size: 85, xoff: -5, vely: 0, velz: 6, startalphaf: 0.9, fadestepf: -1, sizestep: -8, startroll: random(-180,180));
			A_SpawnParticleEx("34eb74", tex[4], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,  lifetime: 12, size: 85, xoff: -5, vely: 0, velz: -6, startalphaf: 0.9, fadestepf: -1, sizestep: -8, startroll: random(-180,180));
			A_SpawnParticleEx("34eb74", tex[4], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,  lifetime: 12, size: 85, xoff: -5, vely: 6, velz: 0, startalphaf: 0.9, fadestepf: -1, sizestep: -8, startroll: random(-180,180));
			A_SpawnParticleEx("34eb74", tex[4], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,  lifetime: 12, size: 85, xoff: -5, vely: -6, velz: 0, startalphaf: 0.9, fadestepf: -1, sizestep: -8, startroll: random(-180,180));
			A_StartSound("DTech/Fire", 100, CHANF_OVERLAP, 0.75, pitch: frandom(0.8, 0.95));
			//A_StartSound("SlothBall/Whiz", 100, CHANF_OVERLAP, 0.25, pitch: frandom(0.9, 1));
		}
		Goto Go;
	Go:
		SPKW E 1 BRIGHT
		{
			A_SetRoll(roll+2);
			
			A_SpawnParticleEx("34eb74", tex[3], style: STYLE_Stencil, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,  lifetime: random(10,20), size: frandom(30, 40), xoff: -8, startalphaf: frandom(0.4,0.6), fadestepf: -1, sizestep: -4, startroll: random(-180,180));
			A_SpawnParticleEx("16691e", tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: 1, size: 110, xoff: -5, startalphaf: frandom(.95, 1), fadestepf: 0, sizestep: 0, startroll: random(-180,180), rollvel: frandom(-4, 4));
			A_SpawnParticleEx("1ba829", tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: 1, size: 60, xoff: 0, startalphaf: frandom(.95, 1), fadestepf: 0, sizestep: 0, startroll: random(-180,180), rollvel: frandom(-4, 4));
			if (!random(0, 6)) A_SpawnParticleEx("", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(10,70), size: frandom(1,14), xoff: frandom(-5, 5), yoff: frandom(-5, 5), zoff: frandom(-5, 5), startalphaf: 1, fadestepf: -0.5, sizestep: -0.3,startroll: random(-180,180),rollvel: frandom(-4, 4));
			
			vel.x += frandom(-0.05, 0.05);
			vel.y += frandom(-0.05, 0.05);
			vel.z += frandom(-0.05, 0.05);
		}
		Loop;
	Death:
		TNT1 A 1
		{
			for(int i=2; i>0; i--) A_SpawnParticleEx("1ba829", tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(15,30), size: frandom(150,180), velx: frandom(-0.6,0.6), vely: frandom(-0.6,0.6), velz: frandom(-0.6,0.6), startalphaf: frandom(.5, 1), fadestepf: -0.5, sizestep: -10, startroll: random(-180,180), rollvel: frandom(-4, 4));
			A_SpawnParticleEx("", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(30,100), size: frandom(5,25), xoff: frandom(-20, 20), yoff: frandom(-20, 20), zoff: frandom(-20, 20), velz: frandom(-0.1, 1), startalphaf: 1, fadestepf: -0.5, sizestep: -1,startroll: random(-180,180));
		}
		TNT1 AAAAAAA random(0, 4) A_SpawnParticleEx("", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(30,100), size: frandom(5,25), xoff: frandom(-20, 20), yoff: frandom(-20, 20), zoff: frandom(-20, 20), velz: frandom(-0.1, 1), startalphaf: 1, fadestepf: -0.5, sizestep: -1,startroll: random(-180,180));
		Stop;
	}
}

Class PM_CopyForlornShield : PM_ForlornShield
{
	Default
	{
		Translation "0:255=%[0.00,0.00,0.00]:[1.01,2.00,1.01]";
	}

	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		tex[0] = TexMan.CheckForTexture("GNSML0",TexMan.Type_Sprite);
		tex[1] = TexMan.CheckForTexture("SPKOG0",TexMan.Type_Sprite);
		tex[2] = TexMan.CheckForTexture("PLAGC0",TexMan.Type_Sprite);
	}

	override void Tick()
	{
		Super.Tick();
		A_Warp(AAPTR_MASTER,0,0,-20, flags: WARPF_INTERPOLATE|WARPF_NOCHECKPOSITION);
		if(master && master.CountInv("PM_EnvySigilGoAway") == 1)
		 SetStateLabel("Death");
		else if(!master)
		 SetStateLabel("Death");
	}

	States
	{
	Spawn:
		BCSH AABBCCDDEEFFGGHH 1
		{
			if (!pulse)
			{
				if (alpha <= 0.02)
				{
					for(int i=random(6, 16); i>0; i--) A_SpawnParticleEx("1ba829", tex[0], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT, lifetime: random(50,200), size: frandom(100, 200), xoff: frandom(-45, 45), yoff: frandom(-45, 45), zoff: frandom(-45, 45) + 40, velx: frandom(-1, 1), vely: frandom(-1, 1), velz: frandom(-1, 1), startalphaf: frandom(.45,.7), fadestepf: -1, sizestep: 5, startroll: random(-180,180), rollvel: frandom(-1, 1));
					A_SpawnParticleEx("", tex[1], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(10,25), size: frandom(400, 600), zoff: 50, velx: frandom(-0.6,0.6), vely: frandom(-0.6,0.6), velz: frandom(-0.6,0.6), startalphaf: frandom(.5, 1), fadestepf: -0.5, sizestep: 30, startroll: random(-180,180), rollvel: frandom(-4, 4));
					for(int i=random(15,40);i>0;i--) A_SpawnParticleEx("727272",tex[2],style: STYLE_Add,flags: SPF_RELATIVE|SPF_ROLL,lifetime: random(20,45),size: frandom(2,35),xoff: frandom(-20, 20), yoff: frandom(-20, 20), zoff: frandom(-20, 20) + 50,velx: frandom(-8,8),vely: frandom(-8,8),velz: frandom(-8,12),accelz: frandom(-0.1,-0.5),startalphaf: 1.0,sizestep: -0.2,startroll: random(-180,180),rollvel: random(-4,4));
				}
				A_FadeIn(0.1);
				if (alpha >= 1) pulse = true;
			}
			else alpha = frandom(0.6, 1);

			if (!random(0, 2)) A_SpawnParticleEx("", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(30,100), size: frandom(5,25), xoff: frandom(-70, 70), yoff: frandom(-70, 70), zoff: frandom(-70, 70) + 40, velz: frandom(-0.1, 1), startalphaf: 1, fadestepf: -0.5, sizestep: -1,startroll: random(-180,180));
		}
		Loop;
	}
}

Class PM_PTronBallCopy : PM_PTronBall
{
	Default
	{
		Translation "0:255=%[0.00,0.00,0.00]:[1.01,2.00,1.01]";
		Decal "PM_GreenFireScorch";
		Speed 10;
		Fastspeed 15;
	}
	
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		tex[0] = TexMan.CheckForTexture("FLARB0",TexMan.Type_Sprite);
		tex[1] = TexMan.CheckForTexture("SPKOG0",TexMan.Type_Sprite);
		tex[2] = TexMan.CheckForTexture("FIG1A0",TexMan.Type_Sprite);
		tex[3] = TexMan.CheckForTexture("PBALC0",TexMan.Type_Sprite);
		tex[4] = TexMan.CheckForTexture("PLAGC0",TexMan.Type_Sprite);
	}
	
	States
	{
		Spawn:
		    TNT1 A 0;
			TNT1 A 0
			{
			 A_ScaleVelocity(frandom(1,1.35));
		     A_SpawnParticleEx("",tex[3],style: STYLE_Add,flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,lifetime: random(1,5),size: frandom(130,200),startalphaf: 1.0,fadestepf: 0,sizestep: frandom(0.0,3),startroll: random(-180,180));
		     A_SpawnParticleEx("",tex[4],style: STYLE_Add,flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,lifetime: random(1,7),size: frandom(90,130),startalphaf: 1.0,fadestepf: 0,sizestep: frandom(0.0,3),startroll: random(-180,180));
			}
		Go:
			DTPR O 1 Bright Light("Greenball2")
			{
		     A_SpawnParticleEx("",tex[0],style: STYLE_Add,flags: SPF_FULLBRIGHT|SPF_RELATIVE,lifetime: random(1,2),size: 35.0,xoff: frandom(-5.5,6.5),startalphaf: 0.35,fadestepf: -1,sizestep: 2);
			 A_SpawnParticleEx("",tex[1],style: STYLE_Add,flags: SPF_FULLBRIGHT|SPF_RELATIVE,lifetime: 1,size: 75.0,startalphaf: 0.55);
		     A_SpawnParticleEx("",tex[2],style: STYLE_Add,flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL,lifetime: random(1,10),size: random(35,65),xoff: frandom(-3.5,3.5),yoff: frandom(-3.5,3.5),zoff: frandom(-3.5,3.5),startalphaf: frandom(0.85,1),fadestepf: -1,sizestep: -2,startroll: random(-180,180));
			}
			Loop;
		Death:
			TNT1 A 0 A_Explode(30,100);
			TNT1 A 0 Radius_Quake (1, 54, 0, 10, 0);
			TNT1 AAAAAA 0 A_SpawnItemEx("DraugrEXParticle",random(-3,3),random(-3,3),random(-3,3),random(-10,10),random(-10,10),frandom(-2,8),flags:SXF_TRANSFERTRANSLATION);
			TNT1 A 0
			{
				A_SpawnItemEx("ZombieDropFire",flags:SXF_TRANSFERTRANSLATION, failchance:100);
				for (int i = 2; i > 0; i--) A_SpawnParticleEx ("", tex[1], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(5,30), size: random(10,250), startalphaf: 0.9, fadestepf: 0, sizestep: -10, startroll: random(-180,180));
				A_SpawnParticleEx("", tex[2], style: STYLE_Add, flags: SPF_FULLBRIGHT|SPF_RELATIVE, lifetime: random(15,30), size: random(150,250), xoff: frandom(-4, 4), yoff: frandom(-4, 4), zoff: frandom(-4, 4), velx: frandom(-0.5,0.5), vely: frandom(-0.5,0.5), velz: frandom(-0.5,0.5), startalphaf: frandom(.8,1), sizestep: -20, startroll: random(-180,180), rollvel: frandom(-4, 4));
			}
			TNT1 A 10 Light("Greenball4");
			Stop;
	}
}

Class PM_PTronBallSmallCopy : PM_PTronBallSmall
{
	Default
	{
		Translation "0:255=%[0.00,0.00,0.00]:[1.01,2.00,1.01]";
		Decal "PM_BulletHoleSmall";
		Speed 10;
		Fastspeed 15;
	}
	
	override void PostBeginPlay()
	{
	  Super.PostBeginPlay();
	  tex[0] = TexMan.CheckForTexture("SPKOG0",TexMan.Type_Sprite);
	  tex[1] = TexMan.CheckForTexture("PBALC0",TexMan.Type_Sprite);
	  tex[2] = TexMan.CheckForTexture("FIG1A0",TexMan.Type_Sprite);
	}

	override void Tick()
	{
		actor.Tick();
		{
			if(!IsFrozen())
			{
				A_SpawnParticleEx("",tex[0],style: STYLE_Add,flags: SPF_FULLBRIGHT|SPF_RELATIVE,lifetime: random(1,2),size: 15.0,xoff: frandom(-5.5,6.5),startalphaf: 0.15,fadestepf: -1);
				A_SpawnParticleEx("",tex[1],style: STYLE_Add,flags: SPF_FULLBRIGHT|SPF_RELATIVE,lifetime: 1,size: 25.0,startalphaf: 0.35);
				A_SpawnParticleEx("",tex[2],style: STYLE_Add,flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL,lifetime: random(1,5),size: random(10,35),xoff: frandom(-2.5,2.5),yoff: frandom(-2.5,2.5),zoff: frandom(-2.5,2.5),startalphaf: frandom(0.85,1),fadestepf: -1,sizestep: -2,startroll: random(-180,180));
			}
		}
	}
	States
	{
		Spawn:
			DTPR O 1 Bright Light("FeralImpFireball1");
			TNT1 A 0 A_JumpIfTracerCloser(250,"Noise");
			Loop;
		Noise:
			TNT1 A 0 A_StartSound("PM/PlasmaWhiz",3,0,0.75);
		Cont:
			DTPR O 1 Bright Light("FeralImpFireball1");
			Loop;
		Death:
			TNT1 A 0 A_SpawnItemEx("PM_OFireBallExplode", flags: SXF_TRANSFERTRANSLATION);
			TNT1 A 10 Light("FeralImpFireball1");
			Stop;
	  }
}