Class PM_Enceinte : PMLustMonsterBase
{
	Default
	{
		PMMonsterBase.CodexLore
		"Perservers of Lust, the ultimate death of innocence. They were made to serve their grotesque, venereal energy onto innocent mortals who enter the circle of Lust. Feeling the pain of the Enceinte might feel like a relaxant, but soon it will give them a slow, painful death. Even worse, mutations.
		Not only they were made for infection, but they were also made to give birth to new demons of the sin of Lust, expanding the population of the circle while decreasing innocence.
		
		Will spit lustrous substance at you and spawn a fleshy pod that gives birth to infant demon cherubs. Tends to disgust you. May also phase and spit eye lasers at will.";
		BloodType "PM_PurpleBloodBase";
		Health 510;
		Tag "Enceinte";
		Radius 31;
		Height 56;
		Mass 400;
		Speed 12;
		PainChance 66;
		SeeSound "Enceinte/Sight";
		ActiveSound "Enceinte/Active";
		PainSound "Enceinte/Pain";
		DeathSound "Enceinte/Death";
		BloodColor "ff 00 ff";
		Monster;
		+SLIDESONWALLS
		+NOTARGET
		+DONTHARMSPECIES
		+DONTHARMCLASS
		+NOINFIGHTING
		+FLOATBOB
		+NOGRAVITY
		+LOWGRAVITY
		+FLOAT
		FloatBobStrength 0.4;
		MinMissileChance 200;
		TeleFogSourceType "PM_SmallDemonicTeleportFog";
		TeleFogDestType "PM_LustTeleportFog";
		Obituary "%o felt the pleasure, but also the indescribable pain of a Enceinte.";
		StencilColor "2f1742";
	}
	
	override void Tick()
	{
		super.Tick();
		if (saccooldown > 0) saccooldown--;
	}
	
	int saccooldown;
	
	States
	{
	Spawn:
		HRN_ A 10 PM_Look();
		Loop;
	Look:
		HRN_ AAABBBCCC 4 PM_LookingForPlayer();
		TNT1 A 0 A_JumpIfTargetinLOS("Spotted",250,JLOSF_DEADNOJUMP);
		Loop;
	Spotted:
		TNT1 A 0 A_Jump(256,"Roar","RoarNoAnim");
	Roar:
		HRN_ A 5 A_FaceTarget();
		HRN_ D 5 PM_AlertSound();
		HRN_ DEEFFFFEEFEEDD 3 Light("PM_DirectorPsychicLight2")
		{
		A_FaceTarget();
		A_SpawnItemEx("PM_NymphiteDrool",1,random(-25,25),random(18,25),frandom(0,8),frandom(-1.8,1.8),frandom(-1.5,1.8),0,SXF_CLIENTSIDE|SXF_NOCHECKPOSITION,128);
		}
		Goto See;
	RoarNoAnim:
		TNT1 A 0 PM_AlertSound();
	See:
		HRN_ A 0 { bFRIGHTENED = false; A_SetRenderStyle(1, STYLE_NORMAL); }
		HRN_ AAABBBCCC 2 A_Chase();
		HRN_ A 0 A_Jump(60, "Dodge", "Phase");
		Loop;
	Dodge:
		TNT1 A 0 ThrustThing(random(0,360),16);
		TNT1 A 0 ThrustThingZ(0,13,random(0,1),1);
		HRN_ D 20
		{
			A_FaceTarget();
		}
		HRN_ D 0 A_Stop();
		Goto See;
	BackUp:
		HRN_ D 20
		{
			A_FaceTarget();
			Vel3DFromAngle(random(10, 20), 180, frandom(-30, 30));
		}
		HRN_ D 0 A_Stop();
		HRN_ D 0 A_JumpIfCloser(250, "Barf");
		Goto MissileContinue;
	Pain:
		HRN_ A 0 { bFRIGHTENED = false; A_SetRenderStyle(1, STYLE_NORMAL); }
		HRN_ E 4;
		HRN_ F 4 A_Pain();
		HRN_ F 0 A_Jump(60, "Dodge");
		Goto See;
	Phase:
		HRN_ A 0 A_SetRenderStyle(1, STYLE_ADDSHADED);
		HRN_ AABBCCAABBCCAABBCCAABBCCAABBCCAABBCCAABBCCAABBCC 1
		{
			if (!(GetAge() % 20)) bFRIGHTENED = !bFRIGHTENED;
			for (int i = 3; i > 0; i--) A_Wander();
			A_SpawnItemEx("PM_GenericPhaseGhost",flags:SXF_TRANSFERSTENCILCOL|SXF_TRANSFERALPHA|SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE,failchance:128);
		}
		HRN_ A 0 { bFRIGHTENED = false; A_SetRenderStyle(1, STYLE_NORMAL); }
		Goto See;
	Missile:
		HRN_ A 0 { bFRIGHTENED = false; A_SetRenderStyle(1, STYLE_NORMAL); }
		HRN_ D 0 A_JumpIfCloser(256, "BackUp");
		HRN_ D 0 A_Jump(150, "Sac");
		HRN_ D 0 A_Jump(130,"TinyBalls", "Laser", "Sac");
	MissileContinue:
		HRN_ D 0 A_StartSound("Enceinte/CumReady",32,CHANF_OVERLAP);
		HRN_ DDEEF 3 Light("PM_DirectorPsychicLight2") A_FaceTarget();
		HRN_ FFF 5 Light("PM_DirectorPsychicLight2")
		{
		    PM_LeadTarget(40);
			A_StartSound("Enceinte/CumReady",33,CHANF_OVERLAP,pitch: frandom(1.8, 2));
			A_SpawnProjectile("PM_EnceinteSpit", 25, 0, frandom(-10, 10), CMF_AIMDIRECTION|CMF_OFFSETPITCH, pitch + frandom(-5, 5));
		}
		HRN_ EEDD 4 Light("PM_DirectorPsychicLight2") A_FaceTarget();
		Goto See;
	Barf:
		HRN_ D 0 A_StartSound("Enceinte/CumReady", 32,CHANF_OVERLAP,pitch:0.6);
		HRN_ DDEEF 2 Light("PM_DirectorPsychicLight2") A_FaceTarget();
		HRN_ FFFFF 3 Light("PM_DirectorPsychicLight2")
		{
			A_FaceTarget();
			A_StartSound("Enceinte/CumReady",33,CHANF_OVERLAP,pitch: frandom(1.4, 1.5));
			A_SpawnProjectile("PM_EnceinteSpitNoGrav",22,0,random(-4,4),CMF_OFFSETPITCH,frandom(-2,-8));
		}
		HRN_ F 5 Light("PM_DirectorPsychicLight2") A_FaceTarget();
		HRN_ E 3 Light("PM_DirectorPsychicLight2") A_FaceTarget();
		HRN_ D 2 Light("PM_DirectorPsychicLight2") A_FaceTarget();
		Goto See;
	TinyBalls:
		HRN_ D 0 A_StartSound("Enceinte/CumReady",32,CHANF_OVERLAP);
		HRN_ DDEEF 4 Light("PM_DirectorPsychicLight2") A_FaceTarget();
		HRN_ FFFFFFFFFFFF random(2,4) Light("PM_DirectorPsychicLight2")
		{
			A_FaceTarget(4, 4);
			A_StartSound("Enceinte/CumImpact",33,CHANF_OVERLAP,pitch: frandom(1.8, 2));
			A_SpawnProjectile("PM_CherubSpit", 25, frandom(-16, 16), frandom(-16, 16), CMF_AIMDIRECTION|CMF_OFFSETPITCH, pitch + frandom(-4, 4));
		}
		HRN_ EEDD 4 Light("PM_DirectorPsychicLight2") A_FaceTarget();
		Goto See;
	Sac:
		HRN_ A 0 { if (saccooldown > 0) SetStateLabel("TinyBalls"); }
		HRN_ A 5 A_FaceTarget();
		HRN_ D 5 PM_AlertSound();
		HRN_ DEEFFFFEEDD 3
		{
		A_SpawnItemEx("PM_NymphiteDrool",1,random(-25,25),random(18,25),frandom(0,8),frandom(-1.8,1.8),frandom(-1.5,1.8),0,SXF_CLIENTSIDE|SXF_NOCHECKPOSITION,128);
		A_FaceTarget();
		}
		HRN_ D 0 A_StartSound("Enceinte/CumReady", 32,CHANF_OVERLAP,pitch: 0.8);
		HRN_ DDEEF 3 A_FaceTarget();
		HRN_ F 3
		{
			A_StartSound("Beholder/Spit", 33);
			A_StartSound("Enceinte/CumImpact",32,CHANF_OVERLAP,pitch: 0.8);
			A_SpawnItemEx("PM_EnceinteSac", 0,0,20,20,0,4,0,SXF_SETMASTER|SXF_NOCHECKPOSITION);
			saccooldown = random(200, 460);
		}
		HRN_ FEEEDDD 3 A_FaceTarget();
		Goto See;
	Laser:
		HRN_ A 10 A_FaceTarget();
		HRN_ D 5 Light("PM_DirectorPsychicLight2")
		{
			A_StartSound("GenericChargeSmall", 12);
			A_FaceTarget();
		}
		HRN_ DDDDDDDDDDDDD 2 Light("PM_DirectorPsychicLight2")
		{
			A_SpawnParticleEx("8F00FF", TexMan.CheckForTexture("SPKOP0"), style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: 10, size: random(70,130), xoff: 20, zoff: 30, startalphaf: 0.6, fadestepf: 0.1, sizestep: 0, startroll: random(-180,180));
			A_SpawnParticleEx("", TexMan.CheckForTexture("PURLA0"), style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(2,10), size: random(1,120), xoff: 20, zoff: 30, velx: random(-3,3), vely: random(-3,3), velz: random(-3,3), startalphaf: 1.0, startroll: random(-180,180));
			A_Facetarget();
		}
		HRN_ DDD 15 Light("PM_DirectorPsychicLight2")
		{
			A_StartSound("Bacillus/Proj", attenuation: 0.85);
			A_SpawnProjectile("PM_EnceinteBlast", 34, 0, frandom(40,-40),CMF_OFFSETPITCH,frandom(-12,12));
			A_FaceTarget();
		}
		HRN_ DA 10 Light("PM_DirectorPsychicLight2");
		Goto See;
	Death:
		HRN_ E 5;
		HRN_ A 0 { bFRIGHTENED = false; A_SetRenderStyle(1, STYLE_NORMAL); }
		HRN_ F 3 A_Scream();
		HRN_ FFGGHIJ 4
		{
			A_FaceTarget();
			let fx = spawn("PM_BigFireGlobs", Vec3Offset(frandom(-20, 20), frandom(-20, 20), frandom(10, 30)));
			if (fx)
			{
				fx.A_SetRenderStyle(1, STYLE_ADDSHADED);
				fx.SetShade("9a40e3");
				fx.vel = (frandom(-2, 2), frandom(-2, 2), frandom(-2, 2));
			}
		}
		HRN_ J 0 { SetShade("9a40e3"); A_SetRenderStyle(1, STYLE_ADDSHADED); }
		HRN_ J 3
		{
			A_StartSound("PMInfernal/Explode");
			for (int i = random(5, 10); i > 0; i--) A_SpawnProjectile("PM_EnceinteSpitNoGrav", 25, 0, frandom(0, 360), CMF_OFFSETPITCH|CMF_AIMDIRECTION, frandom(-10, -85));
			for (int i = 4; i > 0; i--)
			{
				let fx1 = spawn("PM_BigFireGlobs", Vec3Offset(frandom(-5, 5), frandom(-5, 5), frandom(-5, 5)));
				if (fx1)
				{
					fx1.A_SetRenderStyle(1, STYLE_ADDSHADED);
					fx1.SetShade("9a40e3");
					fx1.vel = (frandom(-4, 4), frandom(-4, 4), frandom(-4, 4));
				}
			}
			for (int i = 2; i > 0; i--)
			{
				let fx2 = spawn("PM_GenericExplosionFlames", Vec3Offset(frandom(-5, 5), frandom(-5, 5), frandom(-5, 5)));
				if (fx2)
				{
					fx2.A_SetRenderStyle(1, STYLE_ADDSHADED);
					fx2.SetShade("9a40e3");
					fx2.vel = (frandom(-2, 2), frandom(-2, 2), frandom(-2, 2));
				}
			}
			for (int i = 10; i > 0; i--) A_SpawnItemEx("PM_InfernalLavaSplashBig",random(-8,8),random(-8,8),random(-2,8),random(-8,8),random(-8,8),random(-2,8),0,SXF_NOCHECKPOSITION|SXF_TRANSFERSTENCILCOL|SXF_TRANSFERRENDERSTYLE);
		}
		TNT1 AAA 0 A_SpawnItemEX("PM_EnceinteSac", random(-20,20), random(-20,20), random(0,60), random (4, 15), random(4,15), random (4, 15), random(0, 360),SXF_NOCHECKPOSITION|SXF_SETMASTER,50);
		TNT1 AAAAAAA 0 A_SpawnItemEX("PM_PurpleMeatChunkLauncher", random(-40,40), random(-40,40), random(0,60), random (4, 15), random(4,15), random (4, 15), random(0, 360),SXF_NOCHECKPOSITION,20);
		HRN_ KLM 4;
		Stop;
	}
}

Class PM_EnceinteSpit : PM_CherubSpit
{
	Default
	{
		Speed 15;
		Scale 1;
		DamageFunction (15);
		DamageType "Plasma";
	}
	
	states
  {
  Spawn:
    BAL7 AABB 1 Bright
	{
	  A_SpawnItemEx("PM_InfernalLavaTrail",random(0,-5),random(-5,5),random(-5,5),0,frandom(-1.5,1.5),frandom(-1.5,1.5),0,SXF_CLIENTSIDE|SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
	  A_SpawnParticleEx("5d1d91",TexMan.CheckForTexture("GNSMK0"),style: STYLE_Add,flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,lifetime: random(1,45),size: frandom(15,35),xoff: random(-1,-10),yoff: frandom(-5,5),zoff: frandom(-5,5),startalphaf: 0.75,sizestep: -.5,startroll: random(-180,180));
	}
    Loop;
  Death:
    TNT1 A 0;
	TNT1 A 0 A_StartSound("Enceinte/CumImpact", volume: 0.7);
	TNT1 AAAAAAAAA 0 A_SpawnItemEx("PM_InfernalLavaTrail",xvel:random(-3,3),yvel:random(-1,3),flags:SXF_CLIENTSIDE|SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
	TNT1 A 0 A_SpawnItemEx("PM_OFireBallExplode", flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION|SXF_TRANSFERSCALE);
    Stop;
  }
}

Class PM_EnceinteSpitNoGrav : PM_EnceinteSpit
{
	Default { -NOGRAVITY Gravity 0.5; Speed 20; }
	override void PostBeginPlay()
	{
		super.PostBeginPlay();
		A_ScaleVelocity(frandom(0.5, 1.1));
	}
}

Class PM_EnceinteSac : PM_ZTrooperFragGrenade
{
  Default
  {
  Speed 20;
  Scale 1.1;
  BounceFactor 0.45;
  WallBounceFactor 0.45;
  SeeSound "Enceinte/CumReady";
  RenderStyle "Normal";
  DeathSound "";
  BounceSound "Enceinte/SacBounce";
  StencilColor "9a40e3";
  -ZDOOMTRANS
  -DEHEXPLOSION
  +DONTTHRUST;
  }
  
  name minename;
  
  States
  {
  Spawn:
	SAC_ A 1
    {
	 A_SpawnItemEx("PM_PurpleBlood2", frandom(-5, 5), frandom(-5, 5), frandom(-5, 5), flags: SXF_NOCHECKPOSITION);
     A_SetRoll(roll+15);
    }
	Loop;
  Bounce:
	Goto Spawn;
  XDeath:
  Death:
	TNT1 A 0 A_SetRoll(90);
    TNT1 A 0 A_StartSound("Enceinte/SacBounce");
	SAC_ A random(30, 80) A_SetScale(scale.x / 1.25);
	SAC_ A 0
	{
		A_StartSound("Enceinte/SacGrow",volume:0.6,pitch:frandom(0.85,0.65));
		A_SetRoll(0);
	}
	SAC_ BBBBCCCCCDDDDDD random(1, 2) A_SpawnItemEx("PM_PurpleBlood2", frandom(-5, 5), frandom(-5, 5), frandom(-5, 5), flags: SXF_NOCHECKPOSITION);
	TNT1 A 0 
	 {
	  A_StartSound("Glutton/Active",20,flags:CHANF_LOOPING,volume:0.3,pitch:frandom(0.45,0.30));
	  A_StartSound("Nymphite/Charge",21,flags:CHANF_LOOPING,volume:0.1,pitch:frandom(0.45,0.30));
	 }
  Death2:
	SAC_ DD 4 A_SetScale(scale.x+0.025);
	SAC_ DD 4 A_SetScale(scale.x-0.025);
	SAC_ DD 4 A_SetScale(scale.x+0.025);
	SAC_ DD 4 A_SetScale(scale.x-0.025);
	SAC_ DD 4 A_SetScale(scale.x+0.025);
	SAC_ DD 4 A_SetScale(scale.x-0.025);
    TNT1 A 0 
	  {
	   A_StopSounds(20,21);
	   A_StartSound("Nymphite/Death",11,pitch:1.35);
	   A_StartSound("Beholder/Sight",12,pitch:1.55);
	   A_StartSound("Beholder/BarrageReady",13);
	  }
    SAC_ DDDDDDDDDDDDDDDDDDDDD 1
	  {
	   A_SetScale(scale.x+0.020);
	   A_SpawnItemEx("PM_PurpleBlood2", frandom(-15, 15), frandom(-15, 15), frandom(-15, 15), flags: SXF_NOCHECKPOSITION);
	  }
	TNT1 A 0
	{
	    A_StopSounds(11,13);
		A_StartSound("Blob/Explode",31);
		A_StartSound("Nymphite/BallSplatter",slot:35,pitch: frandom(0.85, 1.25));
		A_StartSound("Enceinte/SacExplode",32);
	}
	TNT1 A 0 A_SetRenderStyle(1, STYLE_SHADED);
	TNT1 AAAA 0 A_SpawnItemEx("PM_BabyCherub",random(-6,6),random(-6,6),10,random(-3,3),random(-3,3),random(0,8),0,SXF_SETMASTER);
	TNT1 A 0 A_SpawnItemEx("PM_TumorBloodMist",zofs:3,flags:SXF_TRANSFERSCALE);
	TNT1 AAAAAAAAA 0 A_SpawnParticleEx("c200c2", TexMan.CheckForTexture("GNSMK0"), STYLE_Add, SPF_RELATIVE|SPF_ROLL, random(30, 75), random(90,250), xoff: frandom(1,5), yoff: frandom(-5,5), zoff: frandom(-5,5), velx: frandom(-5, 5), vely: frandom(-5, 5), velz: frandom(-4, 4), startalphaf: 1, sizestep: frandom(0, 1), startroll: random(-180,180), rollvel: frandom(-4, 4));
	TNT1 AAA 0 A_SpawnParticleEx("ff00ff",TexMan.CheckForTexture("DTPRB0"),style: STYLE_Add,flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,lifetime: 30,size: 450,xoff: -6,startalphaf: 1,startroll: random(-180,180));
	TNT1 FFFFFF 0 A_SpawnItemEX("PM_NymphiteMeatChunkLauncher", 0, 0, 0, random (4, 15), random(4,15), random (4, 15), random(0, 360),SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION,90);
	TNT1 AAAAAAAA 0 A_SpawnItemEx("PM_NormalBigMeatChunkLauncher",random(-40,40),random(-20,20),0,0,0,0,0,SXF_NOCHECKPOSITION,60);
	TNT1 AAAAAAA 0 A_SpawnItemEX("PM_NormalMeatChunkLauncher", random(-40,40), random(-20,20), 0, random (4, 15), random(4,15), random (4, 15), random(0, 360),SXF_NOCHECKPOSITION,120);
	TNT1 AAAAAA 0 A_SpawnItemEx("PM_TumorBurstBlood", random(-40,40), random(-40,40), 0, random (4, 15), random(4,15), random (4, 15), random(0, 360),SXF_NOCHECKPOSITION);
	Stop;
  }
}

Class PM_BabyCherub : PM_Cherub
{
	Default
	{
		Scale 0.5;
		SeeSound "NCherub/Idle";
		ActiveSound "NCherub/Idle";
		PainSound "NCherub/Pain";
		DeathSound "NCherub/Death";
		AttackSound "NCherub/Attack";
		Translation "172:179=0:0";
		DeathSound "Enceinte/BabyDeath";
		Health 20;
		Speed 7;
		Tag "Neonate Cherub";
		-COUNTKILL
		+THRUSPECIES
		+LOOKALLAROUND
		-FLOAT
		Species "Elemental";
		FloatSpeed 0;
		MinMissileChance 300;
		MeleeRange 150;
		Obituary "%o, for some reason, got killed by a neonate cherub.";
		HitObituary "%o, for some reason, got killed by a neonate cherub.";
		PMMonsterBase.CodexLore "";
	}
	
	override void PostBeginPlay()
	{
		super.PostBeginPlay();
		scale *= frandom(1, 1.2);
		timer = random(600, 1200);
	}
	
	int timer;
	
	override void Tick()
	{
		super.Tick();
		if (timer <= 0) A_Die();
		timer--;
	}
	
	override void PM_Gib()
	{
	  A_SpawnItemEx("PM_NormalMeatChunkLauncher",0,0,random(10,30),0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY);
	  for(int a=0;a<2;a++)
	 { A_SpawnItemEx("PM_NormalBloodMulti",0,0,32,random(-1,1),random(-1,1),random(-1,1),frandom(0,360),SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY); }
	 A_SpawnItemEx("PM_NormalBloodMist",0,0,32,random(-1,1),random(-1,1),random(-1,1),frandom(0,360),SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY);
	}
	
	States
	{
	Spawn:
		CHE_ AAAAAABBBBBBCCCCCCBBBBBB 1 { vel *= 0.98; A_FaceTarget(); }
		CHE_ AAAA 1
		{
			 A_Look();
			 A_ChangeVelocity(0, 0, 0, CVF_REPLACE);
		}
		Goto See;
	Idle:
		CHE_ A 0 A_ChangeVelocity(0, 0, 0, CVF_REPLACE);
		CHE_ AABBCCBB 2 A_Look();
		Loop;
	See:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("Cherub/FlyLoop",35,CHANF_LOOPING,0.4,1.3);
	See2:
		CHE_ A 0 A_ChangeVelocity(random(-1,1), random(-1,1), random(-1,1));
		CHE_ AABB 1 A_Chase("Melee",null);
		CHE_ CCBB 1 A_Chase("Melee",null);
		TNT1 A 0 A_Jump(40,"RandomDodge","WanderingFly");
		TNT1 A 0 A_Jump(200,"See2");
		TNT1 A 0 A_JumpIfCloser(500,"StareStart");
		Loop;
	WanderingFly:
		CHE_ A 0 A_ChangeVelocity(random(-1,1), random(-1,1), random(-1,1));
		CHE_ AABB 1 A_Wander();
		CHE_ CCBB 1 A_Wander();
		TNT1 A 0 A_Jump(20,"See2");
		Loop;
	RandomDodge:
		TNT1 A 0;
		TNT1 A 0 ThrustThing(random(0,360),16);
		TNT1 A 0 ThrustThingZ(0,13,random(0,1),1);
		CHE_ AABBCCBB 1
		{
			A_FaceTarget();
		}
		CHE_ A 0 A_ChangeVelocity(0, 0, 0, CVF_REPLACE);
		Goto See2;
	RandomStareDodge:
		TNT1 A 0;
		TNT1 A 0 ThrustThing(random(0,360),16);
		TNT1 A 0 ThrustThingZ(0,13,random(0,1),1);
		TNT1 A 0 A_FaceTarget();
		CHE_ AABBCCBB 1
		{
			A_FaceTarget();
		}
		CHE_ A 0 A_ChangeVelocity(0, 0, 0, CVF_REPLACE);
		Goto Stare;
	StareStart:
		CHE_ A 0 A_CheckSight("See2");
		CHE_ A 0 A_ChangeVelocity(0, 0, 0, CVF_REPLACE);
	Stare:
		CHE_ A 0 A_ChangeVelocity(random(-1,1), random(-1,1), random(-1,1), CVF_REPLACE);
		CHE_ AABB 1 A_FaceTarget();
		CHE_ CCBB 1 A_FaceTarget();
		TNT1 A 0 A_Jump(50,"RandomStareDodge");
		TNT1 A 0 A_Jump(50,"AttackCharge");
		TNT1 A 0 A_Jump(40,"WanderingFly","See2");
		Loop;
	AttackCharge:
		TNT1 A 0 A_JumpIfCloser(500,"Attacking");
		Goto See2;
	Attacking:
		CHE_ ADE 3 A_FaceTarget();
		CHE_ D 2 A_SkullAttack();
		CHE_ DEEEEEEEEEEEED 2
		{
		//A_SpawnProjectile("HorrorLunge",random(1,10),0,0,CMF_AIMDIRECTION|CMF_OFFSETPITCH,random(40,0));
		}
		CHE_ D 0 A_Stop();
		Goto WanderingFly;
	Melee:
		CHE_ A 0 A_ChangeVelocity(0, 0, 0, CVF_REPLACE);
		CHE_ A 0 A_Stop();
		Goto WanderingFly;
	Pain:
		CHE_ F 2;
		CHE_ F 2 A_Pain();
		CHE_ A 0 A_Jump(70, "RandomDodge", "WanderingFly");
		Goto See2;
	}
}

Class PM_CherubSpitNoGrav : PM_CherubSpit
{
	Default { -NOGRAVITY Gravity 0.5; Speed 20; }
	override void PostBeginPlay()
	{
		super.PostBeginPlay();
		A_ScaleVelocity(frandom(0.5, 1.1));
	}
}

Class PM_EnceinteBlast : PM_CherubSpit
{
	Default
	{
		Speed 13;
		Scale 1.3;
		DamageFunction (25);
		DamageType "Plasma";
		SeeSound "";
		DeathSound "GenericPlasmaExp";
		+SEEKERMISSILE
	}
	int timer;
	
	states
  {
  Spawn:
    BAL2 AABBAA 1 Bright
	{
	  if(timer > 20)
	  A_ScaleVelocity(1.01);
	  else
	  A_SeekerMissile(3,2,SMF_PRECISE);
	  A_SpawnParticleEx("",TexMan.CheckForTexture("PURLA0"),style: STYLE_Add,flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,lifetime: random(1,5),size: random(1,100),velx: random(-1,1),vely: random(-1,1),velz: random(-1,1),startalphaf: 0.9,startroll: random(-180,180));
	  A_SpawnParticleEx("",TexMan.CheckForTexture("SPKOP0"),style: STYLE_Add,flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,lifetime: random(1,120),size: frandom(0.2,20),xoff: random(-10,5),yoff: random(-10,10),zoff: random(-10,10),velx: frandom(-0.6,0.6),vely: frandom(-0.6,0.6),velz: frandom(-0.6,0.6),startalphaf: 1.0,fadestepf: -1,sizestep: -0.4,startroll: random(-180,180));
	  A_SpawnParticleEx("5d1d91",TexMan.CheckForTexture("GNSMK0"),style: STYLE_Add,flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,lifetime: random(15,35),size: frandom(65,85),xoff: random(-1,-10),yoff: frandom(-2,2),zoff: frandom(-2,2),startalphaf: 1,sizestep: -3,startroll: random(-180,180),rollvel:frandom(-4,4));
	  timer++;
	}
    Loop;
  Death:
	TNT1 A 0;
    TNT1 A 0
	{
		A_RadiusThrust(2000,180);
		 for(int i=6;i>0;i--)
		  A_SpawnParticleEx("8F00FF",TexMan.CheckForTexture("SPKOP0"),style: STYLE_Add,flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,lifetime: 10,size: 195.0,xoff: -10,startalphaf: 0.9,fadestepf: 0.1,sizestep: 0,startroll: random(-180,180));
		 for(int i=random(7,12);i>0;i--)
		  A_SpawnParticleEx("",TexMan.CheckForTexture("PURLA0"),style: STYLE_Add,flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,lifetime: random(2,10),size: random(60,295),velx: random(-4,4),vely: random(-4,4),velz: random(-4,4),startalphaf: 1.0,startroll: random(-180,180)); 
	}
	TNT1 A 0 A_SpawnItemEx("PM_PhaseBallFlare",0,0,0);
	TNT1 A 0 A_SpawnItemEx("PM_OFireBallExplode", flags: SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION|SXF_TRANSFERSCALE);
    Stop;
  }
}