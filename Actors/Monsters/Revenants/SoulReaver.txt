Class PM_DormantReaver : PMDeathMonsterBase
{
  int rush;
  double angle;
  int deathwither;
  Default
  {
  /*PMMonsterBase.CodexLore
  "These Dormant Reavers are the sentinels of Death, constantly assisting for the quietus of mortals and taking their souls.
  Not only they are good at being ghastly guards, but they are also heavily reliant on being very aggressive and agile, making them really good crusaders on the isolated badlands of hell.
  
  When engaged into battle, they will fire big spectral souls at you, and at times may fire an arbalest to destroy your living body.
  
  Sometimes, they do have an amount of souls that they have quenched for and consumed...";*/
  +DONTHARMSPECIES
  Species "Revenant";
  Tag "Dormant Reaver";
  SeeSound "DorReaver/Sight";
  PainSound "DorReaver/Pain";
  DeathSound "DorReaver/Death";
  ActiveSound "DorReaver/Active";
  Health 300;
  Speed 10;
  Radius 20;
  Height 56;
  Mass 500;
  MeleeThreshold 196;
  MeleeRange 150;
  PainChance 100;
  Monster;
  +MISSILEMORE 
  +FLOORCLIP
  Bloodtype "PM_DeathBloodBase";
  StencilColor "6fa8dc";
  BloodColor "Black";
  Obituary "%o had their soul reaved by a Dormant Reaver.";
  HitObituary "%o had their soul punched out by a Dormant Reaver.";
  TeleFogSourceType "PM_SmallDemonicTeleportFog";
  TeleFogDestType "PM_DemonicTeleportFog";
  }
  
  override void PostBeginPlay()
  {
	super.PostBeginPlay();
	tex[0] = TexMan.CheckForTexture("DUSTC0",TexMan.Type_Sprite);
	tex[1] = TexMan.CheckForTexture("GNSMK0",TexMan.Type_Sprite);
	tex[2] = TexMan.CheckForTexture("DTPRB0",TexMan.Type_Sprite);
	tex[3] = TexMan.CheckForTexture("SPKOS0",TexMan.Type_Sprite);
	deathwither = random(30,60);
  }
  TextureID tex[4];

    void PM_ReaverWither()
	{
	 A_SpawnParticleEx
	 (
	 "545454",
	 tex[1],
	 style: STYLE_None,
	 flags: SPF_ROLL|SPF_RELATIVE,
	 lifetime: random(50,160),
	 size: frandom(30,75),
	 xoff: frandom(-40,40),
	 yoff: frandom(-40,40),
	 zoff: 0,
	 velx: frandom(-1,1),
	 vely: frandom(-1,1),
	 velz: frandom(0,2),
	 startalphaf: frandom(0.2,0.95),
	 fadestepf: -1,
	 sizestep: frandom(-0.8,0.8),
	 startroll: random(-180,180),
	 rollvel: frandom(-0.3,0.3)
	 );
	 A_SpawnParticleEx
	 (
	 "848484",
	 tex[0],
	 style: STYLE_Normal,
	 flags: SPF_RELATIVE|SPF_ROLL,
	 lifetime: random(90,270),
	 size: frandom(1,32),
	 xoff: random(-40,40),
	 yoff: random(-40,40),
	 zoff: 5,
	 velx: frandom(-1,1),
	 vely: frandom(-1,1),
	 velz: frandom(0.3,4),
	 startalphaf: 1.0,
	 fadestepf: -0.05,
	 sizestep: frandom(-0.1,-1),
	 startroll: random(-180,180),
	 rollvel: random(-4,4)
	 );
	}
  
  void PM_DReaverSoulAim()
  {
	if(target && Distance3D(target) > 500)
	angle = frandom(25,35);
	else
	angle = frandom(10,20);
  }
  
  void PM_DReaverChase()
  {
   if(random(1,50) == 1 && !rush)
   rush = random(30,80);
   if(rush)
   {
    A_SetSpeed(12);
	A_Chase();
	A_SetTics(1);
    A_SpawnItemEx("PM_GenericPhaseGhost",xofs:-5,flags:SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERALPHA|SXF_TRANSFERSCALE|SXF_TRANSFERSTENCILCOL);
	A_SpawnParticleEx
	(
	"0B3D94",
	TexMan.CheckForTexture("GNSMK0"),
	style: STYLE_Add,
	flags: SPF_FULLBRIGHT|SPF_ROLL|SPF_RELATIVE,
	lifetime: random(5,50),
	size: random(35,75), xoff: random(-8,8), yoff: random(-25,25), zoff: random(-1,45),
	startalphaf: frandom(0.25,0.85), fadestepf: -1, startroll: random(-180,180));
	rush--;
   }
   else
	A_Chase();
  }
  States
  {
  Spawn:
	SRE2 G 0 NoDelay;
  Idle:
    SRE2 A 10 PM_Look();
    Loop;
  Look:
    SRE2 AABBCC 2 PM_LookingForPlayer();
	NULL A 0 A_StartSound("Cadaver/Step",5);
    TNT1 A 0 A_JumpIfTargetinLOS("Spotted",150,JLOSF_DEADNOJUMP);
	SRE2 DDEEFF 2 PM_LookingForPlayer();
	NULL A 0 A_StartSound("Cadaver/Step",5);
    Loop;
  Spotted:
    TNT1 A 0 PM_AlertSound();
  See:
    SRE2 AABBCC 2 PM_DReaverChase();
	NULL A 0 A_StartSound("Cadaver/Step",5);
	SRE2 DDEEFF 2 PM_DReaverChase();
	NULL A 0 A_StartSound("Cadaver/Step",5);
    Loop;
  Melee:
    SRE2 G 0 { if(rush) A_Recoil(-18); else A_Recoil(-13); }
	SRE2 G 2 A_FaceTarget();
    SRE2 G 4 A_StartSound("Doom4/Other/MeleeSwing",20);
    SRE2 HHHHHHHHHH 1 
	{
	if(rush)
	A_SpawnItemEx("PM_GenericPhaseGhost",xofs:-5,flags:SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERALPHA|SXF_TRANSFERSCALE|SXF_TRANSFERSTENCILCOL);
	}
    SRE2 II 1 A_SpawnProjectile("HKLunge2",flags:CMF_AIMDIRECTION);
	SRE2 IIIII 1 A_FaceTarget();
    Goto See;
  LungeCheck:
    TNT1 A 0 A_Jump(100,"SoulShotRight","SoulShotLeft");
	TNT1 A 0 A_Jump(25,"Arbalest");
    Goto Lunge;
  Lunge:
    SRE2 G 25 
	{
	if(rush)
	A_SetTics(18);
	A_FaceTarget();
	A_StartSound("DorReaver/Attack",10);
	}
	TNT1 A 0 PM_LeapTo(target,680,"See");
	Goto LungeLoop;
  LungeLoop:
	SRE2 HHHH 1 
	{
	if(rush)
	A_SpawnItemEx("PM_GenericPhaseGhost",xofs:-5,flags:SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERALPHA|SXF_TRANSFERSCALE|SXF_TRANSFERSTENCILCOL);
	if(random(1,15) == 1)
	   ThrustThing(random(0,360)*256/360,2,0,0);
	 if(target && Distance3D(target) <= 100)
	 { SetStateLabel("LungeMelee"); }
	}
	SRE2 G 0 A_CheckFloor("LungeEnd");
	Loop;
   LungeMelee:
	SRE2 I 1 A_SpawnProjectile("HKLunge",flags:CMF_AIMDIRECTION);
	SRE2 IIII 3 A_CheckFloor("LungeEnd");
	TNT1 A 0 ThrustThing(random(0,360)*256/360,2,0,0);
	Wait;
   LungeEnd:
	TNT1 A 0 A_StartSound("Fiend/Land",11);
	SRE2 I 15 { if(rush) A_SetTics(10); }
	Goto See;
  Missile:
    TNT1 A 0 A_JumpIfCloser(450,"LungeCheck");
    TNT1 A 0 A_Jump(60,"Arbalest");
	TNT1 A 0 A_Jump(120,"SeekerBalls");
	TNT1 A 0 A_Jump(240,"SoulShotRight","SoulShotLeft");
    TNT1 A 0
	{
		A_StartSound("DorReaver/Attack",10);
		A_StartSound("DorReaver/PreFire",8);
	}
	SRE2 JJJJJJJJJJJJJJJJJJJJ 1 Light("HellsFuryBall1")
	{
	PM_DReaverSoulAim();
	A_SpawnItemEx("PM_HFuryThrowFire",6,10,56,0,0,random(0,3));
	A_SpawnItemEx("PM_HFuryThrowFire",6,-17,56,0,0,random(0,3));
	A_FaceTarget();
	}
	SRE2 J 5 Light("HellsFuryBall1")
		{
		 A_StartSound("DorReaver/Fire",9);
		 A_SpawnProjectile("PM_SoulReaverShot",56,-17,angle,CMF_OFFSETPITCH,frandom(-4,4));
		 A_SpawnProjectile("PM_SoulReaverShot",56,10,-angle,CMF_OFFSETPITCH,frandom(-4,4));
		}
	SRE2 K 15;
	Goto See;
  SoulShotRight:
    TNT1 A 0 
	{
	if(random(1,4) == 1)
	A_StartSound("DorReaver/Attack",10);
	A_StartSound("DorReaver/PreFire",8);
	}
	SRE2 JJJJJJJJJJJJJJ 1 
	{
	PM_DReaverSoulAim();
	A_SpawnItemEx("PM_HFuryThrowFire",6,-17,56,0,0,random(0,3));
	A_FaceTarget();
	}
	SRE2 K 8 Bright Light("HellsFuryBall1")
		{
		 A_StartSound("DorReaver/Fire",9);
		 A_SpawnProjectile("PM_SoulReaverShot",56,-17,angle,CMF_OFFSETPITCH,frandom(-4,4));
		}
	SRE2 K 10;
	Goto See;
  SoulShotLeft:
    TNT1 A 0 
	{
	if(random(1,4) == 1)
	A_StartSound("DorReaver/Attack",10);
	A_StartSound("DorReaver/PreFire",8);
	}
	SRE2 JJJJJJJJJJJJJJ 1 
	{
	PM_DReaverSoulAim();
	A_SpawnItemEx("PM_HFuryThrowFire",6,10,56,0,0,random(0,3));
	A_FaceTarget();
	}
	SRE2 J 8 Bright Light("HellsFuryBall1")
		{
		 A_StartSound("DorReaver/Fire",9);
		 A_SpawnProjectile("PM_SoulReaverShot",56,10,-angle,CMF_OFFSETPITCH,frandom(-4,4));
		}
	SRE2 K 10;
	Goto See;
  Arbalest: //Soul Arbalest
    TNT1 A 0 
	{
	A_StartSound("DorReaver/Attack",10);
	A_StartSound("DorReaver/ArbalestReady",8,volume:0.65,attenuation:0.5);
	}
    SRE2 J 5 Light("HellsFuryBall3")
	    {
	    A_SpawnParticleEx
	    ( "", TexMan.CheckForTexture("SPKBC0"), style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,
	    lifetime: 150, size: 150, xoff: 15, yoff: 12, zoff: 56, velx: frandom(-0.10,0.10), vely: frandom(-0.10,0.10), velz: frandom(-0.10,0.10),
	    startalphaf: 1, fadestepf: -1.85, sizestep: -2.55, startroll: random(-180,180), rollvel: 5, rollacc: 1.65 );
		}
	SRE2 JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ 1 Light("HellsFuryBall1") A_FaceTarget();
	SRE2 K 8 Bright Light("HellsFuryBall2")
        {
		A_StartSound("DEmi/CannonFire",9);
		A_StartSound("DorReaver/Arbalest",11,volume:0.45,attenuation:0.65);
		A_StartSound("DorReaver/ArbalestAdd",12,volume:0.55,attenuation:0.75);
		A_SpawnProjectile("PM_SoulReaverArbalest",58,10);
		}
	SRE2 K 50;
	Goto See;
  SeekerBalls:
	TNT1 A 0 
	{
	if(random(1,4) == 1)
	A_StartSound("DorReaver/Attack",10);
	A_StartSound("DorReaver/PreFire",8,pitch:0.65);
	}
	SRE2 JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ 1 Light("HellsFuryBall3")
		{
		A_FaceTarget();
		PM_DReaverSoulAim();
		A_SpawnItemEx("PM_HFuryThrowFire",6,10,56,0,0,random(0,3));
		A_SpawnItemEx("PM_HFuryThrowFire",6,-17,56,0,0,random(0,3));
		}
	SRE2 J 8 Bright Light("HellsFuryBall2")
		{
		A_StartSound("SoulReaver/Ready",8,volume:0.65,pitch:1.35);
		A_SpawnProjectile("PM_SoulReaverSeeker",56,-17,random(-10, 10) + angle);
		A_SpawnProjectile("PM_SoulReaverSeeker",58,17,random(-10, 10) + angle);
		}
	SRE2 K 30;
	Goto See;
  Pain:
    SRE2 L 5;
    SRE2 L 5 A_Pain;
    Goto See;
  Death:
    TNT1 A 0 A_StopSounds(0,0);
    SRE2 LM 7;
    SRE2 N 7 A_Scream;
    SRE2 O 7 A_NoBlocking;
    TNT1 A 0 A_StartSound("Corpse/FallMetal",CHAN_6);
    SRE2 P 7;
    SRE2 Q 3;
  DeathLoop:
    SRE2 Q 1
	{
	if(deathwither < 0)
	SetStateLabel("DeathEnd");
	for(int i=random(1,3);i>0;i--)
	PM_ReaverWither();
	deathwither--;
	}
    Loop;
  DeathEnd:
    SRE2 QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ 1
	{
	for(int i=random(1,3);i>0;i--)
	PM_ReaverWither();
	A_FadeOut(0.015);
	}
	Wait;
  }
}

Class PM_SoulReaverShot : Actor
{
  Default
  {
    Radius 2;
    Height 2;
    Scale 0.85;
    Speed 13;
    DamageFunction 20;
    Renderstyle "Add";
    SeeSound "Harvester/SoulLaunch";
    DeathSound "Harvester/SoulExp";
	Decal "PM_DeathSoulScorchMed";
	RenderStyle "Add";
    Projectile;
    +SEEKERMISSILE
  }

 override void PostBeginPlay()
   {
    tex[0] = TexMan.CheckForTexture("GNSMK0",TexMan.Type_Sprite);
	tex[1] = TexMan.CheckForTexture("SPKOS0",TexMan.Type_Sprite);
	tex[2] = TexMan.CheckForTexture("DTPRB0",TexMan.Type_Sprite);
   }

	TextureID tex[3];

  States
  {
  Spawn:
    TNT1 A 0;
	TNT1 A 0 A_StartSound("Harvester/SoulLoop",11,CHANF_LOOPING);
  Go:
    PSMM DDEEFF 1 Bright
	{
	A_SpawnParticleEx
	( "0B3D94", tex[0], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE, lifetime: random(15,50),
	 size: 65.0, xoff: -5, startalphaf: frandom(0.25,0.65), fadestepf: -1, startroll: random(-180,180) );
	 A_SpawnParticleEx
	 ( "143B76", tex[0], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE, lifetime: random(6,40), size: 50.0,
	 xoff: -5, startalphaf: frandom(0.5,0.8), fadestepf: -1, startroll: random(-180,180) );
	A_SpawnParticleEx
	 ( "61A9FF", tex[1], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(10,70),
	 size: frandom(0.1,8), xoff: random(-4,0), yoff: random(-3,3), zoff: random(-3,3), velx: frandom(-0.6,0.6),
	 vely: frandom(-0.6,0.6), velz: frandom(-0.6,1), startalphaf: 1.0, fadestepf: -0.5, sizestep: -0.1, startroll: random(-180,180) );
	A_SeekerMissile(1,1,SMF_LOOK);
	}
    Loop;
  Death:
    TNT1 A 0
	{
	for(int i=random(4,10);i>0;i--)
	A_SpawnParticleEx
	( "0B3D94", tex[0], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE, lifetime: random(15,50),
	 size: 80.0, xoff: random(-6,6), yoff: random(-6,6), zoff: random(-4,4),
	 velx: frandom(2.5,-2.5), vely: frandom(2.5,-2.5), velz: frandom(2.5,-2.5),
	 startalphaf: frandom(0.8,1), fadestepf: -1, startroll: random(-180,180) );
	 for(int i=random(3,5);i>0;i--)
	 A_SpawnParticleEx
	 ( "143B76", tex[0], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE, lifetime: random(6,40), size: 50.0,
	 xoff: random(-6,6), yoff: random(-6,6), zoff: random(-4,4),
	 velx: frandom(2.5,-2.5), vely: frandom(2.5,-2.5), velz: frandom(2.5,-2.5),
	 startalphaf: frandom(0.6,1), fadestepf: -1, startroll: random(-180,180) );
	}
    HFBB CDE 5 Bright Light("HellsFuryBall2");
    Stop;
  }
}

Class PM_SoulReaverArbalest : Actor
{
 int lifetime;
 Default
 {
  Projectile;
  +BLOODSPLATTER 
  +THRUGHOST
  +SEEKERMISSILE
  Decal "PM_DeathSoulScorchBig";
  Height 3;
  Radius 3;
  speed 35;
  DamageFunction 30;
  scale 0.75;
  RenderStyle "Add";
  Alpha 0.60;
 }
 override void PostBeginPlay()
 {
 Super.PostBeginPlay();
 tex[0] = TexMan.CheckForTexture("GNSMK0",TexMan.Type_Sprite);
 tex[1] = TexMan.CheckForTexture("SPKBC0",TexMan.Type_Sprite);
 tex[2] = TexMan.CheckForTexture("SPKBA0",TexMan.Type_Sprite);
 tex[3] = TexMan.CheckForTexture("DUSTC0",TexMan.Type_Sprite);
 tex[4] = TexMan.CheckForTexture("BLULA0",TexMan.Type_Sprite);
 tex[5] = TexMan.CheckForTexture("DTPRB0",TexMan.Type_Sprite);
 }
 
 TextureID tex[6];

States
{
	Spawn:
        TNT1 A 0;
		TNT1 A 0
		{
		A_SpawnParticleEx
			(
			"0B3D94",
			tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL,
			lifetime: random(10,90), size: frandom(65,100), xoff: -25,
			velx: frandom(0,2), vely: frandom(-0.4,0.4), velz: frandom(-0.4,0.7),
			startalphaf: frandom(0.45,0.85), fadestepf: -0.3, sizestep: frandom(0.0,1.4), 
			startroll: random(-180,180), rollvel: frandom(-1,1)
			);
			A_SpawnParticleEx
			( "", tex[1], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: random(5,35),
			size: frandom(150,230), xoff: -34, startalphaf: 0.75,
			fadestepf: 0, startroll: random(-180,180)
			);
			A_SpawnParticleEx
			( "", tex[1], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: random(1,65),
			size: frandom(150,200), xoff: -34, startalphaf: 0.55,
			fadestepf: -1.5, startroll: random(-180,180)
			);
			for(int i=random(5,15);i>0;i--)
			A_SpawnParticleEx
			( "", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,
			lifetime: random(1,75), size: frandom(1,35), xoff: -22,
			velx: frandom(5,8), vely: frandom(-4,4), velz: frandom(-5,5),
			startalphaf: 1.0, fadestepf: -1, sizestep: frandom(-1,-0.1), startroll: random(-180,180)
			);
		}
	Go:
		TRCR A 1 BRIGHT 
		{
		A_Quake(1,4,0,100,0);
		A_SpawnParticleEx
			( "", tex[5], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: random(1,5),
			size: frandom(100,190), xoff: 44, startalphaf: 0.65,
			fadestepf: -1.5, startroll: random(-180,180) );
		}
        Loop;
	Death:
	    TNT1 A 0
		{
		 A_RadiusThrust(2000,400,RTF_NOIMPACTDAMAGE);
		 A_QuakeEx(4,4,2,40,0,700,"",QF_RELATIVE|QF_SCALEDOWN|QF_3D,rollintensity:0.8,rollwave:0.8);
		A_SpawnParticleEx
		 ( "", tex[1], style: STYLE_Add, flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, lifetime: random(2,20),
		 size: random(200,500), startalphaf: 0.95, fadestepf: -1, sizestep: -15, startroll: random(-180,180) );
		A_SpawnParticleEx
		 (
		 "", tex[2], style: STYLE_Add, flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, lifetime: random(75,120),
		 size: 350, startalphaf: 0.95, fadestepf: -3.5, sizestep: -2.55, startroll: random(-180,180));
	   for(int i=random(10,15);i>0;i--) 
	   A_SpawnParticleEx
		 ( "3d85c6", tex[1], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
		 lifetime: random(10,75), size: frandom(5,50),
		 velx: frandom(-15,15), vely: frandom(-15,15), velz: frandom(1,15),
		 accelz: frandom(-0.1,-0.9), startalphaf: frandom(0.75,1), fadestepf: -0.5,
		 sizestep: -0.5, startroll: random(-180,180));
	   for(int i=3;i>0;i--)
	   {
		A_SpawnParticleEx
		 ( "0B3D94", tex[0],
		 style: STYLE_Add, flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, lifetime: 250, 
		 size: random(80,100), xoff: frandom(-45,45), yoff: frandom(-45,45), zoff: frandom(0,35), 
		 startalphaf: 0.85, fadestepf: -1, sizestep: 2.5, startroll: random(-180,180));
		A_SpawnParticleEx
		 ( "6fa8dc", tex[0],
		 style: STYLE_Add, flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, lifetime: 150,
		 size: random(50,90), xoff: frandom(-45,45), yoff: frandom(-45,45), zoff: frandom(0,30), 
		 startalphaf: 0.85, fadestepf: -1, sizestep: 2.5, startroll: random(-180,180));
		 }
		for(int i = random(4, 8); i > 0; i--)
			A_SpawnProjectile("PM_SmallSoulReaverBall",random(0,56),random(-75,75),random(0,360),CMF_TRACKOWNER|CMF_OFFSETPITCH,random(-45,45));
		}
		TRCR A 0 A_StartSound("PM/WrathTele2",20);
	DeathLoop:
	    TNT1 AAAAAAAAAAAAAAAAAAAAA random(2,15)	A_SpawnProjectile("PM_AbhorSmallBall",random(0,56),random(-75,75),random(0,360),CMF_TRACKOWNER,random(-5,45));
		Stop;
	}
}

Class PM_SoulReaverSeeker : Actor
{
  Default
  {
    Radius 5;
    Height 5;
    Scale 1;
    Speed 12;
    DamageFunction 15;
    Renderstyle "Add";
    SeeSound "DorReaver/Fire";
    DeathSound "Harvester/SoulExp";
	Decal "PM_DeathSoulScorchMed";
    PROJECTILE;
    +SEEKERMISSILE
  }

 override void PostBeginPlay()
   {
    tex[0] = TexMan.CheckForTexture("GNSMK0",TexMan.Type_Sprite);
	tex[1] = TexMan.CheckForTexture("SPKOS0",TexMan.Type_Sprite);
	tex[2] = TexMan.CheckForTexture("DTPRB0",TexMan.Type_Sprite);
   }

	TextureID tex[3];
  
  int count;
  
  States
  {
  Spawn:
    TNT1 A 0;
	  TNT1 A 0 A_StartSound("Harvester/SoulLoop",11,CHANF_LOOPING);
	Go:
    SHBA AABBAABBAABBAABBAABBAABBAABBAABBAABBAABB 1 Bright
	{
	A_SpawnParticleEx
	 (
	 "0B3D94",
	 tex[0],
	 style: STYLE_Add,
	 flags: SPF_ROLL|SPF_RELATIVE,
	 lifetime: random(20,70),
	 size: 20.0,
	 xoff: -5,
	 startalphaf: frandom(0.25,0.65),
	 fadestepf: -1,
	 startroll: random(-180,180)
	 );
	 A_SpawnParticleEx
	 (
	 "143B76",
	 tex[0],
	 style: STYLE_Add,
	 flags: SPF_ROLL|SPF_RELATIVE,
	 lifetime: random(8,50),
	 size: 35.0,
	 xoff: -5,
	 startalphaf: frandom(0.5,0.8),
	 fadestepf: -1,
	 startroll: random(-180,180)
	 );
	A_SpawnParticleEx
	 (
	 "61A9FF",
	 tex[1],
	 style: STYLE_Add,
	 flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
	 lifetime: random(10,90),
	 size: frandom(0.1,8),
	 xoff: random(-4,0),
	 yoff: random(-3,3),
	 zoff: random(-3,3),
	 velx: frandom(-0.6,0.6),
	 vely: frandom(-0.6,0.6),
	 velz: frandom(-0.6,1),
	 startalphaf: 1.0,
	 fadestepf: -0.5,
	 sizestep: -0.1,
	 startroll: random(-180,180)
	 );
	 A_SpawnParticleEx
	 (
	 "",
	 tex[2],
	 style: STYLE_Add,
	 flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
	 lifetime: random(1,2),
	 size: frandom(10.0,200.0),
	 angle: 0,
	 xoff: -8,
	 startalphaf: frandom(0.2,0.85),
	 startroll: random(-180,180)
	 );
	}
	TNT1 A 0
	{
		if (count >= 4) SetStateLabel("FinalCharge");
		else
		{
			if (target && CheckSight(target))
			{
				for (int i = 2; i > 0; i--) A_SeekerMissile(999,999,SMF_PRECISE|SMF_LOOK);
				
				A_StartSound("DEmi/CannonFire", CHAN_BODY, attenuation: 1.2, pitch: 1.5);
				
				A_SpawnParticleEx
				(
				"0B3D94",
				tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL,
				lifetime: random(50,90), size: frandom(128,180),
				startalphaf: 1, fadestepf: -0.3, sizestep: -10, 
				startroll: random(-180,180), rollvel: frandom(-1,1)
				);
				for(int i=random(5,15);i>0;i--)
				A_SpawnParticleEx
				( "", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,
				lifetime: random(1,50), size: frandom(1,15), xoff: -22,
				velx: frandom(2,-2), vely: frandom(-2,-2), velz: frandom(-2,2),
				startalphaf: 1.0, sizestep: frandom(-1,-0.1), startroll: random(-180,180)
				);
				
				count++;
			}
		}
	}
    Loop;
  FinalCharge:
	SHBA A 0
	{
		A_StartSound("Exalt/CastAdd", CHAN_BODY, volume: 0.45, attenuation: 2.5, pitch: 1.25);
		A_ScaleVelocity(0.2);
	}
	SHBA ABABABABABABABABABABABABA 1
	{
			
			A_SpawnParticleEx
			(
			"0B3D94",
			tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL,
			lifetime: 1, size: frandom(1,200),
			startalphaf: 1, fadestepf: -0.3, sizestep: -10, 
			startroll: random(-180,180), rollvel: frandom(-1,1)
			);
			for(int i=random(1,5);i>0;i--)
			A_SpawnParticleEx
			( "", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,
			lifetime: random(1,50), size: frandom(1,15), xoff: -22,
			velx: frandom(2,-2), vely: frandom(-2,-2), velz: frandom(-2,2),
			startalphaf: 1.0, sizestep: frandom(-1,-0.1), startroll: random(-180,180)
			);
	}
	SHBA A 0
	{
		A_StartSound("Exalt/SuperBall", 8, volume: 0.45, attenuation: 2.5, pitch: 1.3);
		A_StartSound("Exalt/SuperBallExp", 9, volume: 0.45, attenuation: 2.5, pitch: 1.3);
		for (int i = 2; i > 0; i--) A_SeekerMissile(999,999,SMF_PRECISE|SMF_LOOK);
	}
	SHBA AB 1;
	Goto FinalChargeLoop;
  FinalChargeLoop:
	SHBA A 1 A_ScaleVelocity(4);
	SHBA AABB 1 Bright
	{
	A_SpawnParticleEx
	(
	"0B3D94",
	tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL,
	lifetime: 1, size: frandom(1,200),
	startalphaf: 1, fadestepf: -0.3, sizestep: -10, 
	startroll: random(-180,180), rollvel: frandom(-1,1)
	);
	for(int i=random(1,5);i>0;i--)
	A_SpawnParticleEx
	( "", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,
	lifetime: random(1,50), size: frandom(1,15), xoff: -22,
	velx: frandom(2,-2), vely: frandom(-2,-2), velz: frandom(-2,2),
	startalphaf: 1.0, sizestep: frandom(-1,-0.1), startroll: random(-180,180)
	);
	A_SpawnParticleEx
	 (
	 "0B3D94",
	 tex[0],
	 style: STYLE_Add,
	 flags: SPF_ROLL|SPF_RELATIVE,
	 lifetime: random(20,70),
	 size: 20.0,
	 xoff: -5,
	 startalphaf: frandom(0.25,0.65),
	 fadestepf: -1,
	 startroll: random(-180,180)
	 );
	 A_SpawnParticleEx
	 (
	 "143B76",
	 tex[0],
	 style: STYLE_Add,
	 flags: SPF_ROLL|SPF_RELATIVE,
	 lifetime: random(8,50),
	 size: 35.0,
	 xoff: -5,
	 startalphaf: frandom(0.5,0.8),
	 fadestepf: -1,
	 startroll: random(-180,180)
	 );
	A_SpawnParticleEx
	 (
	 "61A9FF",
	 tex[1],
	 style: STYLE_Add,
	 flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
	 lifetime: random(10,90),
	 size: frandom(0.1,8),
	 xoff: random(-4,0),
	 yoff: random(-3,3),
	 zoff: random(-3,3),
	 velx: frandom(-0.6,0.6),
	 vely: frandom(-0.6,0.6),
	 velz: frandom(-0.6,1),
	 startalphaf: 1.0,
	 fadestepf: -0.5,
	 sizestep: -0.1,
	 startroll: random(-180,180)
	 );
	 A_SpawnParticleEx
	 (
	 "",
	 tex[2],
	 style: STYLE_Add,
	 flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
	 lifetime: random(1,2),
	 size: frandom(10.0,200.0),
	 angle: 0,
	 xoff: -8,
	 startalphaf: frandom(0.2,0.85),
	 startroll: random(-180,180)
	 );
	}
	Goto FinalChargeLoop+1;
  Death:
	SHBA A 0
	{
		A_Explode(10, 128);
		A_SpawnParticleEx
			(
			"0B3D94",
			tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL,
			lifetime: random(50,90), size: frandom(128,180),
			startalphaf: 1, fadestepf: -0.3, sizestep: -10, 
			startroll: random(-180,180), rollvel: frandom(-1,1)
			);
			for(int i=random(5,15);i>0;i--)
			A_SpawnParticleEx
			( "", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,
			lifetime: random(1,75), size: frandom(1,35), xoff: -22,
			velx: frandom(5,8), vely: frandom(-4,4), velz: frandom(-5,5),
			startalphaf: 1.0, fadestepf: -1, sizestep: frandom(-1,-0.1), startroll: random(-180,180)
			);
	}
    SHBA CDEFGHIJKL 4 Bright;
    Stop;
  }
}

Class PM_SmallSoulReaverBall : PM_SmallSoulHarvesterBall { Default { SeeSound ""; Speed 15; } }

//Miniboss Version
/*Class PM_PreSoulReaver : PM_DormantReaver
{
	Default
	{
		Tag "Unusual Dormant Reaver";
		PMMonsterBase.CodexLore
		"I am the one with many names. The Reaper, Fate, Azrael, the Angel of Death. Even I have known what the power of hell is really capable of. The many souls I have consumed, they are all suffering in endless torment. The satisfaction of expunging everything is unbearable.

		/cgDo not underestimate me.";
	}
	
	bool consume;
	bool souls;
	
	override void Tick()
	{
		super.Tick();
		
		if (consume)
		{
			A_SpawnParticleEx
			(
			"0B3D94",
			tex[1],
			style: STYLE_Add,
			flags: SPF_FULLBRIGHT|SPF_ROLL|SPF_RELATIVE,
			lifetime: random(60,120),
			size: random(75,155), xoff: random(-20,20), yoff: random(-20,20), zoff: random(-1,45),
			velx: frandom(-2, 2), vely: frandom(-2, 2), velz: frandom(1, 2),
			startalphaf: frandom(0.2,0.5), fadestepf: -1, startroll: random(-180,180), rollvel: random(-2, 2)
			);
			for(int i=random(5,15);i>0;i--)
			A_SpawnParticleEx
			( "0B3D94", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,
			lifetime: random(1,50), size: frandom(1,15), xoff: -frandom(-60, 60), yoff: frandom(-60, 60), zoff: frandom(-10, 0),
			velx: frandom(-1,1), vely: frandom(-1,1), velz: frandom(1,4),
			startalphaf: 1.0, sizestep: frandom(-1,-0.1), startroll: random(-180,180)
			);
			A_SpawnParticleEx
			( "0B3D94", TexMan.CheckForTexture("SPKOS0"), style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
			lifetime: random(50,80), size: frandom(1,255), xoff: random(-50,50), yoff: random(-50,50),
			zoff: random(-10,70), startalphaf: frandom(0.1,0.2), startroll: random(-180,180) );
			Radius_Quake (1, 2, 0, 7, 0);
		}
		
		if (souls)
		{
			A_SpawnParticleEx
			(
			"000000",
			tex[1],
			style: STYLE_Normal,
			flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
			lifetime: random(200,500),
			size: frandom(0.8,30),
			xoff: random(-2000,2000),
			yoff: random(-2000,2000),
			zoff: random(-300,300),
			velx: frandom(-1,1),
			vely: frandom(-1,1),
			velz: frandom(-1,1),
			accelx: frandom(-0.1,0.1),
			accely: frandom(-0.1,0.1),
			accelz: frandom(-0.1,0.1),
			startalphaf: 1.0,
			fadestepf: 0,
			sizestep: -0.2,
			startroll: random(-180,180)
			);
		}
	}
	
	States
	{
	Spawn:
		WEL_ B 0 NoDelay;
		Goto Idle;
	Death:
		SRE2 L 0;
		SRE2 L 0 A_StopSounds(0, 0);
		SRE2 L 10 A_Scream();
		WEL_ C 0 A_StartSound("SoulReaver/Transform", 30);
		WEL_ ABBBBCCCCBBBBCCCCCBBBBCCCCC 5 PM_ReaverWither();
		WEL_ B 0 { consume = true; }
		WEL_ BBBBCCCCBBBB 5;
		WEL_ B 0
		{
			souls = true;
			A_StartSound("Harvester/SoulLaunch", 8, attenuation: 0.3, pitch: 0.45);
			A_StartSound("EntAva/Soul10", 9, attenuation: 0.3, pitch: 0.8);
			A_StartSound("GenericChargeHeavy", CHAN_6, attenuation: 0.3);
		}
		WEL_ BBDEFGHIJ 6 A_FaceTarget();
		WEL_ J 100 A_FaceTarget();
		SRE2 L 15 A_FaceTarget();
		SRE2 L 0 A_StartSound("SoulReaver/Ready", 50, attenuation: 0.5, pitch: 0.9);
		SREX AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 Light("PM_HugeFastHorrorBlackflash")
		{
			A_SpawnParticleEx
			( "8cf2ff", TexMan.CheckForTexture("SPKOS0"), style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
			lifetime: random(1,3), size: frandom(1,500), xoff: random(-50,50), yoff: random(-50,50),
			zoff: random(-10,70), startalphaf: frandom(0.5,1), startroll: random(-180,180) );
			
			A_SpawnParticleEx
			(
			"0B3D94",
			tex[1],
			style: STYLE_Add,
			flags: SPF_FULLBRIGHT|SPF_ROLL|SPF_RELATIVE,
			lifetime: random(50,25),
			size: random(75,155), xoff: random(-20,20), yoff: random(-20,20), zoff: random(-1,45),
			velx: frandom(-4, 4), vely: frandom(-4, 4), velz: frandom(2, 5),
			startalphaf: frandom(0.3,0.8), fadestepf: -1, startroll: random(-180,180), rollvel: random(-2, 2)
			);
			
			Radius_Quake (20, 2, 0, 30, 0);
		}
		Stop;
	}
}*/