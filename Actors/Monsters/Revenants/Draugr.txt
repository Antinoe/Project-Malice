Class PM_Draugr : PMPrideMonsterBase
{
	int buffgrenade;
    Default
    {
	Health 400;
	Speed 12;
	Monster;
    Radius 20;
    Height 56;
    Mass 500;
    MeleeRange 144;
    Monster;
	SeeSound "Draugr/Sight";
	PainSound "Draugr/Pain";
	DeathSound "Draugr/Death";
	ActiveSound "Draugr/Active";
	Species "Revenant";
	Scale 1.05;
	Bloodtype "PM_NormalCyberBloodBase";
	Tag "Draugr";
	HitObituary "%o was knocked out by a Draugr.";
	Obituary "%o was blown up into ashes by a Draugr.";
	+FLOORCLIP
	+DONTHARMSPECIES
	+MISSILEMORE
	+MISSILEevenMORE
	TeleFogSourceType "PM_SmallDemonicTeleportFog";
	TeleFogDestType "PM_DemonicTeleportFog";
    }

	void DraugrAimLaser(Vector2 off = (0, -18))
	{
		  if (!Target)
			 {
				return;
			 }
		double sa = sin(Angle);
		double ca = cos(Angle);
		Vector2 relOff = (off.X * ca + off.Y * sa, off.X * sa - off.Y * ca);
		PM_SpawnBolt(self, Target.Vec3Offset(0,0,Target.Height-15),"ff2424",TexMan.CheckForTexture("RLSSA0"),maxDiff: 0,scale: 0.2, offset: (relOff.X, relOff.Y, 65),baseTime: 1,fadeTime: 0);
	}
	
	void PM_DraugrLightningCharge()
	{
	 A_SpawnParticleEx
	 ( "", TexMan.CheckForTexture("SPKRA0"), style: STYLE_Add, flags: SPF_FULLBRIGHT|SPF_ROLL|SPF_RELATIVE,
	   lifetime: random(15,25), size: random(1,40), xoff: random(18,20), yoff: random(-30,-34), zoff: 65,
	   velx: frandom(0.5,5.5), vely: frandom(-5.5,5.5), velz: frandom(-5.5,5.5),
	   startalphaf: frandom(0.75,1), fadestepf: -0.95, startroll: random(-180,180));
	 A_SpawnParticleEx
	 ( "", TexMan.CheckForTexture("SPKRC0"), style: STYLE_Add, flags: SPF_FULLBRIGHT|SPF_ROLL|SPF_RELATIVE,
	   lifetime: random(1,10), size: random(150,200), xoff: random(18,20), yoff: random(-30,-34), zoff: 65,
	   velx: frandom(0.1,0.5), vely: frandom(-0.5,0.5), velz: frandom(-0.5,0.5),
	   startalphaf: frandom(0.75,1), fadestepf: -0.95, startroll: random(-180,180));
	}

  States
  {
	Spawn:
	    TNT1 A 0 NoDelay { buffgrenade = random(1,3); }
	Idle:
		DRGR A 6 PM_Look();
		Loop;
  See:
	    NULL A 0 A_StartSound("Draugr/Step",5);
		DRGR AA 5 PM_LookingForPlayer();
		TNT1 A 0 A_StartSound("Draugr/Servos",4);
		DRGR BB 6 PM_LookingForPlayer();
		DRGR CC 4 PM_LookingForPlayer();
		NULL A 0 A_StartSound("Draugr/Step",5);
		TNT1 A 0 A_JumpIfTargetInLOS("Spotted",270,JLOSF_DEADNOJUMP);
		DRGR DD 5 PM_LookingForPlayer();
		TNT1 A 0 A_StartSound("Draugr/Servos",4);
		DRGR EE 6 PM_LookingForPlayer();
		DRGR FF 4 PM_LookingForPlayer();
		TNT1 A 0 A_StartSound("Draugr/Step",5);
		Loop;
	Spotted:
	    TNT1 A 0 A_Jump(256,"Roar","Roar","SpotMissile");
		Goto See;
	Roar:
	    TNT1 A 0 PM_AlertSound();
		Goto See;
	SpotMissile:
	    TNT1 A 0 PM_AlertSound();
		Goto Missile;
  See:
	    NULL A 0 A_StartSound("Draugr/Step",5);
		TNT1 A 0 A_Recoil(-0.6);
		DRGR AA 5; //A_Chase();
		TNT1 A 0 A_StartSound("Draugr/Servos",4);
		DRGR BB 6 A_Chase();
		TNT1 A 0 A_Recoil(-1.2);
		DRGR CC 4 A_Chase();
		NULL A 0 A_StartSound("Draugr/Step",5);
		TNT1 A 0 A_Recoil(-0.6);
		DRGR DD 5; //A_Chase();
		TNT1 A 0 A_StartSound("Draugr/Servos",4);
		DRGR EE 6 A_Chase();
		TNT1 A 0 A_Recoil(-1.2);
		DRGR FF 4 A_Chase();
		TNT1 A 0 A_StartSound("Draugr/Step",5);
		Loop;
	Melee:
	    TNT1 A 0 A_StartSound("Draugr/GunAim",5);
		DRGR JJJJJJJJJJJJJ 1 A_FaceTarget();
		DRGR J 15 A_StartSound("Director/Servo",6);
		TNT1 A 0 A_Recoil(-8);
		DRGR K 6 A_FaceTarget();
		TNT1 A 0 A_SpawnProjectile("PM_DraugrPunch",flags:CMF_AIMDIRECTION);
		DRGR L 6;
		Goto See;	
  Missile:
	TNT1 A 0 A_Jump(45,"FocusedLightning");
	TNT1 A 0 A_Jump(122,"BuffGrenadeCheck");
  FireCannon:
	TNT1 A 0 A_StartSound("Draugr/GunAim");
	DRG2 ABC 5 A_FaceTarget();
    DRGR GGGGGGGG 1
    {
    	A_FaceTarget();
    }
    DRGR H 6 Bright Light("AvatarFireball4");
	TNT1 A 0 A_StartSound("Draugr/Fire", CHAN_6);
    DRGR I 8 Light("AvatarFireball4")  
	{
	A_SpawnProjectile("PM_DraugrFastBall",66,-15,0,0);
	A_SpawnProjectile("PM_CadaverFireFlare",66,-15);
	A_SpawnProjectile("PM_CadaverFireFlare",66,-15);
	}
    DRGR I 12 A_FaceTarget();
	TNT1 A 0 A_StopSound(2);
    Goto See;
  FocusedLightning:
    TNT1 A 0 A_StartSound("Draugr/RocketAim",8);
    DRG2 AAABBBB 3 A_FaceTarget();
	TNT1 A 0 {
	A_SetAngle(random(-30,30));
	A_SetPitch(random(-35,25));
	}
	TNT1 A 0 A_StartSound("Draugr/LightningReady",9);
	DRG2 CCCCCCCCCCCCCCC 1 PM_DraugrLightningCharge();
    DRGR GGGGGGGGGGGGGGGGGGGGGGGGGGG 1 PM_DraugrLightningCharge();
    DRGR G 6 Bright Light("Shadowball4") A_FaceTarget();
	TNT1 A 0 A_StartSound("Draugr/LightningFire",CHAN_6);
	TNT1 A 0 A_StartSound("Draugr/LightningLoop",CHAN_5,CHANF_LOOPING);
	TNT1 A 0 { pm_attackloop = random(90,150); }
   FLightningLoop:
    DRGR G 2 Light("Shadowball2") 
	{
	if(pm_attackloop < 0)
	SetStateLabel("FLightningEnd");
	A_SpawnProjectile("PM_DraugrLightningArcs",56,-15,0,CMF_AIMDIRECTION|CMF_OFFSETPITCH,(pitch*1));
	A_FaceTarget(0.95,0.95);
	pm_attackloop--;
	}
    Loop;
   FLightningEnd:
	TNT1 A 0 A_StopSound(5);
    TNT1 A 0 A_StartSound("Draugr/BuffMonEnd",CHAN_7);
    DRGR III 5 A_FaceTarget(1,1);
	DRGR A 25 {
	A_StartSound("PM/ArachnoReload",8);
	A_SpawnItemEx("PM_EmptyHeavyMag",-10,0,45,frandom(-1,-5),frandom(2,-2),random(5,12));
	}
	Goto See;
  BuffGrenadeCheck:
	TNT1 A 0 A_CheckProximity("FireCannon","PM_DraugrBuffCircle",800);
	TNT1 A 0 A_CheckProximity("FireCannon","PM_DraugrBuffGrenade",800);
    TNT1 A 0 A_CheckProximity("BuffGrenade","PMMonsterBase",600,4,CPXF_ANCESTOR|CPXF_CHECKSIGHT);
	Goto FireCannon;
  BuffGrenade:
    TNT1 A 0;
    TNT1 A 0 
	{ 
	 if(buffgrenade == 0) 
	 SetStateLabel("FireCannon"); 
	}
	TNT1 A 0 A_StartSound("Draugr/Sight3",CHAN_7);
	DRG2 ABC 6 A_FaceTarget();
	DRG2 DDDEEEFFFGGGHHHGGGFFFEEGGHGGFFEE 1 Light("ShadowBall3") A_SpawnProjectile("DHomingFlare",62,-15);
	TNT1 A 0 A_CheckProximity("FireCannon","PM_DraugrBuffCircle",800);
	TNT1 A 0 A_CheckProximity("FireCannon","PM_DraugrBuffGrenade",800);
	DRGR H 3 Bright;
	TNT1 A 0 A_StartSound("GrenadeLaunch");
	DRGR I 6 
	{
	for(int a=0;a<2;a++)
	{ A_SpawnProjectile("PM_CadaverFireFlare",66,-15); }
	A_SpawnProjectile("PM_DraugrBuffGrenade",62,-15,0,CMF_AIMDIRECTION,-15);
	buffgrenade--;
	}
	DRGR G 6;
	Goto See;
  Pain:
    DRGR M 5;
    DRGR M 5 A_Pain;
    Goto See;
  XDeath:
  Death:
    TNT1 A 0 A_StopSounds(0,0);
	TNT1 A 0 A_NoBlocking;
    DRGR NO 5;
	DRGR P 6 A_Scream;
	DRGR Q 6;
    TNT1 A 0 A_StartSound("Corpse/FallMetal",CHAN_6);
	DRGR R 6;
	DRGR S -1;
    Stop;
  Raise:
    DRGR Q 5;
    DRGR PONM 5;
    Goto See;
  }
}

class PM_DraugrBuffCircle: Actor
{
Default
{
+CLIENTSIDEONLY
+NOINTERACTION
+Bright;
Radius 20;
Height 1;
+NOBLOCKMAP
+FLATSPRITE
Scale 2;
Alpha 1;
Translation "0:255=%[0,0,0]:[2.0,0.1,0.1]";
}
States
{
Spawn:
    C1TE AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 2 Bright
	{
	A_Setangle(8+Angle);
	}
Fade:
	C1TE A 5 Bright
	{
	A_Setangle(8+Angle);
	A_FadeOut(0.1);
	}
    Loop;
    }
}



Class DraugrFastFire : Actor
{
  Default
  {
  +NOINTERACTION
  +CLIENTSIDEONLY
  +ROLLSPRITE
  +FORCEXYBILLBOARD
  Renderstyle "Add";
  Scale 0.35;
  +Bright
  }
  States
  {
  Spawn:
	TNT1 A 1;
	TNT1 A 0 A_SetRoll(random(0,360));
  Go:
	TNT1 A 0 A_SetScale(Scale.X-0.02);
	F1R1 A 1 BRIGHT A_FadeOut(0.07);
	Loop;
	}
}

Class DHomingFlare : Actor
{
  Default
  {
  +NOINTERACTION
  +NOGRAVITY
  +FORCEXYBILLBOARD
  +CLIENTSIDEONLY
  Renderstyle "Add";
  Radius 1;
  Height 1;
  Scale 0.25;
  Alpha 0.5;
  Speed 8;
  Projectile;
  }
states
	{
	Spawn:
		TNT1 A 0;
		LENR A 2 bright;
		stop;
	}
}

Class DraugrEXParticle : Actor
{
  Default
  {
  +MISSILE
 // +NOINTERACTION
  //+CLIENTSIDEONLY
  +ROLLSPRITE
  +FORCEXYBILLBOARD
  Bouncetype "Doom";
  BounceFactor 0.5;
  Gravity 0.3;
  Renderstyle "Add";
  Scale 0.35;
  +Bright
  }
  States
  {
  Spawn:
	TNT1 A 0 NoDelay A_SetRoll(random(0,360));
  Go:
	F1R1 A 1 A_FadeOut(0.07);
	TNT1 A 0 A_SpawnItemEx("OrangeFireEffect",0,0,0,frandom(-1,0),0,frandom(0,1),0,SXF_TRANSFERALPHA);
	Loop;
	}
}

Class PM_DraugrPunch : BaronBall
{
    Default
	{
	Radius 12;
	Height 48;
	Projectile; 
    Speed 20;
	FastSpeed 20;
    DamageFunction 25;
	+RANDOMIZE
    +NOBLOOD
	+FORCEXYBILLBOARD
	+THRUGHOST
	+NODAMAGETHRUST
    DamageType "Melee";
	SeeSound "";
	DeathSound "Doom4/Other/MeleeHit";
	Decal "";
	}
	
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 1;
		Stop;
	Death:
		TNT1 A 0 BRIGHT;
		TNT1 A 10;
		Stop;
	Crash:
	XDeath:
		TNT1 A 0 BRIGHT;
		TNT1 A 10 A_RadiusThrust(4500,80);
		Stop;
	}
}

Class PM_DraugrFastBall : RevenantTracer
{
    Default
    {
	Radius 2;
	Height 2;
	DamageFunction (40);
	Speed 33;
	Projectile;
	+RANDOMIZE
	RENDERSTYLE "Add";
	DamageType "Fire";
	SeeSound "Draugr/Proj";
	DeathSound "Cadaver/MissileExp";
	Decal "Scorch";
	Scale 1.3;
    }
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0
		{
		A_SpawnParticleEx
			(
			"#d2d2d2",
			TexMan.CheckForTexture("GNSMK0"),
			style: STYLE_Normal,
			flags: SPF_RELATIVE|SPF_ROLL,
			lifetime: random(10,250),
			size: frandom(30,80),
			angle: 0,
			xoff: -25,
			yoff: 0,
			zoff: 0,
			velx: frandom(0,2),
			vely: frandom(-0.4,0.4),
			velz: frandom(-0.4,0.7),
			accelx: 0,
			accely: 0,
			accelz: 0,
			startalphaf: frandom(0.3,0.5),
			fadestepf: -0.5,
			sizestep: frandom(0.0,1.4),
			startroll: random(-180,180),
			rollvel: frandom(-1,1)
			);
			A_SpawnParticleEx
			(
			"",
			TexMan.CheckForTexture("LEYSO0"),
			style: STYLE_Add,
			flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,
			lifetime: random(6,9),
			size: frandom(230,350),
			xoff: -20,
			startalphaf: 1.0,
			fadestepf: -0.002,
			sizestep: frandom(0.0,3),
			startroll: random(-180,180)
			);
			A_SpawnParticleEx
			(
			"",
			TexMan.CheckForTexture("LEYSO0"),
			style: STYLE_Add,
			flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,
			lifetime: random(7,15),
			size: frandom(150,250),
			xoff: -20,
			startalphaf: 1.0,
			fadestepf: -0.002,
			sizestep: frandom(0.0,3),
			startroll: random(-180,180)
			);
			A_SpawnParticleEx
			(
			"",
			TexMan.CheckForTexture("LEYSO0"),
			style: STYLE_Add,
			flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,
			lifetime: random(6,10),
			size: frandom(260,450),
			xoff: -20,
			startalphaf: 1.0,
			fadestepf: -0.002,
			sizestep: frandom(0.0,3),
			startroll: random(-180,180)
			);
		}
	Go:
		PRJ3 AABB 1 BRIGHT Light("AvatarFireball4") 
		{
		A_SpawnParticleEx
	    (   
		 "fd9c35",
		 TexMan.CheckForTexture("GNSML0"),
		 style: STYLE_Add,
		 flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,
		 lifetime: random(25,85),
		 size: random(40,70),
		 xoff: random(-3,-18),
		 velx: frandom(0,1),
		 startalphaf: 0.9,
		 fadestepf: -1,
		 sizestep: -1,
		 startroll: random(-180,180)
	    );
	A_SpawnParticleEx
	(
		"",
		TexMan.CheckForTexture("GNSML0"),
		style: STYLE_None,
		flags: SPF_ROLL|SPF_RELATIVE,
		lifetime: random(200,600),
		size: random(40,68),
		xoff: random(-1,-25),
		velx: frandom(0,1),
		startalphaf: 0.4,
		fadestepf: -1,
		sizestep: 0.5,
		startroll: random(-180,180)
	);
       A_SpawnParticleEx
	   (
		"",
		TexMan.CheckForTexture("LENRA0"),
		style: STYLE_Add,
		flags: SPF_RELATIVE|SPF_FULLBRIGHT,
		lifetime: random(20,80),
		size: 45.0,
		xoff: random(-2,-25),
		velx: frandom(0,1),
		startalphaf: 0.9,
		fadestepf: -1,
		sizestep: -0.05
	    );
		 A_SpawnParticleEx
	   (
		"",
		TexMan.CheckForTexture("LENRA0"),
		style: STYLE_Add,
		flags: SPF_RELATIVE|SPF_FULLBRIGHT,
		lifetime: random(40,80),
		size: 45.0,
		xoff: random(-1,-60),
		velx: frandom(0,1),
		startalphaf: 0.9,
		fadestepf: -1,
		sizestep: -0.05
	    );
       A_SpawnParticleEx
	   (
		"",
		TexMan.CheckForTexture("LENRA0"),
		style: STYLE_Add,
		flags: SPF_RELATIVE|SPF_FULLBRIGHT,
		lifetime: 1,
		size: 80.0,
		xoff: -10,
		startalphaf: 0.7,
		fadestepf: 0,
		sizestep: 0
	    );
		A_SpawnParticleEx
	    (
		"",
		TexMan.CheckForTexture("SPKOA0"),
		style: STYLE_Add,
		flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
		lifetime: random(2,250),
		size: frandom(0.2,10),
		xoff: random(-10,5),
		yoff: random(-5,5),
		zoff: random(-5,5),
		velx: frandom(-0.6,0.6),
		vely: frandom(-0.6,0.6),
		velz: frandom(-0.6,0.6),
		startalphaf: 1.0,
		fadestepf: -1,
		sizestep: -0.05,
		startroll: random(-180,180)
		);
		A_SpawnParticleEx
	    (
		"",
		TexMan.CheckForTexture("SPKOA0"),
		style: STYLE_Add,
		flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
		lifetime: random(5,300),
		size: frandom(0.2,10),
		xoff: random(-10,5),
		yoff: random(-5,5),
		zoff: random(-5,5),
		velx: frandom(-0.6,0.6),
		vely: frandom(-0.6,0.6),
		velz: frandom(-0.6,0.6),
		startalphaf: 1.0,
		fadestepf: -1,
		sizestep: -0.05,
		startroll: random(-180,180)
		);
		}
		Loop;
	Death:
		TNT1 A 1 Bright A_RadiusThrust(1000,90);
		TNT1 A 0 A_StartSound("SmallMissileExplosion");
		TNT1 A 0 A_SpawnItemEx("OrangeExplosionFlareSmall");
		TNT1 AA 0 A_SpawnItemEx("OrangeEmbersSpawn");
		TNT1 A 0 A_SpawnItemEx("OFireBallExplode");
		TNT1 A 0 A_SpawnItemEx("OrangeShockwave");
		TNT1 AA 0 A_SpawnItemEx("PM_DraugrFastFireballExpFlames");
		TNT1 AAAA 0 A_SpawnProjectile("PM_DarkExpSmoke",7,0,random(0,360),2,random(0,360));
		TNT1 AAAAA 0 A_SpawnItemEx("PM_ExileFireShrapnel",0,0,0,random(-2,15),random(-2,15),random(-2,15),0,SXF_NOCHECKPOSITION);
		TNT1 AAA 0 A_SpawnItemEx("PM_ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 AAAA 0 A_SpawnProjectile("FiendBallExplode",0,0,random(0,360),CMF_OFFSETPITCH,random(0,360));
		FSHT BBCCDDEE 1 BRIGHT Light("AvatarFireball1");
		Stop;
	}
}

Class PM_DraugrHeavyRocket : RevenantTracer
{
    Default
    {
	Radius 3;
	Height 3;
	Scale 1.3;
	DamageFunction (50);
	Speed 16;
	Projectile;
	+RANDOMIZE
	+SEEKERMISSILE
	Decal "BigScorch";
	RenderStyle "Normal";
	SeeSound "";
	DeathSound "Tyrant/RocketExp";
    }
	States
	{
	Spawn:
		CBRK AAAAAA 2
		{
		//A_SpawnItemEx("FireSmoke",random(-1,1),0,random(-1,1));
		A_SpawnItemEx("DevilBallSmoke",random(-1,1),random(-1,1),0,0,0,0,0,128,50);
		//A_ChangeVelocity(-1,0,0,CVF_RELATIVE);
		A_SetSpeed(7);
		}
		CBRK AA 2
		{
		//A_ChangeVelocity(-1,0,-1,CVF_RELATIVE);
		A_SetSpeed(3);
		}
	GoStart:
		TNT1 A 0 A_StartSound("Draugr/RocketLaunch",CHAN_6,CHANF_LOOPING,1.0);
		TNT1 A 0 A_SetSpeed(16);
		TNT1 A 0 A_SeekerMissile(4,6,SMF_PRECISE);
	Go:
		CBRK AA 1 BRIGHT Light("AvatarFireball4") 
		{
		A_SpawnItemEx("PM_DraugrRocketFireGlobs",random(-2,2),random(-2,2),random(-2,2),0,0,0,0,128,0);
		A_SpawnItemEx("DevilBallSmoke",random(-1,1),random(-1,1),0,0,0,0,0,128,50);
		A_SpawnItemEx("PM_CadaverRocketFlare",0,0,0);
		}
		TNT1 A 0 A_JumpIfTracerCloser(550,"DetectStart");
		Loop;
	DetectStart:
	    TNT1 A 0 A_StartSound("Draugr/RocketLock",CHAN_5);
		TNT1 A 0 A_SetSpeed(20);
	Detect:
		CBRK AAAAAA 1 BRIGHT Light("AvatarFireball4") 
		{
		A_SpawnItemEx("PM_DraugrRocketFireGlobs",random(-2,2),random(-2,2),random(-2,2),0,0,0,0,128,0);
		A_SpawnItemEx("DevilBallSmoke",random(-1,1),random(-1,1),0,0,0,0,0,128,50);
		A_SpawnItemEx("HomingFlare",0,0,0);
		A_SeekerMissile(1,2,SMF_LOOK);
		}
		Loop;
	Death:
		TNT1 A 0 
		{
		A_Explode(40,250);
		Radius_Quake (2, 34, 0, 10, 0);
		}
		TNT1 A 0 A_RadiusThrust(9000,90);
		TNT1 A 0 A_StartSound("BigExplosionDistant", CHAN_7);
		TNT1 A 0 A_SpawnItemEx("OrangeShockwaveBig");
		TNT1 A 0 A_SpawnItemEx("OrangeExplosionFlare");
		TNT1 A 0 A_SpawnItemEx("OrangeEmbersSpawn");
		TNT1 AAA 0 A_SpawnItemEx("PM_ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 AAAAAAA 0 A_SpawnItemEx("PM_GenericExplosionFlames",0,0,0,random(-3,3),random(-3,3),random(-2,3),0,SXF_NOCHECKPOSITION);
		TNT1 A 0 A_SpawnItemEx("OFireBallExplode");
		TNT1 AAA 0 A_SpawnItemEx("PM_ExileFireShrapnel",0,0,0,random(-2,15),random(-2,15),random(-2,15),0,SXF_NOCHECKPOSITION,70);
		TNT1 AAAA 0 A_SpawnItemEx("PM_ExplosionLongerSmokeBig",0,0,1,random(-8,8),random(-8,8),random(0,3),0,0,70);
		TNT1 AAAAAAAA 0 A_SpawnItemEx("PM_HectebusBallExplode",0,0,0,random(-5,5),random(-5,5),random(-5,5),random(0,360));
		TNT1 A 18 BRIGHT Light("TyrantMExp");
		Stop;
	}
}

Class PM_DraugrLightningArcs : Actor
{
  Default
  {
    Radius 2;
    Height 2;
    Speed 60;
    DamageFunction 7;
    Renderstyle "Add";
    ALPHA 0.85;
    Scale 1.75;
    DeathSound "NetherConduit/SmallZap";
    PROJECTILE;
	Decal "PM_RedFireScorch";
	DamageType "Electric";
	//Translation "0:255=%[0,0,0]:[3.0,0.0,0.3]";
	+ROLLSPRITE
	}
  override void PostBeginPlay()
	{
	 Super.PostBeginPlay();
	 tex[0] = TexMan.CheckForTexture("DTPRR0",TexMan.Type_Sprite);
	 tex[1] = TexMan.CheckForTexture("REDLA0",TexMan.Type_Sprite);
	 tex[2] = TexMan.CheckForTexture("SPKRA0",TexMan.Type_Sprite);
	 tex[3] = TexMan.CheckForTexture("SPKRC0",TexMan.Type_Sprite);
	}
	TextureID tex[4];
  States
  {
  Spawn:
	TNT1 A 0;
	TNT1 A 0
	{
	 A_SpawnParticleEx
	  (
	  "",
	  tex[0],
	  style: STYLE_Add,
	  flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
	  lifetime: random(1,20),
	  size: 180.0,
	  xoff: -10,
	  startalphaf: 0.85,
	  fadestepf: -1,
	  sizestep: 0,
	  startroll: random(-180,180)
	  );
	  A_SpawnParticleEx
	    (
		"",
		tex[1],
		style: STYLE_Add,
		flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
		lifetime: random(2,25),
		size: random(60,195),
		xoff: -10,
		velx: frandom(-0.1,0.1),
		vely: frandom(-0.1,0.1),
		velz: frandom(-0.1,0.1),
		startalphaf: 0.9,
		startroll: random(-180,180)
	    );
	  }
  Go:
	TRCR A 1 Bright
	{
	  if(random(1,5) == 1)
	  A_SpawnParticleEx
	    (
		"",
		tex[1],
		style: STYLE_Add,
		flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
		lifetime: random(2,25),
		size: random(5,100),
		xoff: -10,
		velx: frandom(-0.5,0.5),
		vely: frandom(-0.5,0.5),
		velz: frandom(-0.5,0.5),
		startalphaf: frandom(0.45,0.9),
		startroll: random(-180,180)
	    );
	}
    Loop;
  Death:
	TNT1 A 0
	{
	 A_SpawnParticleEx
	  ( "", tex[3], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
	  lifetime: random(1,20), size: 200.0, xoff: -10, startalphaf: 0.85,
	  fadestepf: -1, startroll: random(-180,180) );
	A_SpawnParticleEx
	  ( "", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
	  lifetime: random(1,100), size: random(1,30), xoff: frandom(-3,3), yoff: frandom(-3,3), zoff: frandom(-3,3),
	  velx: frandom(-1.5,1.5), vely: frandom(-1.5,1.5), velz: frandom(-0.5,1.5),
		accelz: -0.005,
		startalphaf: 0.9,
		startroll: random(-180,180)
	    );
		A_SpawnParticleEx
	    (
		"",
		tex[1],
		style: STYLE_Add,
		flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
		lifetime: random(5,30),
		size: random(20,195),
		startalphaf: 0.9,
		startroll: random(-180,180)
	    );
	}
    TNT1 AAA 1 Bright Light("Shadowball2");
	TNT1 AA 1 Bright Light("Shadowball3");
    Stop;
  }
}

Class PM_DraugrBuffGrenade : Rocket
{
  int grenadetime;
  int bufftime;
  Default
  {
  Speed 16;
  Scale 0.66;
  Radius 4;
  Height 10;
  Gravity 0.8;
  Bouncetype "Hexen";
  BounceFactor 0.44;
  WallBounceFactor 0.66;
  BounceCount 2;
  SeeSound "";
  DeathSound "";
  BounceSound "ZTrooper/FragBounce";
  Decal "";
  -NOGRAVITY
  -ROCKETTRAIL
  +THRUACTORS
  +ROLLSPRITE
  +CANBOUNCEWATER
  +BOUNCEONCEILINGS
  }
  States
  {
  Spawn:
	GRNP A 1 Light("DefilerFire1")
    {
		A_SpawnParticleEx
		(
		"#d12e2e",
		TexMan.CheckForTexture("GNSMK0"),
		style: STYLE_Add,
		flags: SPF_RELATIVE|SPF_FULLBRIGHT,
		lifetime: random(25,50),
		size: frandom(15,25),
		xoff: frandom(-1,1),
		yoff: frandom(-1,1),
		zoff: frandom(-2,2),
		velx: frandom(-0.2,0.2),
		vely: frandom(-0.2,0.2),
		velz: frandom(-0.2,0.2),
		startalphaf: frandom(0.90,1),
		fadestepf: -1
		);
    }
	Loop;
  Death:
    TNT1 A 0 A_StartSound("Draugr/BuffNade",CHAN_7);
  Death2:
	GRNP AA 6 Light("DefilerFire1")
		{
		A_RadiusThrust(-800,450,RTF_NOIMPACTDAMAGE|RTF_NOTMISSILE);
		if(grenadetime >= 14)
		SetStateLabel("BuffStart");
		if(grenadetime > 12)
		A_SetTics(1);
		if(grenadetime > 3)
		A_SetTics(5);
		if(grenadetime > 8)
		A_SetTics(3);
		A_SpawnParticleEx
		(
		"",
		TexMan.CheckForTexture("SPKRA0"),
		style: STYLE_Add,
		flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
		lifetime: frandom(4,10),
		size: frandom(60,450),
		angle: 0,
		xoff: 0,
		yoff: 0,
		zoff: 00,
		velx: 0,
		vely: 0,
		velz: 0,
		accelx: 0,
		accely: 0,
		accelz: 0,
		startalphaf: 1.0,
		fadestepf: -1,
		sizestep: 0,
		startroll: random(-180,180),
		rollvel: frandom(-5,5),
		rollacc: 0
		);
		grenadetime++;
		}
	Loop;
  BuffStart:
	TNT1 A 0 
	{
	A_StartSound("Draugr/BuffStart",CHAN_7);
	A_StartSound("Draugr/BuffLoop",CHAN_6,CHANF_LOOP,0.85);
	A_RadiusGive("PM_DraugrPrideBuffGiver",250,RGF_MONSTERS|RGF_NOSIGHT);
	A_SpawnParticleEx
		(
		"",
		TexMan.CheckForTexture("DTPRR0"),
		style: STYLE_Add,
		flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
		lifetime: 70,
		size: 1000,
		angle: 0,
		xoff: 0,
		yoff: 0,
		zoff: 0,
		velx: 0,
		vely: 0,
		velz: 0,
		accelx: 0,
		accely: 0,
		accelz: 0,
		startalphaf: 1.0,
		fadestepf: -1,
		sizestep: 0,
		startroll: random(-180,180),
		rollvel: frandom(-5,5),
		rollacc: 0
		);
	}
	TNT1 AAAAAAAAAAAAAA 0
	{
	A_SpawnParticleEx
				(
				"AF0000",
				TexMan.CheckForTexture("GNSMK0"),
				style: STYLE_Translucent,
				flags: SPF_ROLL|SPF_RELATIVE,
				lifetime: random(150,500),
				size: 10.0,
				angle: 0,
				xoff: random(100,-100),
				yoff: random(100,-100),
				zoff: random(0,30),
				velx: frandom(-1,1),
				vely: frandom(-1,1),
				velz: 0,
				accelx: frandom(-0.05,0.05),
				accely: frandom(-0.05,0.05),
				accelz: 0,
				startalphaf: frandom(0.2,0.5),
				fadestepf: -0.5,
				sizestep: 4,
				startroll: random(-180,180),
				rollvel: frandom(-1,1),
				rollacc: 0
				);
		A_SpawnParticleEx
		(
		"",
		TexMan.CheckForTexture("SPKRA0"),
		style: STYLE_Add,
		flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
		lifetime: frandom(10,50),
		size: frandom(60,450),
		angle: 0,
		xoff: frandom(-100,100),
		yoff: frandom(-100,100),
		zoff: 00,
		velx: 0,
		vely: 0,
		velz: 0,
		accelx: 0,
		accely: 0,
		accelz: 0,
		startalphaf: 1.0,
		fadestepf: -1,
		sizestep: 0,
		startroll: random(-180,180),
		rollvel: frandom(-5,5),
		rollacc: 0
		);
		}
	TNT1 AAA 0 A_SpawnItemEx("PM_RedShockwave");
	TNT1 A 0 A_SpawnItemEx("PM_DraugrBuffCircle");
	GRNP AA 1 Light("ShadowBall");
	GRNP AA 1 Light("ShadowBall2");
	GRNP AA 1 Light("ShadowBall3");
	GRNP AA 1 Light("ShadowBall4");
  Buff:
    GRNP AA 2 Light("ShadowBall4")
	{
		if (bufftime >= 250)
		SetStateLabel("XDeath");
		A_SpawnParticle("Red",SPF_FULLBRIGHT|SPF_RELATIVE,random(50,100),frandom(1,3),frandom(-80,80),frandom(-80,80),frandom(0,56));
		A_SpawnItemEx("PM_DraugrBuffOrbs",frandom(-150,150),frandom(-150,150),frandom(0,56),0,0,0,0,SXF_NOCHECKPOSITION,128);
		A_SpawnParticleEx
		(
		"#d12e2e",
		TexMan.CheckForTexture("SPKOA0"),
		style: STYLE_Add,
		flags: SPF_RELATIVE|SPF_FULLBRIGHT,
		lifetime: random(50,150),
		size: frandom(15,25),
		xoff: frandom(-100,100),
		yoff: frandom(-100,100),
		zoff: frandom(0,60),
		velx: frandom(-0.2,0.2),
		vely: frandom(-0.2,0.2),
		velz: frandom(-0.2,0.2),
		startalphaf: frandom(0.90,1),
		fadestepf: -1
		);
		A_SpawnParticleEx
		(
		"#d12e2e",
		TexMan.CheckForTexture("GNSMK0"),
		style: STYLE_Add,
		flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
		lifetime: random(50,150),
		size: frandom(65,105),
		xoff: frandom(-100,100),
		yoff: frandom(-100,100),
		zoff: frandom(0,60),
		velx: frandom(-0.2,0.2),
		vely: frandom(-0.2,0.2),
		velz: frandom(-0.2,0.2),
		startalphaf: frandom(0.10,0.30),
		fadestepf: -1,
		startroll: random(-180,180)
		);
		bufftime++;
    }
	Loop;
   XDeath:
    TNT1 A 0 A_StartSound("Draugr/BuffEnd",CHAN_6,CHANF_DEFAULT,0.85);
    GRNP A 0;
    Stop;
	}
}

Class PM_DraugrBuffOrbs : Actor
{
 int bufforbtime;
 Default
 {
 +NOBLOCKMAP
 +NOGRAVITY
 +FORCEXYBILLBOARD
 RenderStyle "Add";
 Alpha 0.0;
 }
 States
 {
 Spawn:
  TNT1 A 0;
  TNT1 A 0
  {
   A_SetRoll(random(0,360));
   A_SetScale(frandom(0.05,0.15));
  }
  DTPR RRRRR 2 Light("ShadowBall") A_SetRenderStyle(0.1,STYLE_Add);
  DTPR RRRRR 2 Light("ShadowBall2") A_SetRenderStyle(0.3,STYLE_Add);
  DTPR RRRRR 2 Light("ShadowBall3") A_SetRenderStyle(0.5,STYLE_Add);
  DTPR RRRRR 2 Light("ShadowBall4") A_SetRenderStyle(0.6,STYLE_Add);
 BuffTime:
  DTPR RR 2 Light("ShadowBall4")
  {
   if(bufforbtime >= 30)
   SetStateLabel("BuffOver");
   A_RadiusGive("PM_DraugrPrideBuffGiver",50,RGF_MONSTERS|RGF_NOSIGHT);
   bufforbtime++;
  }
  Loop;
 BuffOver:
  DTPR RRRRR 2 Light("ShadowBall") A_SetRenderStyle(0.6,STYLE_Add);
  DTPR RRRRR 2 Light("ShadowBall2") A_SetRenderStyle(0.5,STYLE_Add);
  DTPR RRRRR 2 Light("ShadowBall3") A_SetRenderStyle(0.4,STYLE_Add);
  DTPR RRRRR 2 Light("ShadowBall5") A_SetRenderStyle(0.3,STYLE_Add);
  DTPR RRRRR 2 Light("ShadowBall") A_SetRenderStyle(0.1,STYLE_Add);
  Stop;
 }
}

Class PM_DraugrPrideBuffGiver : Inventory
{
 Default
 {
 +INVENTORY.AUTOACTIVATE;
 +INVENTORY.ALWAYSPICKUP;
 }
 
 Override bool Use(bool pickup)
  {
   if(!owner)
  return false;
   if(Owner is "PMMonsterBase")
     {
	 if(owner.bBOSS == false && !(owner is "PM_Draugr"))
	  owner.GiveInventory("PM_DraugrPrideBuff",1);
	 }
  return true;
  }
}
   
Class PM_DraugrPrideBuff : Powerup
{
  Default
  {
   +INVENTORY.AUTOACTIVATE;
   +INVENTORY.ALWAYSPICKUP;
   Powerup.Duration -15;
  } 
  
  Override Void PostBeginPlay()
  {
  if(owner && owner.health > 0)
   {
	//owner.A_ClearTarget();
    owner.A_AttachLightDef("PrideBuff","ShadowBall4");
    owner.A_StartSound("Draugr/BuffMonGet",CHAN_6,CHANF_OVERLAP,0.85);
    owner.A_StartSound("Draugr/BuffMonLoop",CHAN_7,CHANF_OVERLAP|CHANF_LOOP,0.65);
    for(int a=0;a<15;a++)
    owner.A_SpawnItemEx("PM_SmallRedLightningVFX",random(-45,45),random(-35,35),random(0,35),random(-1,1),random(-1,1),random(-1,1),0,SXF_NOCHECKPOSITION,64);
    for(int a=0;a<5;a++)
    owner.A_SpawnItemEx("PM_NetherFireShrapnel",random(-35,35),random(-35,35),random(0,35),random(0,6),random(-5,5),random(-1,3),0,SXF_NOCHECKPOSITION);
   }
  }
  
  Override void DoEffect()
  {
  Super.DoEffect();
  if(owner.health > 0 && !IsFrozen()) //[NERU] particle code by Dusted, i just changed the color tbh
   owner.A_SpawnItemEx("PM_SmallRedLightningVFX",random(-45,45),random(-35,35),random(0,35),0,0,0,0,SXF_NOCHECKPOSITION,128);
   owner.A_SpawnParticle("#d12e2e",SPF_FULLBRIGHT|SPF_RELATIVE,random(12,18),frandom(8,14),random(0,360),random(0,radius),0,random(4,height),random(0,1),0,random(2,5),0,0,0.4,1,-1,-1);
   owner.A_SetTics(int(owner.tics/1.5));
   owner.bNOINFIGHTING = true;
   owner.bNOTARGET = true;
   //owner.bLOOKALLAROUND = true;
  }
  
  Override Void DetachFromOwner()
  { 
  if(owner && owner.health > 0)
   {
    owner.A_StopSounds(0,0);
    owner.A_StartSound("Draugr/BuffMonEnd",CHAN_7,CHANF_OVERLAP,0.35);
    owner.A_RemoveLight("PrideBuff");
    for(int a=0;a<15;a++)
    owner.A_SpawnItemEx("PM_SmallRedLightningVFX",random(-45,45),random(-35,35),random(0,35),random(-1,1),random(-1,1),random(-1,1),0,SXF_NOCHECKPOSITION,64);
   }
  }
   
 
  Override Void OwnerDied()
  {
   owner.A_StopSounds(0,0);
   owner.A_RemoveLight("PrideBuff");
   Destroy();
  }
}