Class PM_Hellion : PMUnaffMonsterBase
{
  bool shield;
  int bufftimer;
  int bufflimit;
  Default
  {
	//$Category "PM_Monsters/Imps"
    Obituary "A Hellion burned %o to a crisp.";
    Health 140;
    Radius 20;
    Height 56;
    Mass 120;
    Speed 11;
	Scale 1.1;
    PainChance 44;
    SeeSound "Hellion/Sight";
	Species "Imp";
    PainSound "Hellion/Pain";
    DeathSound "Hellion/Death";
    ActiveSound "Hellion/Active";
	Tag "Hellion";
	Bloodtype "PM_NormalBloodBase";
	+MISSILEMORE
    Monster;
    +FloorClip
	+DONTHARMSPECIES
	TeleFogSourceType "PM_SmallDemonicTeleportFog";
	TeleFogDestType "PM_DemonicTeleportFog";
  }
  
  override void PM_LookingForPlayer()
  {
   super.PM_LookingForPlayer();
   bufftimer++;
  }
   
  void PM_HellionChase()
  {
   	{
	A_Chase();
	bufftimer++;
	}
  }

  States
  {
  Spawn:
    HELN AB 10 PM_Look();
    Loop;
  Look:
	TNT1 A 0 A_StartSound("Imp/Step",4);
	TNT1 A 0 {bFRIGHTENED = false;}//A_ChangeFlag("FRIGHTENED",0);
    HELN AABBCC 2 PM_LookingForPlayer();
	TNT1 A 0 A_Jump(35,"LookBuffCheck");
	TNT1 A 0 A_JumpIfTargetinLOS("Spotted",180,JLOSF_DEADNOJUMP);
	TNT1 A 0 A_StartSound("Imp/Step",4);
	HELN DDEEFF 2 PM_LookingForPlayer();
	TNT1 A 0 A_Jump(35,"LookBuffCheck");
    Loop;
  Spotted:
  Roar:
  TNT1 A 0 PM_AlertSound();
	See:
	TNT1 A 0 A_StartSound("Imp/Step",4);
	TNT1 A 0 {bFRIGHTENED = false;}//A_ChangeFlag("FRIGHTENED",0);
    HELN AABBCC 2 PM_HellionChase();
	TNT1 A 0 A_Jump(35,"BuffCheck");
	TNT1 A 0 A_StartSound("Imp/Step",4);
	HELN DDEEFF 2 PM_HellionChase();
	TNT1 A 0 A_Jump(35,"BuffCheck");
    Loop;
  BuffCheck: 
    TNT1 A 0 
	{
	if(bufftimer < 70)
	 SetStateLabel("See");
	if(bufflimit > 3)
	 SetStateLabel("See");
	}
	TNT1 A 0 A_CheckProximity("BuffingTime","PMMonsterBase",100,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT);
	Goto See;
  LookBuffCheck:
    TNT1 A 0 
	{
	if(bufftimer < 70)
	 SetStateLabel("Look");
	if(bufflimit > 3)
	 SetStateLabel("Look");
	}
    TNT1 A 0 A_CheckProximity("LookBuffingTime","PMMonsterBase",100,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT);
	Goto Look;
  BuffingTime:
	TNT1 A 0;
	TNT1 A 0 { 
	bufftimer = 0;
	bufflimit += 1;
	}
	TNT1 A 0 {bFRIGHTENED = true;} //A_ChangeFlag("FRIGHTENED",1);
	2ELN A 1 Light("Greenball3");
	TNT1 A 0 A_StartSound("Hellion/Sight",CHAN_6);
	TNT1 A 0 A_StartSound("Hellion/BuffGive",CHAN_7);
	TNT1 A 0 A_RadiusGive("PM_HellionMendingBuffGiver",100,RGF_MONSTERS,1,limit:1);
	2ELN AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 Light("Greenball3")
	{
	A_SpawnItemEx("PM_HellionHandFire",5,-30,68,frandom(-1,1),frandom(-1,1),frandom(0,5));
	A_SpawnItemEx("PM_HellionHandFire",5,30,68,frandom(-1,1),frandom(-1,1),frandom(0,5));
	}
	2ELN AAAAAAAAAAAAAAAAAAAA 1 Light("Greenball2")
	{
	A_SpawnItemEx("PM_HellionHandFire",0,-30,68,frandom(-1,1),frandom(-1,1),frandom(0,5));
	A_SpawnItemEx("PM_HellionHandFire",0,30,68,frandom(-1,1),frandom(-1,1),frandom(0,5));
	}
	Goto See;
  LookBuffingTime:
	TNT1 A 0;
	TNT1 A 0 { 
	bufftimer = 0;
	bufflimit += 1;
	}
	TNT1 A 0 {bFRIGHTENED = true;} //A_ChangeFlag("FRIGHTENED",1);
	2ELN A 1 Light("Greenball3");
	TNT1 A 0 A_StartSound("Hellion/Sight",CHAN_6);
	TNT1 A 0 A_StartSound("Hellion/BuffGive",CHAN_7);
	TNT1 A 0 A_RadiusGive("PM_HellionMendingBuffGiver",100,RGF_MONSTERS,1,limit:1);
	2ELN AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 Light("Greenball3")
	{
	A_SpawnItemEx("PM_HellionHandFire",5,-30,68,frandom(-1,1),frandom(-1,1),frandom(0,5));
	A_SpawnItemEx("PM_HellionHandFire",5,30,68,frandom(-1,1),frandom(-1,1),frandom(0,5));
	}
	2ELN AAAAAAAAAAAAAAAAAAAA 1 Light("Greenball2")
	{
	A_SpawnItemEx("PM_HellionHandFire",0,-30,68,frandom(-1,1),frandom(-1,1),frandom(0,5));
	A_SpawnItemEx("PM_HellionHandFire",0,30,68,frandom(-1,1),frandom(-1,1),frandom(0,5));
	}
	Goto Look;
  Missile:
    TNT1 A 0
	{
	 if(random(1,8) == 1 && target && CheckSight(target) && Distance3D(target) < 1200)
	 SetStateLabel("Geyser");
	}
    TNT1 A 0 A_Jump(75,"Burst");
    TNT1 A 0 A_Jump(45,"Barrage","SweepRight","SweepLeft");
  SpreadShot:
    HELN G 0 A_VileStart();
    HELN G 6 Bright { A_FaceTarget(360,180); }
	HELN HIJK 6 Bright;
	HELN KKKKKKKKKKKK 1 Bright A_SpawnItemEx("PM_HuskRushFire",random(-10,10),random(-16,16),random(5,65),0,0,frandom(1,3));
    HELN L 6 Bright 
	{
	A_StartSound("FeralImp/Ireball",11,flags:CHANF_OVERLAP,pitch:0.75);
	for(int i=random(5,9);i>0;i--)
	A_SpawnProjectile("PM_HellionFlare",32,0,random(-8,8),CMF_AIMDIRECTION,pitch+frandom(-2,2));
	}
    HELN L 2;
    Goto See;
  Burst:
    TNT1 A 0 { pm_attackloop = random(5,8); }
    HELN G 0 A_VileStart();
    HELN G 6 Bright { A_FaceTarget(360,180); }
	HELN HIJK 6 Bright;
	HELN KKKKKKKKKKKK 1 Bright A_SpawnItemEx("PM_HuskRushFire",random(23,30),random(-8,8),random(32,45),0,0,frandom(1,3));
  BurstGo:
    HELN L 3 Bright 
	{
	if(pm_attackloop < 0)
	SetStateLabel("AttackEnd");
	A_StartSound("FeralImp/Ireball",11);
	A_SpawnProjectile("PM_HellionFlare",32,0,random(-4,4),CMF_AIMDIRECTION,pitch+frandom(-2,2));
	pm_attackloop--;
	}
    HELN L 1;
	Loop;
  Barrage:
    HELN G 0 A_VileStart();
	HELN G 1 Bright { A_FaceTarget(360,180); }
    HELN GGGGGGGHHHHHHHIIIIIIIJJJJJJJKKKKKKKKKKKKKK 1 Bright Light("AvatarFireball1")
	{
    A_SpawnItemEx("PM_HuskRushFire",random(-10,10),random(-16,16),random(5,65),0,0,frandom(1,3));
	A_FaceTarget();
	}
  BarrageGo:
    HELN L 5 Bright 
	{
	A_StartSound("FeralImp/Ireball",11,flags:CHANF_OVERLAP);
    A_SpawnProjectile("PM_HellionHoming",32,0,random(-30,30),CMF_OFFSETPITCH,random(3,-10));
	A_FaceTarget();
	}
    HELN L 2;
	TNT1 A 0 A_CheckSight("AttackEnd");
	TNT1 A 0 A_Jump(5,"AttackEnd");
	Loop;
  AttackEnd:
    HELN L 10;
    Goto See;
  SweepRight:
    TNT1 A 0 { pm_attackloop = 45; }
    HELN G 0 A_VileStart();
	HELN G 1 Bright { A_FaceTarget(360,180); }
    HELN GGGGGGGHHHHHHHIIIIIIIJJJJJJJKKKKKKKKKKKKKK 1 Bright Light("AvatarFireball1")
	{
    A_SpawnItemEx("PM_HuskRushFire",random(-10,10),random(-16,16),random(5,65),0,0,frandom(1,3));
	A_FaceTarget();
	}
  SweepRightGo:
    HELN L 2 Bright 
	{
	if(pm_attackloop <= -45)
	SetStateLabel("AttackEnd");
	A_StartSound("FeralImp/Ireball",11);
    A_SpawnProjectile("PM_HellionFlareSlow",32,0,pm_attackloop,CMF_OFFSETPITCH,pitch+frandom(-0.3,0.3));
	A_FaceTarget();
	pm_attackloop -= 5;
	}
    HELN L 1;
	Loop;
  SweepLeft:
    TNT1 A 0 { pm_attackloop = -45; }
    HELN G 0 A_VileStart();
	HELN G 1 Bright { A_FaceTarget(360,180); }
    HELN GGGGGGGHHHHHHHIIIIIIIJJJJJJJKKKKKKKKKKKKKK 1 Bright Light("AvatarFireball1")
	{
    A_SpawnItemEx("PM_HuskRushFire",random(-10,10),random(-16,16),random(5,65),0,0,frandom(1,3));
	A_FaceTarget();
	}
  SweepLeftGo:
    HELN L 2 Bright 
	{
	if(pm_attackloop >= 45)
	SetStateLabel("AttackEnd");
	A_StartSound("FeralImp/Ireball",11);
    A_SpawnProjectile("PM_HellionFlareSlow",32,0,pm_attackloop,CMF_OFFSETPITCH,pitch+frandom(-0.3,0.3));
	A_FaceTarget();
	pm_attackloop += 5;
	}
    HELN L 1;
	Loop;
 Geyser:
    TNT1 A 0 A_CheckProximity("Burst","PM_HellionGeyser",2000,2);
 GeyserGo:
    HELN G 6 Bright A_StartSound("Hellion/Sight");
    HELN GGGGGGGHHHHHHHIIIIIIIJJJJJJJ 1 Bright Light("HellionBallA")
	{
    A_SpawnItemEx("PM_HuskRushFire",random(-10,10),random(-16,16),random(5,65),0,0,frandom(1,5));
	A_CheckProximity("Burst","PM_HellionGeyser",2000,2);
	A_FaceTarget();
	}
	HELN K 6 { 
	if(target && CheckSight(target))
	A_SpawnProjectile("PM_HellionGeyser");
	else
	A_Jump(256,1);
	}
	HELN KKKKKKKKKKKKKKKK 1 Bright Light("HellionBallA")
	{
	A_SpawnItemEx("ExileHandFire",8,random(-8,1),30,0,0,1);
    A_SpawnItemEx("PM_HuskRushFire",random(-10,10),random(-16,16),random(5,65),0,0,frandom(1,6));
	A_FaceTarget();
	}
	HELN KKKKKKKKKKKKKKKKKKKKKKK 1 Bright Light("HellionBallA")
	{
	A_SpawnItemEx("ExileHandFire",8,random(-8,1),30,0,0,1);
    A_SpawnItemEx("PM_HuskRushFire",random(-10,10),random(-16,16),random(5,65),0,0,frandom(1,6));
	A_FaceTarget();
	}
	HELN KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK 1 Bright Light("HellionBallA")
	{
	A_SpawnItemEx("ExileHandFire",8,random(-8,1),30,0,0,1);
	A_FaceTarget();
	}
	Goto See;
  Pain:
    HELN M 2;
    HELN M 2 A_Pain();
    Goto See;
  Death:
    TNT1 A 0 A_StopSound(0);
    HELN N 6;
    HELN O 6 A_Scream();
    HELN PQR 6;
    HELN S 6 A_NoBlocking();
	TNT1 A 0 A_StartSound("Corpse/Fall",CHAN_6);
    HELN T -1;
    Stop;
  XDeath:
    TNT1 A 0 A_StopSound(0);
    HELN U 5 PM_Gib();
    HELN V 5 A_XScream();
    HELN W 5;
    HELN X 5 A_NoBlocking();
    HELN YZ 5;
    HEL2 AB 5;
    HEL2 C -1;
    Stop;
  Raise:
    HELN TSRQPON 6;
    Goto Look;
  }
}

Class PM_HellionFlare : CacodemonBall
{
  Default
  {
	Scale 0.90;
    DamageFunction random(5,8);
    Speed 32;
    Alpha 0.80;
    DamageType "Fire";
    SeeSound "";
    DeathSound "";
	Decal "PM_OrangeFireScorch";
	Translation "0:255=%[0,0,0]:[2.0,1.2,0.3]";
    +ThruGhost
    +ForceXYBillboard
  }

  override void PostBeginPlay()
  {
   Super.PostBeginPlay();
   tex[0] = TexMan.CheckForTexture("GNSML0",TexMan.Type_Sprite);
   tex[1] = TexMan.CheckForTexture("LEYSO0",TexMan.Type_Sprite);
   tex[2] = TexMan.CheckForTexture("SPKOA0",TexMan.Type_Sprite);
   tex[3] = TexMan.CheckForTexture("LENRA0",TexMan.Type_Sprite);
  }
  
  TextureID tex[4];
  
  override void Tick()
  {
   if(level.IsFrozen()) return;
   Super.Tick();
   if(level.maptime % 5)
   {
	A_SpawnParticleEx
	 (
		"",
		tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
		lifetime: random(1,15), size: frandom(0.2,10), xoff: random(-1,1), yoff: random(-1,1),
		zoff: random(-1,1), velx: frandom(-0.6,0.6), vely: frandom(-0.6,0.6), velz: frandom(-0.6,0.6),
		startalphaf: 1.0, fadestepf: -0.5, sizestep: -0.2, startroll: random(-180,180)
	 );
	A_SpawnParticleEx
	 (
		"",
		tex[3], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT,
		lifetime: 1, size: 30.0, xoff: -5, startalphaf: 0.6
	 );
    }
  }

  States
  {
  Spawn:
    TNT1 A 0;
	TNT1 A 0
	{
	for(int i=random(1,4);i>0;i--)
	A_SpawnParticleEx
	 (
	 "ffb521",
	 tex[0], style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: random(10,250),
	 size: frandom(10,50), xoff: -25, velx: frandom(0,2), vely: frandom(-0.4,0.4), velz: frandom(-0.4,0.7),
	 startalphaf: frandom(0.1,0.5), fadestepf: -0.5, sizestep: frandom(0.0,1.4), startroll: random(-180,180), 
	 rollvel: frandom(-1,1)
	 );
	A_SpawnParticleEx
     (
	 "",
     tex[1], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: random(1,5),
	 size: frandom(6,180), xoff: -22, startalphaf: 0.9, sizestep: frandom(0.0,3), startroll: random(-180,180)
	 );
	A_SpawnParticleEx
	 (
		"",
		tex[3], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT,
		lifetime: random(1,5), size: 80.0, xoff: -5, startalphaf: 0.6
	 );
	}
  Go:
    TRCR A 1 Bright;
    Loop;
  Death:
    TNT1 A 0;
	TNT1 A 0 A_StartSound("HellionProjExp",volume:0.75,pitch:frandom(1.0,1.85));
    TNT1 A 0 A_SpawnItemEx("OrangeEmbersSpawn");
	TNT1 A 0
	{
	A_SpawnParticleEx
     (
	 "",
     tex[1], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: random(1,20),
	 size: frandom(45,180), xoff: -5, startalphaf: frandom(0.75,0.95), sizestep: frandom(0.0,0.65), 
	 startroll: random(-180,180)
	 );
	A_SpawnParticleEx
	 (
		"",
		tex[3], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT,
		lifetime: random(1,5), size: 90.0, xoff: -5, startalphaf: 0.6
	 );
	}
    TNT1 AA 2 Light("AvatarFireball1") Bright;
    Stop;
  }
}

Class PM_HellionFlareSlow : PM_HellionFlare
{ Default { Speed 23; } }

Class PM_HellionHoming : CacodemonBall
{
  int timer;
  Default
  {
	Scale 0.65;
    DamageFunction 10;
    Speed 12;
    Alpha 0.80;
    DamageType "Fire";
    SeeSound "HellionProj";
    DeathSound "HellionProjExp";
	Decal "PM_OrangeFireScorch";
	Translation "0:255=%[0,0,0]:[2.0,1.2,0.3]";
    +ThruGhost
	+SEEKERMISSILE
    +ForceXYBillboard
  }
  
  override void PostBeginPlay()
  {
   Super.PostBeginPlay();
   tex[0] = TexMan.CheckForTexture("GNSML0",TexMan.Type_Sprite);
   tex[1] = TexMan.CheckForTexture("LEYSO0",TexMan.Type_Sprite);
   tex[2] = TexMan.CheckForTexture("SPKOA0",TexMan.Type_Sprite);
   tex[3] = TexMan.CheckForTexture("LENRA0",TexMan.Type_Sprite);
  }
  
  TextureID tex[4];
  
  override void Tick()
  {
   if(level.IsFrozen()) return;
   Super.Tick();
   if(level.maptime % 5)
   {
	A_SpawnParticleEx
	 (
		"ffb521",
		tex[0], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT, lifetime: 40, 
		size: 38.0, xoff: -10, startalphaf: 0.6, fadestepf: -1, sizestep: -0.65, startroll: random(-180,180)
	 );
	A_SpawnParticleEx
	 (
		"",
		tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
		lifetime: random(1,40), size: frandom(0.2,10), xoff: random(-5,5), yoff: random(-3,3),
		zoff: random(-2,2), velx: frandom(-0.6,0.6), vely: frandom(-0.6,0.6), velz: frandom(-0.6,0.6),
		startalphaf: 1.0, fadestepf: -0.5, sizestep: -0.2, startroll: random(-180,180)
	 );
	A_SpawnParticleEx
	 (
		"",
		tex[3], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT,
		lifetime: 1, size: 60.0, xoff: -5, startalphaf: 0.6
	 );
    }
  }
  

  states
  {
  Spawn:
    TNT1 A 0 NoDelay { timer = 25; }
	TNT1 A 0
	{
	for(int i=random(1,2);i>0;i--)
	A_SpawnParticleEx
	 (
	 "#d2d2d2",
	 tex[0], style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL, lifetime: random(10,250),
	 size: frandom(10,50), xoff: -25, velx: frandom(0,2), vely: frandom(-0.4,0.4), velz: frandom(-0.4,0.7),
	 startalphaf: frandom(0.1,0.5), fadestepf: -0.5, sizestep: frandom(0.0,1.4), startroll: random(-180,180), 
	 rollvel: frandom(-1,1)
	 );
	for(int i=random(1,2);i>0;i--)
	A_SpawnParticleEx
     (
	 "",
     tex[1], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: random(1,4),
	 size: frandom(6,180), xoff: -22, startalphaf: 0.9, sizestep: frandom(0.0,3), startroll: random(-180,180)
	 );
	}
  Spawn2:
	NDEB AABBCC 1 Light("HellionballA") 
	{ 
	if(timer < 0) SetStateLabel("Go"); 
	A_SeekerMissile(2,2,SMF_LOOK); 
	timer--; 
	}
    Loop;
  Go:
    NDEB AABBCC 1 Light("HellionballA") Bright;
    Loop;
  Death:
    TNT1 A 0;
    TNT1 A 0 A_SpawnItemEx("OrangeEmbersSpawn");
	TNT1 A 0 A_SpawnItemEx("OFireBallExplode");
    TNT1 AAAAA 2 Light("HellionballA") Bright;
    Stop;
  }
}

Class PM_HellionGeyser : Actor
{
 int loop;
 int attackloop;
 Default
 {
 Radius 10;
 Height 5;
 Projectile;
 Alpha 0.0;
 RenderStyle "Add";
 Scale 2.25;
 +THRUACTORS
 +FLATSPRITE
 +ROLLSPRITE
 +BRIGHT
 +SEEKERMISSILE
 }
 
 override void PostBeginPlay()
 {
  Super.PostBeginPlay();
  A_Warp(AAPTR_TRACER,random(0,80),0,0,random(0,360),WARPF_NOCHECKPOSITION);
 }
 States
 {
  Spawn:
   TNT1 A 0;
   TNT1 A 2 A_StartSound("Exile/ImmolateStart",15,pitch:1.25);
   SBLL AAAAAAAAAAAAAAAAAAAAAAAAAAA 2
   {
   A_SetRoll(random(0,360));
   A_FadeIn(0.01,FTF_CLAMP);
   A_SpawnParticleEx
	   ( "",
		TexMan.CheckForTexture("SPKOA0"), style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
		lifetime: random(1,60), size: frandom(0.9,24), xoff: random(-55,55), yoff: random(-55,55),
		zoff: random(0,15), velx: frandom(-0.6,0.6), vely: frandom(-0.6,0.6), velz: frandom(0,2),
		accelz: frandom(0.015,0.075), startalphaf: 1.0, fadestepf: -0.5, sizestep: -0.2, startroll: random(-180,180));
   }
   TNT1 A 0
   {
    A_StartSound("Exile/Immolate");
	A_StartSound("Exile/GroundLoop",8,CHANF_LOOPING,volume:0.55,pitch:1.25);
	A_SpawnParticleEx
		(   
		"",
		TexMan.CheckForTexture("EXN1B0"), style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,
		lifetime: 30, size: 150, xoff: -15, startalphaf: 1, fadestepf: -1, sizestep: 15, startroll: random(-180,180)
		);
    for(int i=15;i>0;i--)
	A_SpawnParticleEx
		(
		"ffb521",
		TexMan.CheckForTexture("F1R1A0"),
		style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,
		lifetime: random(10,100), size: frandom(10,80), xoff: random(-65,65), yoff: random(-65,65),
		zoff: random(0,25), velx: frandom(-3,3), vely: frandom(-3,3), velz: frandom(-0.5,3),
		startalphaf: frandom(0.1,0.9), fadestepf: -0.5, sizestep: frandom(0.0,1.4), startroll: random(-180,180),
		rollvel: frandom(-1,1)
		);
	for(int i=random(10,15);i>0;i--)
	A_SpawnParticleEx
	 (
		"",
		TexMan.CheckForTexture("SPKOA0"), style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
		lifetime: random(1,60), size: frandom(0.2,15), xoff: random(-25,25), yoff: random(-25,25),
		zoff: random(0,15), velx: frandom(-0.6,0.6), vely: frandom(-0.6,0.6), velz: frandom(0,0.6),
		accelz: frandom(0.015,0.075), startalphaf: 1.0, fadestepf: -0.5, sizestep: -0.2, startroll: random(-180,180)
	 );
   }
  Go:
   SBLL AABBCC 1 Light("HellionBallA")
    {
	 if(loop >= 70)
	 SetStateLabel("Death");
	 A_FadeIn(0.25,FTF_CLAMP);
	 A_SetRoll(random(0,360));
	 A_SpawnParticleEx
	 (
		"",
		TexMan.CheckForTexture("SPKOA0"), style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
		lifetime: random(1,60), size: frandom(0.9,24), xoff: random(-55,55), yoff: random(-55,55),
		zoff: random(0,15), velx: frandom(-0.6,0.6), vely: frandom(-0.6,0.6), velz: frandom(0,2),
		accelz: frandom(0.015,0.075), startalphaf: 1.0, fadestepf: -0.5, sizestep: -0.2, startroll: random(-180,180)
	 );
	 loop++;
	}
   Loop;
  Death:
   TNT1 A 0 
   {
   A_SpawnItemEx("PM_HellionGeyserBall",random(-20,20),random(-20,20),15,frandom(-3.5,3.5),frandom(-3.5,3.5),frandom(2,8),0,SXF_ORIGINATOR);
   attackloop++;
   }
   SBLL AABBCCAABBCC 1 Light("HellionBallA")
   {
   if(attackloop >= 8)
   SetStateLabel("DeathEnd");
   A_SetRoll(random(0,360));
   A_SpawnParticleEx
	 (
		"",
		TexMan.CheckForTexture("SPKOA0"), style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
		lifetime: random(1,60), size: frandom(0.2,15), xoff: random(-55,55), yoff: random(-55,55),
		zoff: random(0,15), velx: frandom(-0.6,0.6), vely: frandom(-0.6,0.6), velz: frandom(0,2),
		accelz: frandom(0.015,0.075), startalphaf: 1.0, fadestepf: -0.5, sizestep: -0.2, startroll: random(-180,180)
	 );
   }
   Loop;
   DeathEnd:
   TNT1 A 0 A_StartSound("Exile/ImmolateStart",pitch:1.25);
   SBLL ABC 1 Light("HellionBallA")
   {
   A_StopSound(8);
   A_FadeOut(0.050);
   A_SetRoll(random(0,360));
   }
   Wait;
 }
}

Class PM_HellionGeyserBall : PM_InfernalLavaBall
{
 Default
 {
 DamageFunction 15;
 Species "Imp";
 +THRUSPECIES
 -NOGRAVITY
 +LOWGRAVITY
 }
}

Class MaliceHellionPuff : Actor
{
  Default
  {
    Radius 3;
    Height 3;
    RenderStyle "Add";
    Alpha 0.67;
    +NoGravity
    +NoBlockMap
    +DontSplash
    +ForceXYBillboard
  }

  States
  {
  Spawn:
    TNT1 A 3 Bright;
    HLBL CDEFGHI 3 Bright;
    Stop;
  }
}

Class PM_HellionMendingBuffGiver : Inventory
{
 Default
 {
 +INVENTORY.AUTOACTIVATE;
 +INVENTORY.ALWAYSPICKUP;
 }
 
 Override bool Use(bool pickup)
  {
   if(!owner)
  return false;
   if(Owner is "PMMonsterBase")
     {
	 if(owner.bBOSS == false)
	  owner.GiveInventory("PM_HellionMendingBuff",1);
	 }
  return true;
  }
}
   
Class PM_HellionMendingBuff : Powerup
{
  Default
  {
   +INVENTORY.AUTOACTIVATE;
   +INVENTORY.ALWAYSPICKUP;
   Powerup.Duration -0x7FFFFFFF;
  } 
  
  Override Void PostBeginPlay()
  {
  if(owner && owner.health > 0)
   {
    owner.A_AttachLightDef("MendingBuff","GreenBall2");
   }
  }
  
  Override void DoEffect()
  {
  Super.DoEffect();
  if(owner.health > 0 && !IsFrozen())
   owner.A_SpawnParticle("#89fd56",SPF_FULLBRIGHT|SPF_RELATIVE,random(12,18),frandom(8,14),random(0,360),random(0,radius),0,random(4,height),random(0,1),0,random(2,5),0,0,0.4,1,-1,-1);
  }
  
  Override Void OwnerDied()
  {
   owner.A_RemoveLight("MendingBuff");
   owner.A_SpawnItemEx("PM_HellionMendingOrb",zofs:30,flags:SXF_NOCHECKPOSITION|SXF_ORIGINATOR);
   Destroy();
  }
}

Class PM_HellionMendingOrb : Actor
{
 int timer;
 Default
 {
  Radius 8;
  Height 5;
  Health 10;
  Projectile;
  DamageFunction 20;
  SeeSound "";
  Decal "PM_GreenFireScorch";
  Speed 15;
  Alpha 0.9;
  Scale 0.55;
  RenderStyle "Add";
  +THRUACTORS
  +BOUNCEONCEILINGS
  +BOUNCEONWALLS
 }
 Override Void Tick()
 {
  if(level.IsFrozen()) return;
  Super.Tick();
  
  if((level.maptime % 2) == 0)
  {
    A_SpawnParticleEx
	(   
    "67fc26",
	TexMan.CheckForTexture("GNSMK0"),
	style: STYLE_Add,
	flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,
	lifetime: random(10,20),
	size: 35.0,
	xoff: frandom(-1.2,1.2),
	yoff: frandom(-1.2,1.2),
	velx: frandom(-0.5,0.5),
	vely: frandom(-0.5,0.5),
	velz: frandom(-0.5,0.5),
	startalphaf: 0.65,
	fadestepf: -1,
	sizestep: 1,
	startroll: random(-180,180)
	);
  }
 }
 States
 {
 Spawn:
    PBAL C 0;
	PBAL C 0 A_StartSound("Hellion/BuffRelease");
    PBAL C 0 A_ScaleVelocity(0.0);
    PBAL C 0 A_ChangeVelocity(0,0,3,CVF_REPLACE);
    PBAL CCC 5;
    PBAL C 0 A_ChangeVelocity(0,0,2,CVF_REPLACE);
    PBAL CC 5;
    PBAL C 0 A_ChangeVelocity(0,0,0,CVF_REPLACE);
 OrbWait:
    PBAL C 2
    {
     if(timer > 45)
	  SetStateLabel("Go");
     A_SpawnParticleEx
	 (   
      "67fc26",
	  TexMan.CheckForTexture("GNSMK0"), style: STYLE_Add,
	  flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT, lifetime: random(45,67), size: 55.0,
	  xoff: frandom(-1.5,1.5), yoff: frandom(-1.5,1.5), velx: frandom(-1.5,1.5),
	  vely: frandom(-1.5,1.5), velz: frandom(-1.5,1.5), startalphaf: 0.9, fadestepf: -1,
	  sizestep: -2, startroll: random(-180,180)
	 );
	 timer++;
    }
    Loop;
  Go:
    TNT1 A 5
     {
      A_StartSound("Hellion/BuffMonNova");
      A_RadiusGive("PM_HellionMendingBuffGiver2",500,RGF_MONSTERS,4);
      A_SpawnParticleEx
       (
	   "",
	   TexMan.CheckForTexture("DTPRA0"),
	   style: STYLE_Add,
	   flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
	   lifetime: 50.0,
	   size: 30.0,
	   startalphaf: 0.85,
	   fadestepf: -0.4,
	   sizestep: 15,
	   startroll: random(-180,180),
	   rollvel: frandom(-9,9),
	   rollacc: 0
       );
      A_SpawnParticleEx
       (
	   "",
	   TexMan.CheckForTexture("SPKOG0"),
	   style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
	   lifetime: 25.0, size: 30.0, startalphaf: 1.0, fadestepf: -0.4,
	   sizestep: 10, startroll: random(-180,180), rollvel: frandom(-15,15), rollacc: 0
       );
	  }
    TNT1 A 1;
    Stop;  
  }
}

Class PM_HellionMendingOrb2 : Actor
{
 Default
 {
  Projectile;
  DamageFunction 20;
  SeeSound "HeresyLord/WhiteFire";
  DeathSound "HeresyLord/WhiteDeath";
  Decal "PM_GreenFireScorch";
  Speed 15;
  Alpha 0.9;
 }

 Override Void Tick()
 {
  if(level.IsFrozen()) return;
  Super.Tick();
  
  if((level.maptime % 2) == 0)
  {
    A_SpawnParticleEx
	(   
    "67fc26",
	TexMan.CheckForTexture("GNSMK0"),
	style: STYLE_Add,
	flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,
	lifetime: random(45,67),
	size: 35.0,
	xoff: frandom(-1.5,1.5),
	yoff: frandom(-1.5,1.5),
	velx: frandom(-1.0,1.0),
	vely: frandom(-1.0,1.0),
	velz: frandom(-1.0,1.0),
	startalphaf: 0.9,
	fadestepf: -1,
	sizestep: 2,
	startroll: random(-180,180)
	);
  }
 }
 
 States
 {
  Spawn:
    TNT1 A 2;
    Loop;
  Death:
    NDEB D 1 bright Light("GreenFireLight");
	TNT1 A 0 A_SpawnItemEx("GFireBallExplode");
	TNT1 A 0 A_SpawnItemEx("PM_GreenFireballExpFlames");
	Stop;
 }
}

Class PM_HellionMendingBuffGiver2 : Inventory
{
 Default
 {
 +INVENTORY.AUTOACTIVATE;
 +INVENTORY.ALWAYSPICKUP;
 }
 
 Override bool Use(bool pickup)
  {
   if(!owner)
  return false;
   if(Owner is "PMMonsterBase")
     {
	 if(owner.bBOSS == false && !(owner is "PM_Hellion"))
	  owner.GiveInventory("PM_HellionMendingBuff2",1);
	 }
  return true;
  }
}
   
Class PM_HellionMendingBuff2 : PowerProtection
{
  Default
  {
   +INVENTORY.AUTOACTIVATE;
   +INVENTORY.ALWAYSPICKUP;
   Powerup.Duration -15;
   DamageFactor "Normal", 0.50;
  } 
  
  Override void DoEffect()
  {
  Super.DoEffect();
  if(owner.health > 0 && !IsFrozen())
   owner.A_SpawnParticle
   ("#89fd56",
   flags: SPF_FULLBRIGHT|SPF_RELATIVE, lifetime: random(12,18),
   size: frandom(8,18), angle: random(0,360), xoff: random(0,radius),
   zoff: random(25,height), velx:frandom(-2,2), vely:frandom(-2,2)
   );
  }
 
  Override Void OwnerDied()
  { owner.A_RemoveLight("MendingBuff"); Destroy(); }
}