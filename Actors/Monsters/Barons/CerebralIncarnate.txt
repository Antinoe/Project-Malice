
Class PM_CereIncarnate : PMDeathMonsterBase
{
    int rush;
	int oldspeed;
	bool phased;
    Default
	{
	//$Category "PM_Monsters/Barons"
    Health 1000;
    Radius 22;
    Height 64;
    Speed 16;
	Scale 1.1;
    PainChance 20;
    Mass 1500;
    MONSTER;
	Bloodtype "PM_DeathBloodBase";
    +FLOORCLIP
	//+NOINFIGHTING
	+DONTHARMCLASS
	+DONTHARMSPECIES
	+MISSILEMORE
	Species "Nobles";
	//DropItem "RagePoint1"
    SeeSound "CInc/Sight";
    PainSound "CInc/Pain";
    DeathSound "CInc/Death";
    ActiveSound "CInc/Active";
    MeleeSound "baron/melee";
	Tag "Cerebral Incarnate";
    Obituary "%o joined man in their eternal resting place, courtesy of a Cerebral Incarnate.";
	StencilColor "Blue";
    MeleeDamage 8;
	TeleFogSourceType "PM_SmallDemonicTeleportFog";
	TeleFogDestType "PM_DemonicTeleportFog";
	PMMonsterBase.RealHeight 78;
	}
	
	void PM_CIncPhaseTrans()
	{
	 phased = true;
	 speed = 20;
	 bNOPAIN = true;
	}
	
	void PM_CIncPhaseDeTrans()
	{
	 phased = false;
	 speed = oldspeed;
	 bNOPAIN = false;
	}
	
	void PM_CIChase()
	{
	 if(random(1,60) == 1 && !rush)
	   rush == 100;
	 if(rush)
	 { rush--; A_Recoil(-0.55); A_Chase(); A_SetTics(2);
	 A_SpawnItemEx("PM_GenericPhaseGhost",flags:SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERALPHA|SXF_TRANSFERSCALE|SXF_TRANSFERSTENCILCOL); }
	 else
	 A_Recoil(-0.25); A_Chase();
	}
	
	void PM_CIPhaseChase()
	{
	if(random(1,45) == 1 && target && CheckSight(target) && Distance3D(target) < 400)
		SetStateLabel("Minigun");
	 if(random(1,70) == 1)
	 A_StartSound("CInc/Hum");
	 if(random(1,35) == 1)
	 { A_FaceTarget(); A_SpawnItemEx("PM_GenericPhaseGhost",flags:SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE|SXF_TRANSFERSTENCILCOL); }
	 A_Wander();
	}
	
	override void PostBeginPlay()
	{ Super.PostBeginPlay(); oldspeed = speed; }
	
    States
    {
    Spawn:
	    TNT1 A 0 NoDelay A_Jump(65,"PhaseIdle");
	Idle:
        LMDA A 10 PM_Look();
        Loop;
	PhaseIdle:
	    TNT1 A 0 A_FadeOut(1.0,0);
		TNT1 A 0 PM_CIncPhaseTrans();
	PhaseIdle2:
	    LMDA A 10 A_LookEx(LOF_NOSEESOUND,label:"PhaseSeeGo");
		Loop;
    Look:
        LMDA AABB 4 PM_LookingForPlayer();
		TNT1 A 0 A_Quake(1, 4, 0, 312);
		TNT1 A 0 A_StartSound("hoofstep",3);
        TNT1 A 0 A_JumpIfTargetinLOS("Spotted",250,JLOSF_DEADNOJUMP);
		LMDA CCDD 4 PM_LookingForPlayer();
		TNT1 A 0 A_Quake(1, 4, 0, 312);
		TNT1 A 0 A_StartSound("hoofstep",3);
        Loop;
    Spotted:
    Roar:
        TNT1 A 0 PM_AlertSound();
    See2:
        LMDA AABB 3 PM_CIChase();
		TNT1 A 0 A_Quake(1, 4, 0, 312);
		TNT1 A 0 A_StartSound("hoofstep",3);
		LMDA CCDD 3 PM_CIChase();
		TNT1 A 0 A_Quake(1, 4, 0, 312);
		TNT1 A 0 A_StartSound("hoofstep",3);
		TNT1 A 0 A_Jump(30,"Phase");
        Loop;
	Phase:
        LMDA AABB 2 {
		A_SpawnItemEx("PM_GenericPhaseGhost",flags:SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERALPHA|SXF_TRANSFERSCALE|SXF_TRANSFERSTENCILCOL);
		A_FadeOut(0.1,0);
		A_Chase(null,null); }
		TNT1 A 0 A_Quake(1, 4, 0, 312);
		TNT1 A 0 A_StartSound("hoofstep",3);
		LMDA CCDD 2 {
		A_SpawnItemEx("PM_GenericPhaseGhost",flags:SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERALPHA|SXF_TRANSFERSCALE|SXF_TRANSFERSTENCILCOL);
		A_FadeOut(0.1,0);
		A_Chase(null,null); }
		TNT1 A 0 A_Quake(1, 4, 0, 312);
		TNT1 A 0 A_StartSound("hoofstep",3);
		TNT1 A 0 { if(alpha <= 0) SetStateLabel("PhaseSee"); }
		Loop;
	PhaseSee:
	    TNT1 A 0 PM_CIncPhaseTrans();
	PhaseSeeGo:
	    LMDA IIIIIIIII 3 PM_CIPhaseChase();
		TNT1 A 0 A_Chase(null,"Minigun",CHF_DONTMOVE|CHF_NOPLAYACTIVE);
		LMDA IIIIIIIII 3 PM_CIPhaseChase();
		TNT1 A 0 A_Chase(null,"Minigun",CHF_DONTMOVE|CHF_NOPLAYACTIVE);
		Loop;
    Missile:
	Minigun:
	    TNT1 A 0 {
		if(phased)
		PM_CIncPhaseDeTrans();
		if(random(1,3) == 1)
		A_StartSound("CInc/Attack",7);
		A_StartSound("CInc/Windup",5); 
		A_StartSound("DComm/WARNING",6,volume:0.65,pitch:0.85);
		pm_attackloop = random(52,65);
		}
		LMDA E 5 Light("HellsFuryBall2") 
		{ 
		if(rush)
		ThrustThing(random(0,128),24,0,0);
		A_FaceTarget();
		}
	    LMDA EEEEEEEEEEEEEE 1 Light("HellsFuryBall2") 
		{
		if(rush)
		A_SpawnItemEx("PM_GenericPhaseGhost",xofs:-5,flags:SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE|SXF_TRANSFERSTENCILCOL);
		A_FaceTarget();
		}
		LMDA E 8 Light("HellsFuryBall2")
		{
		if(random(1,3) == 1 && alpha < 1)
		for(int i=20;i>0;i--) A_Chase(null,null);
		}
		LMDA EEEEEEEEEEEEEEEEEEEEEE 1 Light("HellsFuryBall2") 
		{
		if(alpha < 1)
		A_FadeIn(0.1,0);
		A_FaceTarget();
		}
		LMDA E 1
		{
		A_FaceTarget(360,180);
		A_SetAngle(angle+random(-15,15));
		A_SetPitch(pitch+random(-10,10));
		}
		TNT1 A 0 A_StartSound("CInc/Gunloop",11,CHANF_LOOPING);
		TNT1 A 0 A_StartSound("HPriest/SoulLoop",10,CHANF_LOOPING,volume:0.85,pitch:1.05,starttime:random(0.20,0.35));
		TNT1 A 0 A_StartSound("HPriest/SoulLoop",12,CHANF_LOOPING,volume:0.75,pitch:0.65,starttime:random(0.20,0.35));
	MinigunGo:
		LMDA E 1 Light("HellsFuryBall1");
		LMDA F 1 BRIGHT Light("HellsFuryBall2") 
			{
			if(random(1,45) == 1)
			SetStateLabel("MissileDodge");
			A_StartSound("CInc/Fire",7);
			A_StartSound("GunnerRifleDistant",8,CHANF_OVERLAP);
			A_SpawnProjectile("PM_CIncTracer",50,25,frandom(4, -4),CMF_AIMDIRECTION,pitch+frandom(-2,2));
			A_SpawnProjectile("PM_CIncTracer",50,-25,frandom(4, -4),CMF_AIMDIRECTION,pitch:pitch+frandom(-2,2));
			}
		LMDA E 1 A_FaceTarget(0.85,3,0,0);
		TNT1 A 0 { 	if(pm_attackloop < 0) SetStateLabel("MinigunCD"); pm_attackloop--; }
		Loop;
	MinigunCD:
		TNT1 A 0 { A_StopSound(12); A_StopSound(11); A_StopSound(10); }
		TNT1 A 0 A_StartSound("Broken/Railgun",5,volume:0.75,pitch:0.85);
		LMDA E 8;
		TNT1 A 0 A_StartSound("GenericSteam",pitch:0.65);
		LMDA EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 1
		{
		A_SpawnItemEx("PM_VentSmoke",20,25,53,frandom(2,-2),frandom(2,-2),frandom(1,3),flags:SXF_TRANSFERSTENCILCOL);
		A_SpawnItemEx("PM_VentSmoke",20,-25,53,frandom(2,-2),frandom(2,-2),frandom(1,3),flags:SXF_TRANSFERSTENCILCOL);
		}
		Goto See2;
	MissileDodge:
	    TNT1 A 0 { A_StopSound(12); A_StopSound(11); A_StopSound(10); }
		TNT1 A 0 A_StartSound("Broken/Railgun",5,volume:0.75,pitch:0.85);
		LMDA E 5 Light("HellsFuryBall2") 
		{
		ThrustThing(random(0,128),30,0,0);
		A_FaceTarget(0.85,3,0,0);
		}
	    LMDA EEEEEEEEEE 1 Light("HellsFuryBall2") 
		{
		A_SpawnItemEx("PM_GenericPhaseGhost",xofs:-5,flags:SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE|SXF_TRANSFERSTENCILCOL);
		A_FaceTarget(0.85,3,0,0);
		}
		Goto See2;
    Pain:
		TNT1 A 0 { A_StopSound(12); A_StopSound(11); A_StopSound(10); }
		LMDA H 8;
        LMDA H 5 A_Pain;
        Goto See2;
    Death:
		TNT1 A 0 A_StopSounds(0,0);
        LMDA K 8;
		LMDA L 8 A_Scream();
		LMDA M 8 A_Fall();
		LMDA NOP 8;
		TNT1 A 0 A_StartSound("Corpse/FallMed",CHAN_6);
		LMDA QRSTU 6;
		LMDA V -1;
        Stop;
    }
}

Class PM_CIncTracer : Actor
{
Default
{
 Projectile;
 +BLOODSPLATTER 
 +THRUGHOST
 +SEEKERMISSILE
 decal "PM_BulletHoleMedium";
 height 2;
 radius 2;
 speed 42;
 DamageFunction 9;
 scale 0.50;
 RenderStyle "Add";
 Alpha 0.60;
}
States
{
	Spawn:
        TNT1 A 0;
		TNT1 A 0
		{
		A_SpawnParticleEx
			(
			"0B3D94",
			TexMan.CheckForTexture("GNSMK0"), style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL,
			lifetime: random(10,200), size: frandom(10,50), xoff: -25,
			velx: frandom(0,2), vely: frandom(-0.4,0.4), velz: frandom(-0.4,0.7),
			startalphaf: frandom(0.45,0.85), fadestepf: -0.3, sizestep: frandom(0.0,1.4), 
			startroll: random(-180,180), rollvel: frandom(-1,1)
			);
			A_SpawnParticleEx
			(
			"",
			TexMan.CheckForTexture("SPKOS0"),
			style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: random(1,4),
			size: frandom(50,100), xoff: -22, startalphaf: 1.0,
			fadestepf: 0, startroll: random(-180,180)
			);
			for(int i=random(1,3);i>0;i--)
			A_SpawnParticleEx
			(
			"",
			TexMan.CheckForTexture("SPKOS0"),
			style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,
			lifetime: random(1,50), size: frandom(1,20), xoff: -22,
			velx: frandom(1,4), vely: frandom(-2,2), velz: frandom(-3,3),
			startalphaf: 1.0, fadestepf: -1, startroll: random(-180,180)
			);
		}
	Go:
		TRCR A 1 BRIGHT A_Quake(1,4,0,100,0);
        TNT1 A 0 A_JumpIfTracerCloser(150,"Noise");
        Loop;
    Noise:
        TNT1 A 0 A_StartSound("PM/BulletWhiz",3,CHANF_DEFAULT,0.50);
    Cont:
        TRCR A 1 BRIGHT A_Quake(1,4,0,100,0);
        Loop;
	Death:
	    TNT1 A 0
		{
		 A_SpawnParticleEx
		 (
		 "",
		 TexMan.CheckForTexture("SPKOS0"),
		 style: STYLE_Add, flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, lifetime: random(2,8),
		 size: random(60,80), startalphaf: 0.95, fadestepf: -1, sizestep: -15, startroll: random(-180,180)
		 );
		 for(int i=random(2,5);i>0;i--)
		 A_SpawnParticleEx
		 (
		 "3d85c6",
		 TexMan.CheckForTexture("SPKOS0"), style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
		 lifetime: random(10,55), size: frandom(5,15),
		 velx: frandom(-4,4), vely: frandom(-4,4), velz: frandom(-4,4),
		 accelz: frandom(-0.1,-0.9), startalphaf: frandom(0.45,0.95), fadestepf: -0.5,
		 sizestep: -0.5, startroll: random(-180,180)
		 );
		}
		TRCR A 0 A_StartSound("CInc/TracerHit");
		Stop;
  XDeath:
     TNT1 A 0;
     TRCR A 0 A_StartSound("PM/BulletHitFlesh");
     stop;
  Crash:
    TRCR A 0 A_StartSound("CInc/TracerHit");
    Stop;
	}
}


