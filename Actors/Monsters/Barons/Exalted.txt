//[NERU] unfinished, needs a few more attacks & particle work, also death state AAAAAAA
Class PM_Exalted : PMPrideMonsterBase
{
    actor cast;
	bool fireballs;
    Default
	{
	/*PMMonsterBase.CodexLore
	"\cgHumans. Demons. All the same. Fools who lust for the simplest manifestations of power. Cretins.
	
	\cgWE wield the power of the light at our fingertips. It is high time that we show them the full extent of our capabilities.";*/
	PMMonsterBase.ForgetThreshold 9999; //[NERU] putting this in for now
    Health 1000;
    Radius 22;
    Height 64;
    Speed 14;
	Scale 1.2;
    PainChance 20;
    Mass 1500;
    MONSTER;
	Bloodtype "PM_NormalBloodBase";
    +FLOORCLIP
	//+NOINFIGHTING
	+DONTHARMCLASS
	+DONTHARMSPECIES
	+MISSILEMORE
	+FLATSPRITE
	+THRUACTORS
	+CANTSEEK
	-SHOOTABLE
	+DONTTHRUST
	Species "Nobles";
    SeeSound "";
    PainSound "Exalt/Pain";
    DeathSound "Exalt/Death";
    ActiveSound "Exalt/Active";
    MeleeSound "baron/melee";
	RenderStyle "AddStencil";
	StencilColor "Red";
	Tag "Exalted";
    Obituary "%o was cast down from ascension by an Exalted.";
    MeleeDamage 8;
	TeleFogSourceType "PM_SmallDemonicTeleportFog";
	TeleFogDestType "PM_DemonicTeleportFog";
	PMMonsterBase.RealHeight 70;
	}
	
	override void PostBeginPlay()
	{
	 Super.PostBeginPlay();
	 tex[0] = TexMan.CheckForTexture("DTPRR0",TexMan.Type_Sprite);
	 tex[1] = TexMan.CheckForTexture("GNSMK0",TexMan.Type_Sprite);
	 tex[2] = TexMan.CheckForTexture("SPKRA0",TexMan.Type_Sprite);
	 tex[3] = TexMan.CheckForTexture("REDLA0",TexMan.Type_Sprite);
	}
	
	TextureID tex[4];
	
	void PM_ExaCast(class<actor> effect)
	{
	 cast = Spawn(effect,pos);
	 cast.master = self;
	}
	
	void PM_ExaltedVoice(sound whattoplay = "None", bool force = false)
	{
	 if(CountInv("PM_ExaltVoiceCD") && force == false) return;
	 if(whattoplay == "None")
	  A_StartSound("Exalt/Voice",16,attenuation:0.3);
	 else
	  A_StartSound(whattoplay,16,attenuation:0.3);
	 A_GiveInventory("PM_ExaltVoiceCD");
	}
	
	void PM_ExaTPStart()
	{ bTHRUACTORS = true; bSHOOTABLE = false; bCANTSEEK = true; bDONTTHRUST = true; }
	void PM_ExaTPEnd()
	{  bTHRUACTORS = false; bSHOOTABLE = true; bCANTSEEK = false; bDONTTHRUST = false; }
	
	
    States
    {
    Spawn:
	    EXAL E 0 NoDelay;
        TNT1 A 10 PM_Look();
        Wait;
    Look:
		TNT1 A 0 { 
		A_SetScale(2.5);
		A_StartSound("PMGazer/Hover",100,CHANF_LOOPING);
		A_StartSound("Draugr/BuffLoop",101,CHANF_LOOPING);
		alpha = 0.0; 
		A_SoundVolume(100,alpha);
		A_SoundVolume(101,alpha);
		}
	Looking:
	    TNT1 A 0 { for(int i=random(15,40);i>0;i--) A_Wander(); } 
        TNT1 AA 10 PM_LookingForPlayer();
		TNT1 A 0 A_Jump(5,"Spotted");
        Loop;
    Spotted:
        C1TE A 8 Bright
		{
		 if(alpha >= 1)
		 SetStateLabel("Appear");
		 alpha += 0.05;
		 A_SoundVolume(100,alpha);
		 A_SoundVolume(101,alpha);
		 A_SetAngle(angle+5);
		 A_SpawnItemEx("PM_ExaltedBeacon",frandom(-45,45),frandom(-50,50),0,flags:SXF_TRANSFERALPHA);
		}
		Loop;
	Appear:
	    EXAL E 5 Bright
		{
		bFLATSPRITE = false; bTHRUACTORS = false; bSHOOTABLE = true; bCANTSEEK = false; bDONTTHRUST = false;
		A_SetAngle(0);
		A_StopSound(100);
		A_StopSound(101);
		A_SetScale(1.15);
		A_SetRenderStyle(1.0,STYLE_Normal);
		A_StartSound("Director/BigPlasmaExp",91,volume:0.35,attenuation:0.2);
		A_StartSound("DEmi/BFGExplode",95,pitch:1.25);
		A_StartSound("PMGazer/Sight",92,CHANF_DEFAULT,1,pitch:0.7);
		A_StartSound("PMGazer/Sight",93,CHANF_DEFAULT,1,pitch:0.9);
		A_StartSound("PMGazer/Sight",94,CHANF_DEFAULT,1,pitch:1.2);
	for(int i=3;i>0;i--)
	A_SpawnParticleEx(
		"", tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,
		lifetime: random(35,45), size: 650, zoff: 45, velx: frandom(-3,3), vely: frandom(-3,3), velz: frandom(0,3),
		startalphaf: 1.0, fadestepf: -0.002, sizestep: frandom(0.0,3), startroll: random(-180,180));
	for(int i=10;i>0;i--)
	A_SpawnParticleEx(
	    "AF0000", tex[1], style: STYLE_Translucent, flags: SPF_ROLL|SPF_RELATIVE, lifetime: random(50,100),
		size: 10.0, xoff: random(100,-100), yoff: random(100,-100), zoff: random(0,30), velx: frandom(-1,1), vely: frandom(-1,1),
		accelx: frandom(-0.05,0.05), accely: frandom(-0.05,0.05), startalphaf: frandom(0.2,0.5), fadestepf: -0.5, sizestep: 4, startroll: random(-180,180), rollvel: frandom(-1,1));
	for(int i=5;i>0;i--)
		A_SpawnParticleEx(
	    "", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: frandom(10,50), size: frandom(60,250),
		xoff: frandom(-65,65), yoff: frandom(-75,75), startalphaf: 1.0, fadestepf: -1, startroll: random(-180,180), rollvel: frandom(-5,5));
	for(int i=10;i>0;i--)
	A_SpawnParticleEx(
        "", tex[3], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
		lifetime: random(1,2), size: random(1,100), xoff: frandom(-10,10), yoff: frandom(-10,10), zoff: frandom(0,50),
		velx: random(-6,6), vely: random(-6,6), velz: random(-6,6), startalphaf: frandom(0.8,0.95), startroll: random(-180,180), rollvel: frandom(-30,30));
		}
		EXAL EEEEEE 5 Bright A_FaceTarget();
		TNT1 A 0 A_StartSound("Exalt/Sight",16);
		EXAL EEEEEEEE 5 Bright A_FaceTarget();
    See:
        EXAL AAAABBBB 2 A_Chase();
		TNT1 A 0 A_Quake(1, 4, 0, 312);
		TNT1 A 0 A_StartSound("hoofstep",9);
		EXAL CCCCDDDD 2 A_Chase();
		TNT1 A 0 A_Quake(1, 4, 0, 312);
		TNT1 A 0 A_StartSound("hoofstep",9);
		TNT1 A 0 A_Jump(56,"PhaseJump");
        Loop;
	PhaseJump:
	    EXAL E 10 Bright A_FaceTarget();
	    EXAL E 0 {
		A_StopSound(16);
		A_StartSound("Exalt/TPStart",20); 
		PM_ExaTPStart();
		for (int i = -15; i <= 15; i+= 10)
		A_SpawnItemEx("PM_GenericPhaseGhost",0,0,0,0,i,0,0,flags:SXF_TRANSFERSTENCILCOL|SXF_TRANSFERALPHA|SXF_TRANSFERSPRITEFRAME);
		for(int i=3;i>0;i--)
		A_SpawnParticleEx(
		"", tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
		lifetime: 30, size: 500, zoff: 75, startalphaf: 0.95, fadestepf: -1, sizestep: -35, startroll: random(-180,180),
		rollvel: frandom(-10,10), rollacc: frandom(-1,1) );
		}
		TNT1 A 35;
		TNT1 A 0 { 
	    for(int i=random(40,60);i>0;i--)
		A_Wander();
		}
	TNT1 AAAAAAAAAAAAAAAAAAAAAA random(1,6) Light("ShadowBall3")
	{
		A_SpawnParticleEx(   
		"", tex[2], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,
		lifetime: 50, size: frandom(25,35), xoff: frandom(-65.5,65.5), yoff: frandom(-65.5,65.5), zoff: frandom(15,90),
		velx: frandom(-1,1), vely: frandom(-1,1), velz: frandom(-1,1), startalphaf: 1, fadestepf: -0.01, sizestep: -2 );
		A_SpawnParticleEx(   
		"cc0000", TexMan.CheckForTexture("EXALE1"), style: STYLE_Stencil, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,
		lifetime: 25, size: 175, xoff: frandom(-5.5,5.5), yoff: frandom(-5.5,5.5), zoff: 55, velx: frandom(-0.1,0.1), vely: frandom(-0.1,0.1),
		velz: frandom(-0.1,0.1), startalphaf: 0.25, fadestepf: -0.01, sizestep: -2, startroll: 180);
	}
    EXAL E 30 Bright
	{
	    A_FaceTarget();
	    A_StartSound("Exalt/TPEnd",20); 
	    PM_ExaTPEnd();
		for(int i=3;i>0;i--)
		A_SpawnParticleEx(
		"", tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
		lifetime: 30, size: 500, zoff: 75, startalphaf: 0.95, fadestepf: -1, sizestep: -35, startroll: random(-180,180), rollvel: frandom(-10,10), rollacc: frandom(-1,1));
		for (int i = -15; i <= 15; i+= 10)
		A_SpawnItemEx("PM_GenericPhaseGhost",0,0,0,0,i,0,0,flags:SXF_TRANSFERSTENCILCOL|SXF_TRANSFERALPHA|SXF_TRANSFERSPRITEFRAME);
	}
		TNT1 A 0 A_Jump(45,"Missile");
		Goto See;
	Missile:
	    TNT1 A 0 A_Jump(65,"BulletBarrage");
	BurstShot:
	    EXAL E 30 
		{
		pm_attackloop = random(2,4);
		A_FaceTarget(360,180);
		A_SetAngle(angle+random(-15,15));
		A_SetPitch(pitch+random(-5,5));
		PM_ExaCast("PM_ExaltedCastReady");
		A_StartSound("PM/SigilSpawn",17,pitch:0.85);
		A_StartSound("PMGazer/Sight",18,pitch:1.3);
		}
	BurstLoop:
	   EXAL FFFFF random(2,7) Bright
	   {
	    A_FaceTarget(5,5);
		A_StartSound("PM/RuneFill",pitch:frandom(0.85,1.45));
		A_SpawnProjectile("PM_ExaltedMagicShot",frandom(40,67),frandom(-45,45),frandom(-5,5),CMF_AIMDIRECTION,pitch+frandom(-0.5,0.5));
	   }
	   EXAL F 10 { if(pm_attackloop <= 0)
	   SetStateLabel("MissileRedEnd"); pm_attackloop--; }
	   Loop;
	BulletBarrage:
	    EXAL E 30 
		{
		pm_attackloop = random(20,45);
		A_FaceTarget(360,180);
		A_SetAngle(angle+random(-15,15));
		A_SetPitch(pitch+random(-10,10));
		PM_ExaCast("PM_ExaltedCastReady");
		A_StartSound("PM/SigilSpawn",17,pitch:0.85);
		A_StartSound("PMGazer/Sight",18,pitch:1.3);
		} 
	BBarrageLoop:
	   EXAL F 5 Bright
	   {
	    if(pm_attackloop <= 0)
		SetStateLabel("MissileRedEnd");
	    A_FaceTarget(5,5);
		A_SpawnProjectile("PM_BlasphemerBall",67,-20,frandom(-2.5,5),CMF_AIMDIRECTION,pitch+frandom(-0.8,0.8));
		A_SpawnProjectile("PM_BlasphemerBall",70,20,frandom(-5,2.5),CMF_AIMDIRECTION,pitch+frandom(-0.8,0.8));
		pm_attackloop--;
	   }
	   Loop;
	MissileRedEnd:
	   EXAL F random(10,20);
	   TNT1 A 0 { if(random(1,3) == 1) SetStateLabel("PhaseJump"); }
	   Goto See;
    Pain:
        EXAL K 5;
		EXAL K 5 A_Pain;
        Goto See;
    Death:
		TNT1 A 0 A_StopSounds(0,0);
        EXAL L 8
		{
		A_SpawnItemEx("PM_NormalMeatChunkLauncher",random(-2,2),random(-2,2),random(20,60),0,0,0,0,SXF_NOCHECKPOSITION);
		A_SpawnItemEx("PM_NormalMeatChunkLauncher",random(-2,2),random(-2,2),random(20,60),0,0,0,0,SXF_NOCHECKPOSITION);
		A_SpawnItemEx("PM_NormalMeatChunkLauncher",random(-2,2),random(-2,2),random(20,60),0,0,0,0,SXF_NOCHECKPOSITION);
		}
		EXAL M 8
		{
		A_Scream();
		A_SpawnItemEx("PM_NormalInstestinGib",random(-4,4),random(-4,4),random(20,50),random(-3,3),random(-3,3),random(0,5),random(-180,180),SXF_NOCHECKPOSITION);
		A_SpawnItemEx("PM_NormalInstestinGib",random(-4,4),random(-4,4),random(20,50),random(-3,3),random(-3,3),random(0,5),random(-180,180),SXF_NOCHECKPOSITION);
		A_SpawnItemEx("PM_NormalInstestinGib",random(-4,4),random(-4,4),random(20,50),random(-3,3),random(-3,3),random(0,5),random(-180,180),SXF_NOCHECKPOSITION);
		A_SpawnItemEx("PM_NormalMeatChunkLauncher",random(-2,2),random(-2,2),random(20,40),0,0,0,0,SXF_NOCHECKPOSITION);
		A_SpawnItemEx("PM_NormalMeatChunkLauncher",random(-2,2),random(-2,2),random(20,40),0,0,0,0,SXF_NOCHECKPOSITION);
		}
		EXAL N 8
		{
		A_SpawnItemEx("PM_NormalInstestinGib",random(-4,4),random(-4,4),random(15,30),random(-3,3),random(-3,3),random(0,5),random(-180,180),SXF_NOCHECKPOSITION);
		A_SpawnItemEx("PM_NormalMeatChunkLauncher",random(-2,2),random(-2,2),random(10,30),0,0,0,0,SXF_NOCHECKPOSITION);
		A_Fall();
		}
		EXAL OPQ 8
		{
		A_SpawnItemEx("PM_NormalMeatChunkLauncher",random(-2,2),random(-2,2),random(10,20),0,0,0,0,SXF_NOCHECKPOSITION);
		}
		TNT1 A 0 A_StartSound("Corpse/FallMed",CHAN_6);
		EXAL RSTT 8;
		EXAL T -1;
        Stop;
	Raise:
	    EXAL TSRQPONMLK 4;
		Goto Look;
    }
}

Class PM_ExaltVoiceCD : Powerup { Default { Powerup.Duration -8; } }

Class PM_ExaltedCastReady : Actor
{
  Default
  {
   +NOINTERACTION
   +FLATSPRITE
   +ROLLSPRITE
   +BRIGHT
   Scale 0.65;
   Renderstyle "Add";
  }
  
  override void PostBeginPlay()
  {
   Super.PostBeginPlay();
   pitch = 270;
  }
  States
  {
  Spawn:
   EXAF AAAAAAAAAAAAAA 1
    {
	 A_SetRoll(roll+10,SPF_INTERPOLATE);
	 A_Warp(AAPTR_MASTER,35,0,75);
	}
   EXAF A 1
    {
	 A_SetScale(Scale.X-0.05);
	 A_SetRoll(roll+20,SPF_INTERPOLATE);
	 A_Warp(AAPTR_MASTER,35,0,75);
	 A_FadeOut(0.1);
	}
	Wait;
   }
  }

Class PM_ExaltedBeacon : Actor
{
 Default
 {
 Scale 0.26;
 RenderStyle "AddStencil";
 StencilColor "Red";
 +BRIGHT
 +NOINTERACTION
 }
 States
 {
 Spawn:
  DI_A AA 1
  {
    A_FadeOut(0.01);
	A_QuakeEx(2,2,2,10,0,900,"",QF_RELATIVE|QF_SCALEDOWN|QF_3D,rollintensity:0.3,rollwave:0.3);
  }
  Wait;
 }
}

Class PM_ExaltedMagicShot : Actor
{
  Default
  {
    Radius 5;
    Height 5;
    Speed 32;
    DamageFunction 10;
    Renderstyle "Add";
    ALPHA 0.85;
    Scale 0.85;
	SeeSound "PM/BulletHellSpawn";
    DeathSound "Exalt/BHShotExp";
    PROJECTILE;
	Decal "PM_RedFireScorch";
	DamageType "Fire";
	+ROLLSPRITE
	}
  override void PostBeginPlay()
	{
	 Super.PostBeginPlay();
	 tex[0] = TexMan.CheckForTexture("DTPRR0",TexMan.Type_Sprite);
	 tex[1] = TexMan.CheckForTexture("REDLA0",TexMan.Type_Sprite);
	 tex[2] = TexMan.CheckForTexture("SPKRA0",TexMan.Type_Sprite);
	 tex[3] = TexMan.CheckForTexture("SPKRC0",TexMan.Type_Sprite);
	}
	TextureID tex[4];
  States
  {
  Spawn:
	TNT1 A 0;
	TNT1 A 0
	{
	A_SpawnParticleEx
		(
		"cc0000",
		TexMan.CheckForTexture("C1TEA0"),
		style: STYLE_Add,
		flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,
		lifetime: 5,
		size: 100,
	    xoff: -20,
		startalphaf: 1.0,
		fadestepf: -0.2,
		sizestep: frandom(0.0,3),
		startroll: frandom(-180,180)
		);
	 A_SpawnParticleEx(
	  "", tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(1,20),
	  size: 180.0, xoff: -10, startalphaf: 0.85, fadestepf: -1, startroll: random(-180,180) );
	  A_SpawnParticleEx(
      "", tex[1], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(2,25), size: random(60,195),
	  xoff: -10, velx: frandom(-0.1,0.1), vely: frandom(-0.1,0.1), velz: frandom(-0.1,0.1), startalphaf: 0.9, startroll: random(-180,180));
	  }
  Go:
	TRCR A 1 Bright;
    Loop;
  Death:
	TNT1 A 0
	{
	 A_SpawnParticleEx
	  ( "", tex[3], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
	  lifetime: random(1,20), size: 200.0, xoff: -10, startalphaf: 0.85,
	  fadestepf: -1, startroll: random(-180,180) );
	A_SpawnParticleEx
	  ( "", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
	  lifetime: random(1,100), size: random(1,30), xoff: frandom(-3,3), yoff: frandom(-3,3), zoff: frandom(-3,3),
	  velx: frandom(-1.5,1.5), vely: frandom(-1.5,1.5), velz: frandom(-0.5,1.5),
	  accelz: -0.005, startalphaf: 0.9, startroll: random(-180,180) );
	A_SpawnParticleEx
	  ( "", tex[1], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
	  lifetime: random(5,30), size: random(20,195), startalphaf: 0.9, startroll: random(-180,180) );
	}
    TNT1 AAA 1 Bright Light("Shadowball2");
	TNT1 AA 1 Bright Light("Shadowball3");
    Stop;
  }
}
 
 
