Class PM_SpawnOfBelphegor : PMSlothMonsterBase
{
	Default
	{
		PMMonsterBase.CodexLore
		"\c[olive]Nothing even matters what you do on this insignificant, mortal plane. Why even try? The Sun will explode and the Earth with it, within millions of years everything you do will be forgotten, just like the universe will slowly die from heat death. There's no hope. Why bother?\c-
		
	
		 It is said that the Arch-Demon of Sloth, Belphegor, seduces people with ingenious discoveries that have promise of convenience and wealth, convincing them it was their original ideas. All of his inventions are meant to slowly stagnate mankind. This is one of his more violent cybernetic creations.
		 Unlike other Sloth demons, they are not naturally imbued with the aspects of the sin, but instead created to impose it on others. They heavily rely on slowing their victims down until they are slowly torn apart.
		
		Due to its bulky armor, it is very tanky, but is sluggish as a side effect. Can shoot bloody spears with chained tails. May also fire a huge twilight core and a duo of barbed wire grenades. Can also summon a plasmatic shield if needed.";
		Health 1000;
		Scale 1.25;
		Tag "Spawn of Belphegor";
		BloodType "PM_BlackTyrantBloodBase";
		Radius 22;
		Height 64;
		Speed 7;
		Mass 2000; //tanky.
		Monster;
		PainChance 25;
		+FLOORCLIP
		+DONTHARMCLASS
		+DONTHARMSPECIES
		+MISSILEMORE
		+MISSILEEVENMORE
		+NORADIUSDMG
		MinMissileChance 50;
		DamageFactor 0.92;
		Species "Nobles";
		SeeSound "PMBelphegor/Sight";
		PainSound "PMBelphegor/Pain";
		DeathSound "PMBelphegor/Death";
		ActiveSound "PMBelphegor/Active";
		Obituary "%o is now trapped for eternity by the Spawn of the Belphegor.";
		TeleFogSourceType "PM_SmallDemonicTeleportFog";
		TeleFogDestType "PM_DemonicTeleportFog";
		PMMonsterBase.RealHeight 80;
	}
	
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		tex[0] = TexMan.CheckForTexture("CBALC0",TexMan.Type_Sprite);
		tex[1] = TexMan.CheckForTexture("GNSML0",TexMan.Type_Sprite);
		tex[2] = TexMan.CheckForTexture("SPKOS0",TexMan.Type_Sprite);
		tex[3] = TexMan.CheckForTexture("DUSTC0",TexMan.Type_Sprite);
		tex[4] = TexMan.CheckForTexture("GNSMK0",TexMan.Type_Sprite);
		tex[5] = TexMan.CheckForTexture("FIR4R0",TexMan.Type_Sprite);
		tex[6] = TexMan.CheckForTexture("STR_A0",TexMan.Type_Sprite);
	}
	
	override void Tick()
	{
		super.Tick();
		if (shieldcooldown > 0 && (CountInv("PM_ShieldActive") == 0)) shieldcooldown--;
		if (ballcooldown > 0) ballcooldown--;
	}
	
	TextureID tex[7];
	
	int shieldcooldown;
	int ballcooldown;
	
	States
	{
	Spawn:
		BELP E 0 NoDelay;
	Idle:
		BELP A 10 PM_Look();
		Loop;
	Look:
		BELP BBBB 3 PM_LookingForPlayer();
		TNT1 A 0 A_Quake(1, 4, 0, 312);
		TNT1 A 0
		{
			A_StartSound("hoofstep",9,CHANF_OVERLAP);
			A_StartSound("director/servo",9,CHANF_OVERLAP);
			A_StartSound("director/stomp",9,CHANF_OVERLAP,0.8,pitch:1.35);
			A_SpawnItemEx("PM_BelphegorWalkFire",6,10,flags:SXF_NOCHECKPOSITION);
		}
		BELP CCC 8;
		BELP DDDD 3 PM_LookingForPlayer();
		TNT1 A 0 A_Quake(1, 4, 0, 312);
		TNT1 A 0
		{
			A_StartSound("hoofstep",9,CHANF_OVERLAP);
			A_StartSound("director/servo",9,CHANF_OVERLAP);
			A_StartSound("director/stomp",9,CHANF_OVERLAP,0.8,pitch:1.35);
			A_SpawnItemEx("PM_BelphegorWalkFire",6,-10,flags:SXF_NOCHECKPOSITION);
		}
		BELP AAA 8;
		TNT1 A 0 A_JumpIfTargetinLOS("Spotted",250,JLOSF_DEADNOJUMP);
		Loop;
	Spotted:
		BELP A 0 A_Jump(256, "Roar", "RoarMissile");
	Roar:
		BELP A 0 PM_AlertSound();
		Goto See;
	RoarMissile:
		BELP A 0 PM_AlertSound();
		Goto Missile;
	See:
		BELP BBBB 3 A_Chase();
		TNT1 A 0 A_Quake(1, 4, 0, 312);
		TNT1 A 0
		{
			A_StartSound("hoofstep",9,CHANF_OVERLAP);
			A_StartSound("director/servo",9,CHANF_OVERLAP);
			A_StartSound("director/stomp",9,CHANF_OVERLAP,0.8,pitch:1.35);
			A_SpawnItemEx("PM_BelphegorWalkFire",6,10,flags:SXF_NOCHECKPOSITION);
		}
		BELP CCC 8 A_Chase("Missile","Missile",CHF_DONTMOVE);
		BELP DDDD 3 A_Chase();
		TNT1 A 0 A_Quake(1, 4, 0, 312);
		TNT1 A 0
		{
			A_StartSound("hoofstep",9,CHANF_OVERLAP);
			A_StartSound("director/servo",9,CHANF_OVERLAP);
			A_StartSound("director/stomp",9,CHANF_OVERLAP,0.8,pitch:1.35);
			A_SpawnItemEx("PM_BelphegorWalkFire",6,-10,flags:SXF_NOCHECKPOSITION);
		}
		BELP AAA 8 A_Chase("Missile","Missile",CHF_DONTMOVE);
		Loop;
	Missile:
		BELP A 0 { if (!random(0, 1)) A_StartSound("PMBelphegor/Attack", CHAN_VOICE); }
		BELP A 0 A_Jump(62, "Shield");
		BELP A 0 A_Jump(100, "TwilightOrb");
		BELP A 0 A_Jump(128, "BarbedWireGrenades");
		Goto Chains;
	Chains:
		BELP E 0 A_StartSound("PMBelphegor/Aim", CHAN_7);
		BELP EEEEEEEEEEEEE 2 A_FaceTarget();
		BELP F 0 { pm_attackloop = random(2, 4); }
		Goto ChainLoop;
	ChainLoop:
		BELP FGFGFGF 3 Light("IncarnateExplode6")
		{
			A_FaceTarget(3, 3);
			A_StartSound("PMBelphegor/Chain", CHAN_WEAPON, attenuation: 0.5);
			A_StartSound("ZombieRifleDistant",CHAN_5,CHANF_OVERLAP);
			A_StartSound("Nailgunner/Fire",CHAN_7);
			for (int i = -20; i < 21; i += 40) A_SpawnProjectile("PM_BelphegorChainShot", 48, i, frandom(-5, 5), CMF_OFFSETPITCH|CMF_AIMDIRECTION, pitch - random(5, -5));
		}
		BELP EEEEEEEE 2 A_FaceTarget(6, 6);
		BELP E 0 { pm_attackloop--; if (pm_attackloop <= 0) SetStateLabel("See"); }
		Loop;
	TwilightOrb:
		BELP E 0 { if (ballcooldown > 0) SetStateLabel("BarbedWireGrenades"); }
		BELP E 10 A_FaceTarget();
		BELP E 0
		{
			A_StartSound("GenericChargeHeavy", CHAN_6);
			A_StartSound("PMBelphegor/Charge", CHAN_7);
			A_StartSound("PMBelphegor/AimAdd", 8);
		}
		BELP EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 1 Light("SlothLight1")
		{
			A_FaceTarget();
			A_SpawnParticleEx("045a8f", tex[1], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT, lifetime: random(15,30), size: frandom(100, 150), xoff: 10, zoff: 50, startalphaf: frandom(0.7,1), fadestepf: -1, startroll: random(-180,180));
			A_SpawnParticleEx("103b52", tex[1], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,  lifetime: random(20,40), size: frandom(50, 80), xoff: 10, zoff: 50, startalphaf: frandom(0.7,1), fadestepf: -1, startroll: random(-180,180));
			A_SpawnParticleEx("", tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(10,50), size: frandom(40,80), xoff: 15, zoff: 50, velx: frandom(-0.6,0.6), vely: frandom(-0.6,0.6), velz: frandom(-0.6,0.6), startalphaf: frandom(.5, 1), fadestepf: -0.5, sizestep: -10, startroll: random(-180,180), rollvel: frandom(-4, 4));
		}
		BELP E 5
		{
			ballcooldown = random(100, 500);
			PM_LeadTarget(20);
			A_SpawnProjectile("PM_BelphegorCelestialTwilight", 50, flags: CMF_AIMDIRECTION|CMF_OFFSETPITCH, pitch: pitch);
		}
		BELP E 40;
		Goto See;
	BarbedWireGrenades:
		BELP E 0
		{
			A_StartSound("Landrazer/Aim", CHAN_6);
			A_StartSound("PMBelphegor/Aim", CHAN_7);
		}
		BELP EEEEEEEEEE 2 Light("SlothLight2") A_FaceTarget();
		TNT1 A 0 A_StartSound("Hectebus/Aim",26);
		BELP EEEEEEEEEEEEEEEEE 2 Light("SlothLight2")
		{
			A_FaceTarget(3, 3);
			A_SpawnParticleEx("", tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(10,50), size: frandom(40,90), xoff: 20, yoff: -20, zoff: 48, velx: frandom(-0.6,0.6), vely: frandom(-0.6,0.6), velz: frandom(-0.6,0.6), startalphaf: frandom(.5, 1), fadestepf: -0.5, sizestep: -10, startroll: random(-180,180), rollvel: frandom(-4, 4));
			A_SpawnParticleEx("", tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(10,50), size: frandom(40,90), xoff: 20, yoff: 20, zoff: 48, velx: frandom(-0.6,0.6), vely: frandom(-0.6,0.6), velz: frandom(-0.6,0.6), startalphaf: frandom(.5, 1), fadestepf: -0.5, sizestep: -10, startroll: random(-180,180), rollvel: frandom(-4, 4));
		}
		BELP I 10 Light("SlothLight1")
		{
			A_StartSound("PMBelphegor/Grenade", CHAN_WEAPON);
			A_FaceTarget(3, 3);
			for (int i = 20; i > -21; i -= 40) A_SpawnProjectile("PM_BelphegorGrenade", 48, i, frandom(-10, 10), CMF_OFFSETPITCH|CMF_AIMDIRECTION, pitch - frandom(-8,25));
		}
		BELP EEEEEEEEEEEEE 2 A_FaceTarget(3, 3);
		Goto See;
	Pain:
		BELP H 4;
		BELP H 2 A_Pain();
		BELP H 0 A_Jump(96, "Missile");
		BELP H 2 { if (Health < (GetMaxHealth() / 1.5) && !random(0, 5)) SetStateLabel("Shield"); }
		Goto See;
	Shield:
		BELP A 0 { if (CountInv("PM_ShieldActive") >= 1) SetStateLabel("Chains"); }
		BELP A 0 { if (shieldcooldown > 0) SetStateLabel("BarbedWireGrenades"); }
		BELP A 5 A_Facetarget();
		BELP E 0 { bNOPAIN = true; A_StartSound("PMBelphegor/Active", CHAN_VOICE); }
		BELP E 0 A_StartSound("PMBelphegor/AimAdd", 8, pitch: 0.65);
		BELP EEEEEEEEEEEEEE 1
		{
			A_SpawnParticleEx("f716bf", tex[1], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT, lifetime: random(15,30), size: frandom(100, 150), xoff: 10, zoff: 50, startalphaf: frandom(0.7,1), fadestepf: -1, startroll: random(-180,180));
			A_SpawnParticleEx("f716bf", tex[1], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,  lifetime: random(20,40), size: frandom(50, 80), xoff: 10, zoff: 50, startalphaf: frandom(0.7,1), fadestepf: -1, startroll: random(-180,180));
			A_SpawnParticleEx("f716bf", tex[5], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(10,50), size: frandom(40,80), xoff: 15, zoff: 50, velx: frandom(-0.6,0.6), vely: frandom(-0.6,0.6), velz: frandom(-0.6,0.6), startalphaf: frandom(.5, 1), fadestepf: -0.5, sizestep: -10, startroll: random(-180,180), rollvel: frandom(-4, 4));
			A_Facetarget();
		}
		BELP E 1 { shieldcooldown = random(400, 900); A_SpawnItemEx("PM_BelphegorShield", flags: SXF_NOCHECKPOSITION|SXF_SETMASTER); }
		BELP EEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 1
		{
			A_SpawnParticleEx("f716bf", tex[1], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT, lifetime: random(15,30), size: frandom(100, 150), xoff: 10, zoff: 50, startalphaf: frandom(0.7,1), fadestepf: -1, startroll: random(-180,180));
			A_SpawnParticleEx("f716bf", tex[1], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,  lifetime: random(20,40), size: frandom(50, 80), xoff: 10, zoff: 50, startalphaf: frandom(0.7,1), fadestepf: -1, startroll: random(-180,180));
			A_SpawnParticleEx("f716bf", tex[5], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(10,50), size: frandom(40,80), xoff: 15, zoff: 50, velx: frandom(-0.6,0.6), vely: frandom(-0.6,0.6), velz: frandom(-0.6,0.6), startalphaf: frandom(.5, 1), fadestepf: -0.5, sizestep: -10, startroll: random(-180,180), rollvel: frandom(-4, 4));
			A_Facetarget();
		}
		BELP E 0 { bNOPAIN = false; }
		Goto Missile;
	Death:
		BELP H 5;
		BELD A 0
		{
			A_KillChildren("PM_BelphegorShield");
			A_Scream();
		}
		BELD AAAAAAAAAAAAAAAAAAABBB 2
		{
			A_SpawnParticleEx("045a8f", tex[1], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT, lifetime: random(15,30), size: frandom(100, 250), xoff: 10, zoff: 50, startalphaf: frandom(0.7,1), fadestepf: -1, startroll: random(-180,180));
			A_SpawnParticleEx("103b52", tex[1], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,  lifetime: random(20,40), size: frandom(50, 80), xoff: 10, zoff: 50, startalphaf: frandom(0.7,1), fadestepf: -1, startroll: random(-180,180));
			A_SpawnParticleEx("", tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: 2, size: frandom(1,200), xoff: 15, zoff: 50, velx: frandom(-0.6,0.6), vely: frandom(-0.6,0.6), velz: frandom(-0.6,0.6), startalphaf: frandom(.5, 1), fadestepf: -0.5, sizestep: -10, startroll: random(-180,180), rollvel: frandom(-4, 4));
		}
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0
		{
			A_SpawnParticleEx("00ffbd",tex[2],style: STYLE_Add,flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,lifetime: random(200,250),size: frandom(0.2,22),zoff: random(5,70),velx: frandom(-3,3),vely: frandom(-3,3),velz: frandom(-3,3),startalphaf: 1,startroll: random(-180,180));
		}
		BELD C 8
		{
			A_NoBlocking();
			A_StartSound("ArachChassisExplode", 19);
			A_StartSound("PMBelphegor/DeathAdd", 20, attenuation: 0.75);
			A_StartSound("Noble/BombExpFar", 21);
			A_StartSound("ArachExpGore",22);
			for (int i = 3; i > 0; i--)
			{
				let exp = Spawn("PM_ExplosionFlareSpawner", Vec3Offset(frandom(-10, 10), frandom(-10, 10), frandom(-10, 10) + 50));
				if (exp) { exp.vel = (frandom(-3, 3), frandom(-3, 3), frandom(-3, 3)); exp.A_SetRenderStyle(1, STYLE_ADDSHADED); exp.SetShade("40acff"); }
			}
			for (int i = 6; i > 0; i--)
			{
				let exp = Spawn("PM_InfernalLavaSplashBig", Vec3Offset(frandom(-10, 10), frandom(-10, 10), frandom(-10, 10) + 50));
				if (exp) { exp.vel = (frandom(-3, 3), frandom(-3, 3), frandom(-3, 3)); exp.A_SetRenderStyle(1, STYLE_STENCIL); exp.SetShade("000000"); }
				A_SpawnItemEx("PM_BlackMeatChunkLauncher",0,0,random(30,50),0,0,0,0,SXF_NOCHECKPOSITION);
			}
			Radius_Quake(5, 20, 0, 20, 0);
			A_Explode(10, 250);
			A_RadiusThrust(6500,250,RTF_NOIMPACTDAMAGE);
			A_StartSound("PMBelphegor/TwilightExplode", 50);
			for(int i=random(6, 16); i>0; i--) A_SpawnParticleEx("40acff", tex[4], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT, lifetime: random(150,600), size: frandom(100, 200), zoff: 50, velx: frandom(-1, 1), vely: frandom(-1, 1), velz: frandom(-1, 1), startalphaf: frandom(.15,.3), fadestepf: -1, sizestep: 5, startroll: random(-180,180), rollvel: frandom(-1, 1));
			for(int i=3; i>0; i--) A_SpawnParticleEx("", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(20,45), size: frandom(400, 600), zoff: 50, velx: frandom(-0.6,0.6), vely: frandom(-0.6,0.6), velz: frandom(-0.6,0.6), startalphaf: frandom(.5, 1), fadestepf: -0.5, sizestep: 30, startroll: random(-180,180), rollvel: frandom(-4, 4));
			for(int i=random(20, 40); i > 0; i--) A_SpawnParticleEx("", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(150,200), size: frandom(10,35), xoff: frandom(-20, 20), yoff: frandom(-20, 20), zoff: frandom(-20, 20) + 50, velx: frandom(-10,10), vely: frandom(-10,10), velz: frandom(-10,10), accelz: -0.05, startalphaf: frandom(.1, .2), fadestepf: -0.5, sizestep: -1, startroll: random(-180,180), rollvel: frandom(-4, 4));
			for(int i=random(15,40);i>0;i--) A_SpawnParticleEx("727272",tex[3],style: STYLE_Normal,flags: SPF_RELATIVE|SPF_ROLL,lifetime: random(40,70),size: frandom(2,35),xoff: frandom(-20, 20), yoff: frandom(-20, 20), zoff: frandom(-20, 20) + 50,velx: frandom(-8,8),vely: frandom(-8,8),velz: frandom(-8,12),accelz: frandom(-0.1,-0.5),startalphaf: 1.0,sizestep: -0.2,startroll: random(-180,180),rollvel: random(-4,4));
			for(int i=random(5, 10); i>0; i--) A_SpawnParticleEx("0c2036", tex[1], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT, lifetime: random(100,200), size: frandom(100, 200), xoff: frandom(-20, 20), yoff: frandom(-20, 20), zoff: frandom(-20, 20) + 50, velx: frandom(-1, 1), vely: frandom(-1, 1), velz: frandom(-1, 1), startalphaf: frandom(0.2,1), fadestepf: -1, sizestep: 2, startroll: random(-180,180), rollvel: frandom(-1, 1));
		}
		TNT1 AAAAAA 0 A_SpawnItemEx("PM_BlackMeatChunkLauncher",0,0,random(30,50),0,0,0,0,SXF_NOCHECKPOSITION);
		BELD DEFGHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH random(3, 10)
		{
			A_SpawnParticleEx("0c2036", tex[1], style: STYLE_Normal, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT, lifetime: random(100,200), size: frandom(100, 200), xoff: frandom(-20, 20), yoff: frandom(-20, 20), zoff: frandom(-20, 20) + 50, velx: frandom(-1, 1), vely: frandom(-1, 1), velz: frandom(-1, 1), startalphaf: frandom(0.2,.5), fadestepf: -1, sizestep: 2, startroll: random(-180,180), rollvel: frandom(-1, 1));
			for (int i = random(1, 4); i > 0; i--) A_SpawnParticleEx("", tex[6], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(30,100), size: frandom(5,25), xoff: frandom(-150, 150), yoff: frandom(-150, 150), zoff: frandom(-90, 90) + 50, velz: frandom(-0.1, 1), startalphaf: 1, fadestepf: -0.5, sizestep: -1,startroll: random(-180,180));
			A_SpawnParticleEx("40acff", tex[1], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT, lifetime: random(150,600), size: frandom(100, 200), zoff: 50, velx: frandom(-1, 1), vely: frandom(-1, 1), velz: frandom(-1, 1), startalphaf: frandom(.15,.3), fadestepf: -1, sizestep: 5, startroll: random(-180,180), rollvel: frandom(-1, 1));
		}
		BELD H -1;
		Stop;
	Raise:
		BELD HGFEDCBA 6;
		Goto See;
	}
}

Class PM_BelphegorChainShot : PM_NailgunnerNail 
{
	Default
	{
		DamageFunction 7;
		Speed 30;
		Radius 3;
		Height 5;
		Scale 1.35;
		DeathSound "PMBelphegor/ChainImpact";
	}

	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0
			{
				A_SpawnParticleEx("#d2d2d2", TexMan.CheckForTexture("GNSMK0"), style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: random(10,250), size: frandom(10,50), xoff: -25, velx: frandom(0,2), vely: frandom(-0.4,0.4), velz: frandom(-0.4,0.7), startalphaf: frandom(0.1,0.5), fadestepf: -0.5, sizestep: frandom(0.0,1.4), startroll: random(-180,180), rollvel: frandom(-1,1));
				A_SpawnParticleEx("", TexMan.CheckForTexture("DTPRR0"), style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: 10, size: frandom(80,120.0), xoff: -10, startalphaf: frandom(0.5,0.8), fadestepf: 0.1, sizestep: 8, startroll: random(-180,180));
				A_SpawnParticleEx("", TexMan.CheckForTexture("SPKRA0"), style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: 15, size: frandom(80,120.0), xoff: -13, startalphaf: frandom(0.5,0.8), fadestepf: 0.1, sizestep: -10, startroll: random(-180,180));
			}
		Go:
			BLAD A 1 { PM_CheckWhiz(); A_SpawnItemEx("PM_BelphegorChainShotBlur"); }
			Loop;
		Death:
			BLAD A 0
			{
				A_SpawnItemEx("PM_HitPuff",flags:SXF_NOCHECKPOSITION);
				A_SpawnItemEx("PM_NormalHitSpark",flags:SXF_NOCHECKPOSITION);
				A_StartSound("PM/BulletHit",2);
				A_SpawnItemEx("PM_BulletHitDust",random(-10,10),random(-10,10),random(-10,10),0,0,0,0,SXF_NOCHECKPOSITION,170);
			}
			TNT1 AAAA 0 A_SpawnItemEx("PM_BulletShrapnel",0,0,0,random(-10,10),random(-10,10),random(-10,10),random(-180,180),SXF_NOCHECKPOSITION,170);
			BLAD A 80;
			stop;
		  XDeath:
			BLAD A 1 Bright A_RadiusThrust(800,90,RTF_NOIMPACTDAMAGE);
			TRCR A 0 A_StartSound("PM/BulletHitFlesh",2);
			stop;
		  Crash:
			TNT1 A 1 Bright A_RadiusThrust(800,90,RTF_NOIMPACTDAMAGE);
			TNT1 A 1
			{
				A_SpawnItemEx("PM_HitPuff",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
				A_StartSound("PM_BulletHit",2);
			}
			Stop;
	}
}

Class PM_BelphegorChainShotBlur : PM_NailgunnerNailBlur { Default { Scale 1.35; Alpha 0.85; } }

Class PM_BelphegorCelestialTwilight : BaronBall
{
	Default
	{
		SeeSound "PMBelphegor/TwilightFire";
		DeathSound "";
		DamageFunction (0);
		Speed 4;
		BounceType "Hexen";
		+SEEKERMISSILE
		BounceCount 3;
		BounceFactor 1;
		+CANBOUNCEWATER
		+BOUNCEONCEILINGS
		+BOUNCEONWALLS
		+BOUNCEONFLOORS
		+BRIGHT
		+FORCEXYBILLBOARD
		+ROLLSPRITE
		+ROLLCENTER
		+SEEKERMISSILE
		-RANDOMIZE
		RenderStyle "Subtract";
		Scale 0.65;
		Radius 15;
		Height 15;
		Translation "0:255=%[0.00,0.00,0.00]:[1.01,2.00,2.00]";
		//DamageType "Ice";
	}
	
	int timer;
	
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		tex[0] = TexMan.CheckForTexture("CBALC0",TexMan.Type_Sprite);
		tex[1] = TexMan.CheckForTexture("GNSML0",TexMan.Type_Sprite);
		tex[2] = TexMan.CheckForTexture("SPKOS0",TexMan.Type_Sprite);
		tex[3] = TexMan.CheckForTexture("GNSMK0",TexMan.Type_Sprite);
		timer = random(280,500);
	}
	  
	TextureID tex[4];
	
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			for(int i=3; i>0; i--) A_SpawnParticleEx("", tex[randompick(0, 2)], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(30,60), size: frandom(100,280), velx: frandom(-0.6,0.6), vely: frandom(-0.6,0.6), velz: frandom(-0.6,0.6), startalphaf: frandom(.5, 1), fadestepf: -0.5, sizestep: 15, startroll: random(-180,180), rollvel: frandom(-4, 4));
			A_StartSound("PMBelphegor/Twilight1", 100, CHANF_LOOP|CHANF_OVERLAP);
			A_StartSound("PMBelphegor/Twilight1", 100, CHANF_LOOP|CHANF_OVERLAP, pitch: 0.5);
			A_StartSound("PMBelphegor/Twilight2", 101, CHANF_LOOPING);
		}
		Goto Go;
	Go:
		SPKW E 1 Light("SlothLight1")
		{
			if(timer <= 0) SetStateLabel("Death");
			A_SetRoll(roll+5);
			
				A_SpawnParticleEx("00fffb", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(400,500), size: frandom(1,15), xoff: -5, yoff: frandom(-50,45), zoff: frandom(-50,50), velx: frandom(-1,3), startalphaf: frandom(.2, .9), fadestepf: -1, sizestep: -0.05, startroll: random(-180,180), rollvel: frandom(-4, 4));
				A_SpawnParticleEx("279ca5", tex[3], style: STYLE_Stencil, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT, lifetime: random(50,90), size: frandom(30, 100), xoff: -10, yoff: frandom(-30,30), zoff: frandom(-30,30), startalphaf: frandom(0.2,0.5), fadestepf: -1, sizestep: -1, startroll: random(-180,180));
				A_SpawnParticleEx("103b52", tex[3], style: STYLE_Stencil, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,  lifetime: random(50,120), size: frandom(30, 180), xoff: -10, yoff: frandom(-30,30), zoff: frandom(-30,30), startalphaf: frandom(0.2,0.5), fadestepf: -1, sizestep: -1, startroll: random(-180,180));
				A_SpawnParticleEx("00ffc9", tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: 1, size: 240, xoff: -5, startalphaf: frandom(.8, 1), fadestepf: 0, sizestep: 0, startroll: random(-180,180), rollvel: frandom(-4, 4));
				vel.x += frandom(-0.05, 0.05);
				vel.y += frandom(-0.05, 0.05);
				vel.z += frandom(-0.05, 0.05);
			
			A_Tracer2(1.5);
			timer--;
		}
		Loop;
	Death:
		BH_B A 2 Light("SlothLight1")
		{
			A_StartSound("PMBelphegor/Twilight3", 10, attenuation: 0.65);
			A_StartSound("PMBelphegor/Twilight3", 11, attenuation: 0.85, pitch: 2.5);
			let orb = Spawn("PM_DirectorMindPower", Vec3Offset(0, 0, 0));
			if (orb) { orb.alpha = 1; orb.translation = translation; orb.A_SetRenderStyle(1, STYLE_ADD); }
			A_Stop();
		}
		BH_B AAAAAAAAAAAAAAAAAAAAAAAA 1 Light("SlothLight1")
		{
			A_SetRoll(roll+5);
			A_SpawnParticleEx("", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(150,200), size: frandom(10,35), velx: frandom(-6,6), vely: frandom(-6,6), velz: frandom(-6,6), accelz: -0.05, startalphaf: frandom(.2, .5), fadestepf: -0.5, sizestep: -1, startroll: random(-180,180), rollvel: frandom(-4, 4));
			A_SpawnParticleEx("045a8f", tex[1], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT, lifetime: random(15,30), size: frandom(150, 250), xoff: -5, startalphaf: frandom(0.7,1), fadestepf: -1, startroll: random(-180,180));
			A_SpawnParticleEx("103b52", tex[1], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,  lifetime: random(20,40), size: frandom(100, 200), xoff: -5, startalphaf: frandom(0.7,1), fadestepf: -1, startroll: random(-180,180));
			A_SpawnParticleEx("", tex[randompick(0, 2)], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(10,50), size: frandom(100,280), velx: frandom(-0.6,0.6), vely: frandom(-0.6,0.6), velz: frandom(-0.6,0.6), startalphaf: frandom(.5, 1), fadestepf: -0.5, sizestep: -10, startroll: random(-180,180), rollvel: frandom(-4, 4));
			A_FaceTracer(5,5);
			vel.x += frandom(-0.05, 0.05);
			vel.y += frandom(-0.05, 0.05);
			vel.z += frandom(-0.05, 0.05);
		}
		BH_B A 2 Light("SlothLight1")
		{
			A_StartSound("PMBelphegor/Twilight3", 12, attenuation: 0.65, pitch: 1.5);
			A_StartSound("PMBelphegor/Twilight3", 13, attenuation: 0.85, pitch: 3.5);
			let orb = Spawn("PM_DirectorMindPower", Vec3Offset(0, 0, 0));
			if (orb) { orb.alpha = 1; orb.scale *= 1.5; orb.translation = translation; orb.A_SetRenderStyle(1, STYLE_ADD); }
			A_Stop();
		}
		BH_B AAAAAAAAAAAAAAAAAAAAAAAA 1 Light("SlothLight1")
		{
			A_SetRoll(roll+5);
			A_SpawnParticleEx("", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(150,200), size: frandom(10,35), velx: frandom(-6,6), vely: frandom(-6,6), velz: frandom(-6,6), accelz: -0.05, startalphaf: frandom(.2, .5), fadestepf: -0.5, sizestep: -1, startroll: random(-180,180), rollvel: frandom(-4, 4));
			A_SpawnParticleEx("045a8f", tex[1], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT, lifetime: random(15,30), size: frandom(150, 250), xoff: -5, startalphaf: frandom(0.7,1), fadestepf: -1, startroll: random(-180,180));
			A_SpawnParticleEx("103b52", tex[1], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,  lifetime: random(20,40), size: frandom(100, 200), xoff: -5, startalphaf: frandom(0.7,1), fadestepf: -1, startroll: random(-180,180));
			A_SpawnParticleEx("", tex[randompick(0, 2)], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(10,50), size: frandom(100,280), velx: frandom(-0.6,0.6), vely: frandom(-0.6,0.6), velz: frandom(-0.6,0.6), startalphaf: frandom(.5, 1), fadestepf: -0.5, sizestep: -10, startroll: random(-180,180), rollvel: frandom(-4, 4));
			A_FaceTracer(5,5);
			vel.x += frandom(-0.05, 0.05);
			vel.y += frandom(-0.05, 0.05);
			vel.z += frandom(-0.05, 0.05);
		}
		TNT1 A 1;
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0
		{
			A_SpawnParticleEx("00ffbd",tex[2],style: STYLE_Add,flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,lifetime: random(200,250),size: frandom(0.2,22),velx: frandom(-2,2),vely: frandom(-2,2),velz: frandom(-2,2),startalphaf: 1,startroll: random(-180,180));
		}
		TNT1 A 30
		{
			for (int i = 2; i > 0; i--)
			{
				let orb = Spawn("PM_DirectorMindPower", Vec3Offset(0, 0, 0));
				if (orb) { orb.alpha = 1; orb.scale *= 3; orb.translation = translation; orb.A_SetRenderStyle(1, STYLE_ADD); }
			}
			
			A_Explode((55), 300);
			A_RadiusGive("PM_SlothSlowdownLong", 285, RGF_PLAYERS);
			A_StopSounds(100, 101);
			Radius_Quake(6, 20, 0, 20, 0);
			A_RadiusThrust(6500,600,RTF_NOIMPACTDAMAGE);
			A_StartSound("PMBelphegor/TwilightExplode", 50);
			for(int i=random(6, 12); i>0; i--) A_SpawnParticleEx("40acff", tex[1], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT, lifetime: random(150,600), size: frandom(100, 200), xoff: frandom(-20, 20), yoff: frandom(-20, 20), zoff: frandom(-20, 20), velx: frandom(-1, 1), vely: frandom(-1, 1), velz: frandom(-1, 1), startalphaf: frandom(0.2,1), fadestepf: -1, sizestep: 5, startroll: random(-180,180), rollvel: frandom(-1, 1));
			for(int i=3; i>0; i--) A_SpawnParticleEx("", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(20,45), size: frandom(100,280), velx: frandom(-0.6,0.6), vely: frandom(-0.6,0.6), velz: frandom(-0.6,0.6), startalphaf: frandom(.5, 1), fadestepf: -0.5, sizestep: 45, startroll: random(-180,180), rollvel: frandom(-4, 4));
			for(int i=random(20, 40); i > 0; i--) A_SpawnParticleEx("", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(150,200), size: frandom(10,35), xoff: frandom(-20, 20), yoff: frandom(-20, 20), zoff: frandom(-20, 20), velx: frandom(-10,10), vely: frandom(-10,10), velz: frandom(-10,10), accelz: -0.05, startalphaf: frandom(.8, 1), fadestepf: -0.5, sizestep: -1, startroll: random(-180,180), rollvel: frandom(-4, 4));
		}
		Stop;
	}
}

Class PM_BelphegorGrenade : Rocket 
{
	Default
	{
		DamageFunction 20;
		Speed 30;
		Radius 3;
		Height 5;
		Scale 1.35;
		-ROCKETTRAIL
		-ZDOOMTRANS
		-NOGRAVITY
		+BRIGHT
		Alpha 1;
		RenderStyle "Normal";
		SeeSound "Belphegor/Grenade";
		DeathSound "";
		Translation "0:255=%[0.00,0.00,0.00]:[0.46,0.46,0.46]", "16:60=%[0.00,0.00,0.00]:[1.01,2.00,2.00]", "160:235=%[0.00,0.00,0.00]:[1.01,2.00,2.00]", "0:0=%[0.00,0.00,0.00]:[1.01,2.00,2.00]";
	}
	
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		tex[0] = TexMan.CheckForTexture("CBALC0",TexMan.Type_Sprite);
		tex[1] = TexMan.CheckForTexture("GNSML0",TexMan.Type_Sprite);
		tex[2] = TexMan.CheckForTexture("SPKOS0",TexMan.Type_Sprite);
		tex[3] = TexMan.CheckForTexture("STR_A0",TexMan.Type_Sprite);
	}
	  
	TextureID tex[4];
	
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0
			{
				for (int i = 2; i > 0; i--)
				{
					A_SpawnParticleEx("#d2d2d2", tex[1], style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: random(10,250), size: frandom(10,50), xoff: -25, velx: frandom(0,2), vely: frandom(-0.4,0.4), velz: frandom(-0.4,0.7), startalphaf: frandom(0.1,0.5), fadestepf: -0.5, sizestep: frandom(0.0,1.4), startroll: random(-180,180), rollvel: frandom(-1,1));
					A_SpawnParticleEx("", tex[randompick(0, 2)], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(30,60), size: frandom(30,80), velx: frandom(-0.6,0.6), vely: frandom(-0.6,0.6), velz: frandom(-0.6,0.6), startalphaf: frandom(.5, 1), fadestepf: -0.5, sizestep: 15, startroll: random(-180,180), rollvel: frandom(-4, 4));
				}
				
				A_SpawnParticleEx("", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: 15, size: frandom(80,120.0), xoff: -13, startalphaf: frandom(0.5,0.8), fadestepf: 0.1, sizestep: -10, startroll: random(-180,180));
			}
		Go:
			CMIS A 1 A_SpawnParticleEx("#d2d2d2", tex[1], style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: random(10,250), size: frandom(10,20), xoff: -5, velx: frandom(0,2), vely: frandom(-0.4,0.4), velz: frandom(-0.4,0.7), startalphaf: frandom(0.1,0.5), fadestepf: -0.5, sizestep: frandom(0.0,1.4), startroll: random(-180,180), rollvel: frandom(-1,1));
			Loop;
		Death:
			BLAD A 0
			{
				bNOGRAVITY = true;
				A_Explode(20, 50);
				A_StartSound("Noble/BombExp",CHAN_7);
				A_StartSound("Noble/BombExpFar",CHAN_7);
				for (int i = 6; i > 0; i--)
				{
					let glob = Spawn("PM_BigFireGlobs", Vec3Offset(0, 0, 35));
					if (glob)
					{
						glob.vel.x = random(-5, 5);
						glob.vel.y = random(-5, 5);
						glob.vel.z = random(-5, 5);
						glob.SetShade("45d0ff");
						glob.A_SetRenderStyle(1, STYLE_AddShaded);
					}
					
					A_SpawnItemEx("PM_BarbedWireTemp", frandom(-80, 80), frandom(-80, 80), 0);
				}
				
				for(int i=random(5, 10); i>0; i--) A_SpawnParticleEx("40acff", tex[1], style: STYLE_Normal, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT, lifetime: random(80,300), size: frandom(100, 200), xoff: frandom(-20, 20), yoff: frandom(-20, 20), zoff: frandom(-20, 20), velx: frandom(-1, 1), vely: frandom(-1, 1), velz: frandom(-1, 1), startalphaf: frandom(0.2,1), fadestepf: -1, sizestep: 2, startroll: random(-180,180), rollvel: frandom(-1, 1));
				for(int i=random(5, 10); i>0; i--) A_SpawnParticleEx("0c2036", tex[1], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT, lifetime: random(60,100), size: frandom(100, 200), xoff: frandom(-20, 20), yoff: frandom(-20, 20), zoff: frandom(-20, 20), velx: frandom(-1, 1), vely: frandom(-1, 1), velz: frandom(-1, 1), startalphaf: frandom(0.2,1), fadestepf: -1, sizestep: 2, startroll: random(-180,180), rollvel: frandom(-1, 1));
				for(int i=2; i>0; i--) A_SpawnParticleEx("", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(20,45), size: frandom(100,200), velx: frandom(-0.6,0.6), vely: frandom(-0.6,0.6), velz: frandom(-0.6,0.6), startalphaf: frandom(.5, 1), fadestepf: -0.5, sizestep: 30, startroll: random(-180,180), rollvel: frandom(-4, 4));
			}
			//TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA random(1, 5)
			//{
			//	A_SpawnParticleEx("0c2036", tex[1], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT, lifetime: random(100,200), size: frandom(100, 200), xoff: frandom(-20, 20), yoff: frandom(-20, 20), zoff: frandom(-20, 20), velx: frandom(-1, 1), vely: frandom(-1, 1), velz: frandom(-1, 1), startalphaf: frandom(0.2,1), fadestepf: -1, sizestep: 2, startroll: random(-180,180), rollvel: frandom(-1, 1));
			//	for (int i = random(1, 2); i > 0; i--) A_SpawnParticleEx("", tex[3], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(30,100), size: frandom(5,25), xoff: frandom(-90, 90), yoff: frandom(-90, 90), zoff: frandom(-90, 90), velz: frandom(-0.1, 1), startalphaf: 1, fadestepf: -0.5, sizestep: -1, startroll: random(-180,180));
			//}
			Stop;
	}
}