
Class PM_DeathEmissary : PMDeathMonsterBase
{
    int rush;
	int deathwither;
	int oldspeed;
	bool phased;
    Default
	{
	//$Category "PM_Monsters/Barons"
    Health 1000;
    Radius 22;
    Height 64;
    Speed 16;
	Scale 1.1;
    PainChance 20;
    Mass 1500;
    MONSTER;
	Bloodtype "PM_DeathBloodBase";
    +FLOORCLIP
	//+NOINFIGHTING
	+DONTHARMCLASS
	+DONTHARMSPECIES
	+MISSILEMORE
	Species "Nobles";
	//DropItem "RagePoint1"
    SeeSound "DEmi/Sight";
    PainSound "DEmi/Pain";
    DeathSound "DEmi/Death";
    ActiveSound "DEmi/Active";
    MeleeSound "baron/melee";
	Tag "Death's Emissary";
    Obituary "The final resting place of man has sent an Emissary to collect %o's stubborn soul.";
	StencilColor "Blue";
	BloodColor "Black";
    MeleeDamage 8;
	TeleFogSourceType "PM_SmallDemonicTeleportFog";
	TeleFogDestType "PM_DemonicTeleportFog";
	PMMonsterBase.RealHeight 78;
	}

    void PM_DIWither()
	{
	 for(int i=random(1,3);i>0;i--)
	 A_SpawnParticleEx
	 (
	 "545454",
	 tex[1],
	 style: STYLE_None, flags: SPF_ROLL|SPF_RELATIVE, lifetime: random(50,160),
	 size: frandom(30,100), xoff: frandom(-35,35), yoff: frandom(-35,35), zoff: frandom(0,15),
	 velx: frandom(-1,1), vely: frandom(-1,1), velz: frandom(0,2),
	 startalphaf: frandom(0.50,0.95), fadestepf: -1, sizestep: frandom(-0.8,0.8),
	 startroll: random(-180,180), rollvel: frandom(-0.3,0.3)
	 );
	 A_SpawnParticleEx
	 (
	 "848484",
	 tex[0],
	 style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL, lifetime: random(90,270),
	 size: frandom(1,32), xoff: random(-35,35), yoff: random(-35,35), zoff: frandom(0,25),
	 velx: frandom(-1,1), vely: frandom(-1,1), velz: frandom(0.3,4),
	 startalphaf: 1.0, fadestepf: -0.05, sizestep: frandom(-0.1,-1), 
	 startroll: random(-180,180), rollvel: random(-4,4)
	 );
	 for(int i=random(1,3);i>0;i--)
	 A_SpawnParticleEx
	 (
	 "",
	 tex[2],
	 style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,
	 lifetime: random(70,170), size: frandom(1,5), xoff: random(-30,30),
	 yoff: random(-35,35), zoff: random(-10,45), velx: frandom(-1,1),
	 vely: frandom(-1,1), velz: frandom(0,1),
	 accelx: frandom(-0.0095,0.0095), accely: frandom(-0.0095,0.0095),  accelz: frandom(0.0015,0.0045),
	 startalphaf: frandom(0.75,1), fadestepf: -0.10, sizestep: -0.05, startroll: random(-180,180)
	 );
	}
	
	void PM_DIWitherBig()
	{
	 for(int i=random(1,3);i>0;i--)
	 A_SpawnParticleEx
	 (
	 "545454",
	 tex[1],
	 style: STYLE_None, flags: SPF_ROLL|SPF_RELATIVE, lifetime: random(50,160),
	 size: frandom(30,140), xoff: frandom(-48,48), yoff: frandom(-48,48), zoff: frandom(0,6),
	 velx: frandom(-2,2), vely: frandom(-2,2), velz: frandom(0,0.3),
	 startalphaf: frandom(0.50,0.95), fadestepf: -1, sizestep: frandom(-0.2,2),
	 startroll: random(-180,180), rollvel: frandom(-0.3,0.3)
	 );
	 A_SpawnParticleEx
	 (
	 "848484",
	 tex[0],
	 style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL, lifetime: random(90,270),
	 size: frandom(1,32), xoff: random(-48,48), yoff: random(-48,48), zoff: frandom(0,25),
	 velx: frandom(-1,1), vely: frandom(-1,1), velz: frandom(0.3,4),
	 startalphaf: 1.0, fadestepf: -0.05, sizestep: frandom(-0.1,-1), 
	 startroll: random(-180,180), rollvel: random(-4,4)
	 );
	 for(int i=random(1,3);i>0;i--)
	 A_SpawnParticleEx
	 (
	 "",
	 tex[2],
	 style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,
	 lifetime: random(70,170), size: frandom(1,5), xoff: random(-30,30),
	 yoff: random(-35,35), zoff: random(-10,45), velx: frandom(-1,1),
	 vely: frandom(-1,1), velz: frandom(0,1),
	 accelx: frandom(-0.0095,0.0095), accely: frandom(-0.0095,0.0095),  accelz: frandom(0.0015,0.0045),
	 startalphaf: frandom(0.75,1), fadestepf: -0.10, sizestep: -0.05, startroll: random(-180,180)
	 );
	}
	
	void PM_DemiPhaseShootSmoke()
	{
	A_SpawnParticleEx
	(
	"0B3D94",
	tex[1], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL,
	lifetime: random(30,120), size: frandom(30,200), xoff: frandom(-20,20), yoff: frandom(-20,20), zoff: frandom(0,80),
	velx: frandom(-1,1), vely: frandom(-1,1), velz: frandom(-1,1),
	startalphaf: frandom(0.6,0.95), fadestepf: -0.3, sizestep: frandom(0.0,1.4), 
	startroll: random(-180,180), rollvel: frandom(-1,1)
	);
	}
	
	void PM_DemiPhaseTrans()
	{
	 phased = true;
	 speed = 20;
	 bNOPAIN = true;
	}
	
	void PM_DemiPhaseDeTrans()
	{
	 phased = false;
	 speed = oldspeed;
	 bNOPAIN = false;
	}
	
	void PM_DIChase()
	{
	 if(alpha < 1)
	 A_FadeIn(0.1,0);
	 if(random(1,80) == 1 && !rush)
	   rush = 60;
	 if(rush)
	 {  
	 A_Recoil(-1); 
	 A_Chase(); 
	 A_SetTics(2);
	 A_SpawnItemEx("PM_GenericPhaseGhost",xofs:-5,flags:SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERALPHA|SXF_TRANSFERSCALE|SXF_TRANSFERSTENCILCOL);
	 rush--;
	 }
	 else
	 {
	 A_Recoil(-0.25); 
	 A_Chase();
	 }
	}
	
	void PM_DIPhaseChase()
	{
	if(random(1,45) == 1 && target && CheckSight(target) && Distance3D(target) < 400)
		SetStateLabel("MinigunChoice");
	 if(random(1,70) == 1)
	 A_StartSound("DEmi/Hum",28);
	 if(random(1,35) == 1)
	 { A_FaceTarget(); A_SpawnItemEx("PM_GenericPhaseGhost",flags:SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE|SXF_TRANSFERSTENCILCOL); }
	 A_Wander();
	}
	
	override void PostBeginPlay()
	{ 
	Super.PostBeginPlay(); 
	oldspeed = speed; 
	deathwither = random(10,90);
	tex[0] = TexMan.CheckForTexture("DUSTC0",TexMan.Type_Sprite);
	tex[1] = TexMan.CheckForTexture("GNSMK0",TexMan.Type_Sprite);
	tex[2] = TexMan.CheckForTexture("SPKOS0",TexMan.Type_Sprite);
	}
	
	TextureID tex[3];
	
    States
    {
    Spawn:
	    TNT1 A 0 NoDelay A_Jump(65,"PhaseIdle");
	Idle:
        LMDA A 10 PM_Look();
        Loop;
	PhaseIdle:
	    TNT1 A 0 
		{
		for(int i=45;i>0;i--)
		A_Wander();
		A_FadeOut(1.0,0);
		}
		TNT1 A 0 PM_DemiPhaseTrans();
	PhaseIdle2:
	    LMDA A 10 A_LookEx(LOF_NOSEESOUND,label:"PhaseSeeGo");
		Loop;
    Look:
        LMDA AABB 4 PM_LookingForPlayer();
		TNT1 A 0 A_Quake(1, 4, 0, 312);
		TNT1 A 0 A_StartSound("hoofstep",3);
        TNT1 A 0 A_JumpIfTargetinLOS("Spotted",250,JLOSF_DEADNOJUMP);
		LMDA CCDD 4 PM_LookingForPlayer();
		TNT1 A 0 A_Quake(1, 4, 0, 312);
		TNT1 A 0 A_StartSound("hoofstep",3);
        Loop;
    Spotted:
    Roar:
        TNT1 A 0 PM_AlertSound();
    See2:
		TNT1 A 0 A_SetSpeed(16);
        LMDA AABB 3 PM_DIChase();
		TNT1 A 0 A_Quake(1, 4, 0, 312);
		TNT1 A 0 A_StartSound("hoofstep",3);
		LMDA CCDD 3 PM_DIChase();
		TNT1 A 0 A_Quake(1, 4, 0, 312);
		TNT1 A 0 A_StartSound("hoofstep",3);
		TNT1 A 0 A_Jump(15,"Phase");
        Loop;
	Phase:
		TNT1 A 0 A_SetSpeed(16);
        LMDA AABB 2 {
		A_SpawnItemEx("PM_GenericPhaseGhost",flags:SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERALPHA|SXF_TRANSFERSCALE|SXF_TRANSFERSTENCILCOL);
		A_FadeOut(0.1,0);
		A_Chase(null,null); }
		TNT1 A 0 A_Quake(1, 4, 0, 312);
		TNT1 A 0 A_StartSound("hoofstep",3);
		LMDA CCDD 2 {
		A_SpawnItemEx("PM_GenericPhaseGhost",flags:SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERALPHA|SXF_TRANSFERSCALE|SXF_TRANSFERSTENCILCOL);
		A_FadeOut(0.1,0);
		A_Chase(null,null); }
		TNT1 A 0 A_Quake(1, 4, 0, 312);
		TNT1 A 0 A_StartSound("hoofstep",3);
		TNT1 A 0 { if(alpha <= 0) SetStateLabel("PhaseSee"); }
		Loop;
	PhaseSee:
	    TNT1 A 0 PM_DemiPhaseTrans();
	PhaseSeeGo:
	    LMDA IIIIII 3 PM_DIPhaseChase();
		TNT1 A 0 A_Chase(null,"MinigunChoice",CHF_DONTMOVE|CHF_NOPLAYACTIVE);
		LMDA IIIIII 3 PM_DIPhaseChase();
		TNT1 A 0 A_Chase(null,"MinigunChoice",CHF_DONTMOVE|CHF_NOPLAYACTIVE);
		TNT1 A 0 A_Jump(30,"See2");
		Loop;
    Missile:
	    TNT1 A 0 { 
		if(random(1,3) == 1 && target && CheckSight(target) && Distance3D(target) < 300)
		SetStateLabel("Flamethrower");
		}
		TNT1 A 0 A_Jump(256,"SoulShotgun","MinigunPhase","Minigun");
		Goto Minigun;
	Flamethrower:
		TNT1 A 0;
		TNT1 A 0 { pm_attackloop = 80; }
		TNT1 A 0 A_StartSound("DEmi/Attack",25);
		TNT1 A 0 A_StartSound("Hectebus/Aim",24,pitch:0.75);
		LMDA EEEEEEEEEEEEEEEEEEEEEEEEEEE 1 Light("HellsFuryBall1") A_FaceTarget();
		TNT1 A 0 A_StartSound("Defiler/Breath",23,pitch:0.85);
	FTGo:
		LMDA FFF 1
		{
		if(pm_attackloop < 0)
		SetStateLabel("FTEnd");
		A_SpawnProjectile("PM_HFuryFirebreath",62,-25,frandom(-0.75,0.75),CMF_OFFSETPITCH,random(-1,1));
		A_SpawnProjectile("PM_HFuryFirebreath",62,25,frandom(-0.75,0.75),CMF_OFFSETPITCH,random(-1,1));
		A_FaceTarget();
		pm_attackloop--;
		}
		Loop;
	FTEnd:
		LMDA GFE 5 Light("HellsFuryBall2") A_FaceTarget();
		LMDA EEE 3 Light("HellsFuryBall2") A_FaceTarget();
		LMDA EEE 5 A_FaceTarget();
		Goto See2;	    
	SoulShotgun:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("DEmi/Attack",25);
		TNT1 A 0 A_StartSound("Hectebus/Aim",24,pitch:0.9);
		LMDA E 1 
		{ 
		if(rush)
		ThrustThing(random(0,128),16,0,0);
		A_FaceTarget();
		}
		LMDA EEEE 1 
		{
		if(rush)
		A_SpawnItemEx("PM_GenericPhaseGhost",xofs:-5,flags:SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE|SXF_TRANSFERSTENCILCOL);
		A_FaceTarget();
		}
		LMDA EEEEEEEEEEEEE 1 A_FaceTarget();
		TNT1 A 0 A_StartSound("Plasmatron/MortarFire",23);
		LMDA FFFFFFFFFFFF 0
		{
		A_SpawnProjectile("PM_AbhorSoulVomit",62,-25,random(-5,5),CMF_OFFSETPITCH,random(-3,3));
		A_SpawnProjectile("PM_AbhorSoulVomit",62,25,random(-5,5),CMF_OFFSETPITCH,random(-3,3));
		}
		LMDA FE 3 Light("HellsFuryBall2") A_FaceTarget();
		LMDA GE 3 Light("HellsFuryBall2") A_FaceTarget();
		LMDA EEE 7 A_FaceTarget();
		Goto See2;
	MinigunChoice:
		TNT1 A 0;
		TNT1 A 0 A_Jump(256,"Minigun","MinigunPhase");
		Goto Minigun;
	Minigun:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("DEmi/Attack",25);
	    TNT1 A 0 {
		if(phased)
		PM_DemiPhaseDeTrans();
		if(random(1,3) == 1)
		A_StartSound("DEmi/Attack",25);
		A_StartSound("DEmi/Windup",5); 
		A_StartSound("DComm/WARNING",6,volume:0.65,pitch:0.85);
		pm_attackloop = random(52,65);
		}
		LMDA E 2 Light("HellsFuryBall2") 
		{ 
		if(rush)
		ThrustThing(random(0,128),24,0,0);
		A_FaceTarget();
		}
	    LMDA EEEEE 1 Light("HellsFuryBall2") 
		{
		if(rush)
		A_SpawnItemEx("PM_GenericPhaseGhost",xofs:-5,flags:SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE|SXF_TRANSFERSTENCILCOL);
		A_FaceTarget();
		}
		LMDA E 8 Light("HellsFuryBall2")
		{
		if(random(1,3) == 1 && alpha < 1)
		for(int i=35;i>0;i--) A_Wander();
		}
		LMDA EEEEEEEEEEEEEEEEEEEEEE 1 Light("HellsFuryBall2") 
		{
		if(alpha < 1)
		A_FadeIn(0.1,0);
		A_FaceTarget();
		}
		LMDA E 1
		{
		A_FaceTarget();
		A_SetAngle(angle+random(-40,40));
		A_SetPitch(pitch+random(-15,50));
		}
		TNT1 A 0 A_StartSound("DEmi/Gunloop",11,CHANF_LOOPING);
		TNT1 A 0 A_StartSound("HPriest/SoulLoop",10,CHANF_LOOPING,volume:0.85,pitch:1.05,starttime:frandom(0.20,0.35));
		TNT1 A 0 A_StartSound("HPriest/SoulLoop",12,CHANF_LOOPING,volume:0.75,pitch:0.65,starttime:frandom(0.20,0.35));
	MinigunGo:
		LMDA E 1 Light("HellsFuryBall1");
		LMDA F 1 BRIGHT Light("HellsFuryBall2") 
			{
			if(random(8,45) == 1)
			SetStateLabel("MissileDodge");
			A_StartSound("DEmi/Fire",7);
			A_StartSound("GunnerRifleDistant",8,CHANF_OVERLAP);
			A_SpawnProjectile("PM_DEmiTracer",62,25,frandom(4, -4),CMF_OFFSETPITCH|CMF_AIMDIRECTION,pitch+frandom(-3,3)+1);
			A_SpawnProjectile("PM_DEmiTracer",62,-25,frandom(4, -4),CMF_OFFSETPITCH|CMF_AIMDIRECTION,pitch+frandom(-3,3)+1);
			}
		LMDA G 1 A_FaceTarget(6,4);
		TNT1 A 0 A_CheckSight("MinigunCDQuick");
		TNT1 A 0 { 	if(pm_attackloop < 0) SetStateLabel("MinigunCD"); pm_attackloop--; }
		Loop;
	MinigunPhase:
		TNT1 A 0 A_StartSound("DEmi/Attack",25);
		TNT1 A 0 A_StartSound("Abhor/Phase",26);
		TNT1 AAAAAA 0 A_SpawnProjectile("AbhorBallExplode",random(10,80),0,random(0,360),2,random(0,360));
		TNT1 A 0
		{
		pm_attackloop = random(52,65);
		if(phased)
		PM_DemiPhaseDeTrans();
		}
		TNT1 A 0
		{
		if(rush)
		ThrustThing(random(0,128),16,0,0);
		A_SpawnItemEx("PM_GenericPhaseGhost",xofs:-5,flags:SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE|SXF_TRANSFERSTENCILCOL);
		}
		LMDA WWWWWWWW 1 BRIGHT Light("HellsFuryBall2") 
		{
		A_SpawnProjectile("AbhorBallExplode",random(10,80),0,random(0,360),2,random(0,360));
		A_FaceTarget();
		}
		LMDA W 8 BRIGHT Light("HellsFuryBall2")
		{
		if(random(1,3) == 1 && alpha < 1)
		for(int i=35;i>0;i--) A_Wander();
		}
		LMDA WWWW 1 BRIGHT Light("HellsFuryBall2") 
		{
		if(alpha < 1)
		A_FadeIn(0.3,0);
		A_FaceTarget();
		}
		TNT1 A 0 A_StartSound("DEmi/Gunloop",11,CHANF_LOOPING);
	MinigunPhaseGo:
		TNT1 A 0 A_SetSpeed(6);
		LMDA W 1 BRIGHT Light("HellsFuryBall1")
			{
			PM_DemiPhaseShootSmoke();
			A_Wander();
			A_FaceTarget();
			}
		LMDA W 1 BRIGHT Light("HellsFuryBall2") 
			{
			if(random(8,45) == 1)
			SetStateLabel("MissileDodge");
			A_Wander();
			A_FaceTarget();
			A_StartSound("DEmi/Fire",7);
			A_StartSound("GunnerRifleDistant",8,CHANF_OVERLAP);
			PM_DemiPhaseShootSmoke();
			A_SpawnProjectile("PM_DEmiTracer",62,-25,frandom(5, -5),CMF_OFFSETPITCH,frandom(-5,5));
			}
		LMDA W 1 BRIGHT
		{
		PM_DemiPhaseShootSmoke();
		A_Wander();
		A_FaceTarget();
		}
		TNT1 A 0 A_CheckSight("MinigunPhaseCD");
		TNT1 A 0 { 	if(pm_attackloop < 0) SetStateLabel("MinigunPhaseCD"); pm_attackloop--; }
		LMDA W 1 BRIGHT Light("HellsFuryBall1")
			{
			PM_DemiPhaseShootSmoke();
			A_Wander();
			A_FaceTarget();
			}
		LMDA W 1 BRIGHT Light("HellsFuryBall2") 
			{
			if(random(8,45) == 1)
			SetStateLabel("MissileDodge");
			A_Wander();
			A_FaceTarget();
			A_StartSound("DEmi/Fire",7);
			A_StartSound("GunnerRifleDistant",8,CHANF_OVERLAP);
			PM_DemiPhaseShootSmoke();
			A_SpawnProjectile("PM_DEmiTracer",62,25,frandom(5, -5),CMF_OFFSETPITCH,frandom(-5,5));
			}
		LMDA W 1 BRIGHT
		{
		PM_DemiPhaseShootSmoke();
		A_Wander();
		A_FaceTarget();
		}
		TNT1 A 0 A_CheckSight("MinigunPhaseCD");
		TNT1 A 0 { 	if(pm_attackloop < 0) SetStateLabel("MinigunPhaseCD"); pm_attackloop--; }
		Loop;
	MinigunPhaseCD:
		TNT1 A 0 { A_StopSound(12); A_StopSound(11); A_StopSound(10); }
		TNT1 A 0 A_StartSound("GenericSteam",pitch:0.65);
		TNT1 AAAAAA 0 A_SpawnProjectile("AbhorBallExplode",random(10,80),0,random(0,360),2,random(0,360));
		Goto See2;
	MinigunCD:
		TNT1 A 0 { A_StopSound(12); A_StopSound(11); A_StopSound(10); }
		TNT1 A 0 A_StartSound("Broken/Railgun",5,volume:0.75,pitch:0.85);
		LMDA E 8;
		TNT1 A 0 A_StartSound("GenericSteam",pitch:0.65);
		LMDA EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 1
		{
		A_SpawnItemEx("PM_VentSmoke",20,25,53,frandom(2,-2),frandom(2,-2),frandom(1,3),flags:SXF_TRANSFERSTENCILCOL);
		A_SpawnItemEx("PM_VentSmoke",20,-25,53,frandom(2,-2),frandom(2,-2),frandom(1,3),flags:SXF_TRANSFERSTENCILCOL);
		}
		Goto See2;
	MinigunCDQuick:
		TNT1 A 0 { A_StopSound(12); A_StopSound(11); A_StopSound(10); }
		LMDA E 8;
		TNT1 A 0 A_StartSound("GenericSteam",pitch:0.65);
		LMDA EEE 1
		{
		A_SpawnItemEx("PM_VentSmoke",20,25,53,frandom(2,-2),frandom(2,-2),frandom(1,3),flags:SXF_TRANSFERSTENCILCOL);
		A_SpawnItemEx("PM_VentSmoke",20,-25,53,frandom(2,-2),frandom(2,-2),frandom(1,3),flags:SXF_TRANSFERSTENCILCOL);
		}
		Goto See2;
	MissileDodge:
	    TNT1 A 0 { A_StopSound(12); A_StopSound(11); A_StopSound(10); }
		TNT1 A 0 A_StartSound("Broken/Railgun",5,volume:0.75,pitch:0.85);
		LMDA E 5 Light("HellsFuryBall2") 
		{
		ThrustThing(random(0,128),30,0,0);
		A_FaceTarget(0.85,3,0,0);
		}
	    LMDA EEEEEEEEEE 1 Light("HellsFuryBall2") 
		{
		A_SpawnItemEx("PM_GenericPhaseGhost",xofs:-5,flags:SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE|SXF_TRANSFERSTENCILCOL);
		A_FaceTarget(0.85,3,0,0);
		}
		Goto See2;
    Pain:
		TNT1 A 0 {
		if(alpha < 1)
		A_FadeIn(1.0,0);
		A_StopSound(12); A_StopSound(11); A_StopSound(10); 
		}
		TNT1 A 0 A_Jump(45,"PainPhase");
		LMDA H 5;
        LMDA H 5 A_Pain;
        Goto See2;
	PainPhase:
	    TNT1 A 0 PM_DemiPhaseTrans();
		Goto Phase;
	XDeath:
    Death:
		TNT1 A 0 {
		if(alpha < 1)
		A_FadeIn(1.0,0);
		A_StopSounds(0,0);
		}
        LMDA K 5;
		LMDA L 9 A_Scream();
		LMDA M 6 A_Fall();
		TNT1 A 0 A_StartSound("Corpse/FallMetal",CHAN_6);
		LMDA NNOOPPQPPPPOO 4 PM_DIWither();
	DeathLoop:
	    LMDA OOOO 3 Light("PM_NightmareFlash")
		{
		PM_DIWither();
		deathwither--;
		}
		TNT1 A 0 { if(deathwither < 0) SetStateLabel("DeathEnd"); }
	    Loop;
	DeathEnd:
	    LMDA PPPQQQRRR 4 Light("PM_NightmareFlash")  { A_FadeOut(0.06,0); PM_DIWither(); PM_DIWitherBig(); }
		LMDA SSSTTTUUUVV 4 Light("PM_NightmareFlash")  { A_FadeOut(0.06,0); PM_DIWitherBig(); PM_DIWitherBig(); }
		LMDA V 1;
        Stop;
    }
}

Class PM_DEmiTracer : Actor
{
Default
{
 Projectile;
 +BLOODSPLATTER 
 +THRUGHOST
 +SEEKERMISSILE
 decal "PM_BulletHoleMedium";
 height 2;
 radius 2;
 speed 42;
 DamageFunction 9;
 scale 0.50;
 RenderStyle "Add";
 Alpha 0.60;
}
 override void PostBeginPlay()
 {
 Super.PostBeginPlay();
 tex[0] = TexMan.CheckForTexture("GNSMK0",TexMan.Type_Sprite);
 tex[1] = TexMan.CheckForTexture("SPKBC0",TexMan.Type_Sprite);
 tex[2] = TexMan.CheckForTexture("SPKBA0",TexMan.Type_Sprite);
 }
 
 TextureID tex[3];

States
{
	Spawn:
        TNT1 A 0;
		TNT1 A 0
		{
		A_SpawnParticleEx
			(
			"0B3D94",
			tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL,
			lifetime: random(10,200), size: frandom(10,50), xoff: -25,
			velx: frandom(0,2), vely: frandom(-0.4,0.4), velz: frandom(-0.4,0.7),
			startalphaf: frandom(0.45,0.85), fadestepf: -0.3, sizestep: frandom(0.0,1.4), 
			startroll: random(-180,180), rollvel: frandom(-1,1)
			);
			A_SpawnParticleEx
			(
			"",
			tex[1],
			style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: random(1,4),
			size: frandom(80,200), xoff: -34, startalphaf: 1.0,
			fadestepf: 0, startroll: random(-180,180)
			);
			for(int i=random(1,3);i>0;i--)
			A_SpawnParticleEx
			(
			"",
			tex[2],
			style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,
			lifetime: random(1,50), size: frandom(1,18), xoff: -22,
			velx: frandom(1,4), vely: frandom(-2,2), velz: frandom(-3,3),
			startalphaf: 1.0, fadestepf: -1, sizestep: frandom(-1,-0.1), startroll: random(-180,180)
			);
		}
	Go:
		TRCR A 1 BRIGHT A_Quake(1,4,0,100,0);
        TNT1 A 0 A_JumpIfTracerCloser(150,"Noise");
        Loop;
    Noise:
        TNT1 A 0 A_StartSound("PM/BulletWhiz",3,CHANF_DEFAULT,0.50);
    Cont:
        TRCR A 1 BRIGHT A_Quake(1,4,0,100,0);
        Loop;
	Death:
	    TNT1 A 0
		{
		 A_SpawnParticleEx
		 (
		 "",
		 tex[1],
		 style: STYLE_Add, flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, lifetime: random(2,8),
		 size: random(90,120), startalphaf: 0.95, fadestepf: -1, sizestep: -15, startroll: random(-180,180)
		 );
		 for(int i=random(2,5);i>0;i--)
		 A_SpawnParticleEx
		 (
		 "3d85c6",
		 tex[1], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
		 lifetime: random(10,55), size: frandom(5,15),
		 velx: frandom(-4,4), vely: frandom(-4,4), velz: frandom(-4,4),
		 accelz: frandom(-0.1,-0.9), startalphaf: frandom(0.45,0.95), fadestepf: -0.5,
		 sizestep: -0.5, startroll: random(-180,180)
		 );
		}
		TRCR A 0 A_StartSound("DEmi/TracerHit");
		Stop;
  XDeath:
     TNT1 A 0;
     TRCR A 0 A_StartSound("PM/BulletHitFlesh");
     stop;
  Crash:
    TRCR A 0 A_StartSound("DEmi/TracerHit");
    Stop;
	}
}


