Class PM_Director : PMUnaffMonsterBase
{
    int misangle2;
    int misangle;
    int attackmode; 
	//0 = Bullet
	//1 = Plasma
	//2 = Psychic
	Default
	{
		//$Category "PM_Monsters/Masterminds"
		//$Title "Director"
		Health 3000;
		Radius 128;
		Height 100;
		Mass 2000;
		Speed 12;
		PainChance 3;
		Monster;
		Scale 1.1;
		+DONTHARMSPECIES
		+DONTHARMCLASS
		+NOFEAR
		+DONTRIP
		+BOSS
		+MISSILEMORE
		+FLOORCLIP
		+NORADIUSDMG
		+DONTMORPH
		+BOSSDEATH
		SeeSound "Director/Sight";
		AttackSound "Director/Attack";
		PainSound "Director/Pain";
		DeathSound "Director/Death";
		Obituary "%o was utterly liquidated by the Director's arsenal.";
		Tag "Director";
		Species "Mastermind";
		+DONTHARMSPECIES
		+DONTHARMCLASS
		Scale 1.1;
		BloodType "PM_NormalTyrantBloodBase";
		TeleFogSourceType "PM_SmallDemonicTeleportFog";
		TeleFogDestType "PM_DemonicTeleportFog";
	}
	
	override void PostbeginPlay()
	{
	 Super.PostBeginPlay();
	 tex[0] = TexMan.CheckForTexture("LENYA0",TexMan.Type_Sprite);
	 tex[1] = TexMan.CheckForTexture("GNSMK0",TexMan.Type_Sprite);
	}
	
	TextureID tex[2];
	
	void PM_DirectorGAUSound()
	{
		A_StartSound("Director/GunStart",130);
		A_StartSound("Director/WindLoop",134,CHANF_LOOPING,pitch:0.85);
		A_StartSound("Bulltubus/IreWindLoop1",131,CHANF_LOOPING,0.75,attenuation:.7,pitch:1.85);
		A_StartSound("Bulltubus/IreWindLoop2",132,CHANF_LOOPING,0.75,attenuation:.7,pitch:1.25);
		A_StartSound("Bulltubus/IreGun",133,CHANF_LOOPING,1,.5,pitch:1.25);
	}
	
	States
	{
	Spawn:
	    TNT1 A 0 NoDelay { attackmode = 0; }
	Idle:
		DIRE A 10
		{
			A_StopSounds(129, 135);
			A_Look();
		}
		Loop;
	See:
		DIRE A 0 { A_StopSounds(129, 135); bNOPAIN = false; }
		DIRE A 7 A_Chase(flags:CHF_DONTMOVE);
		DIRE A 0 A_StartSound("Director/Servo",CHAN_5,CHANF_OVERLAP);
		DIRE ABBCC 5 A_Chase();
		DIRE A 0 A_Quake(2, 4, 0, 412);
		DIRE A 0 A_StartSound("Director/Step",CHAN_5,CHANF_OVERLAP);
		DIRE A 0 A_StartSound("Director/Stomp",25,CHANF_OVERLAP);
		DIRE D 7 A_Chase(flags:CHF_DONTMOVE);
		DIRE D 0 A_StartSound("Director/Servo",CHAN_5,CHANF_OVERLAP);
		DIRE DEEFF 5 A_Chase();
		DIRE A 0 A_Quake(2, 4, 0, 412);
		DIRE A 0 A_StartSound("Director/Step",CHAN_5,CHANF_OVERLAP);
		DIRE A 0 A_StartSound("Director/Stomp",25,CHANF_OVERLAP);
		Loop;
	Missile:
	    TNT1 A 0 
		{
		if(attackmode == 0)
		SetStateLabel("BulletMissile");
		}
		Goto See;
	BulletMissile:
	    TNT1 A 0 A_Jump(56,"ARM"); //All-Radial Missile
	    TNT1 A 0 A_Jump(95,"AirStrike");
		Goto GAU8;
	ARM:
	    TNT1 A 0 { misangle2 = 80; misangle = 15; pm_attackloop = 50; }
		DIRE G 0 
		{
		A_StartSound("Tyrant/ShellLoad",23);
		A_StartSound("Director/ASPodExtend",24);
		}
	    DIRE GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG 1 Light("TyrantFire") A_FaceTarget();
	ArmLoop:
	    DIRE G 3 Light("TyrantFire")
		{
		 if(pm_attackloop <= 0)
		 SetStateLabel("AttackEnd");
		 A_StartSound("Fiend/HomingFire",28);
		 A_SpawnProjectile("PM_DirectorMissile",95,0,-misangle,CMF_AIMDIRECTION|CMF_OFFSETPITCH,pitch-misangle2);
		 misangle += 20;
		 misangle2 -= 5;
		 pm_attackloop--;
		}
		Loop;
	AirStrike:
	    TNT1 A 0 { pm_attackloop = random(5,18); }
		DIRE G 0 A_StartSound("Director/ASPodExtend",24);
		DIRE GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG 1 Light("TyrantFire") A_FaceTarget();
	ASLoop:
	    DIRE G random(1,15) Light("TyrantFire")
		{
		 if(pm_attackloop <= 0)
		 SetStateLabel("AttackEnd");
		 A_FaceTarget(2,2);
		 A_StartSound("Director/AStrikeShot",20,CHANF_OVERLAP);
		 A_SpawnProjectile("PM_DirectorAStrikeShotTell",45,-25,frandom(40,60),CMF_AIMDIRECTION|CMF_OFFSETPITCH,frandom(-30,-55));
		}
		DIRE G random(1,15) Light("TyrantFire")
		{
		A_StartSound("Director/AStrikeShot",20,CHANF_OVERLAP);
		A_SpawnProjectile("PM_DirectorAStrikeShotTell",45,25,frandom(-40,-60),CMF_AIMDIRECTION|CMF_OFFSETPITCH,frandom(-30,-55));
		pm_attackloop--;
		}
		Loop;
	AttackEnd:
	    DIRE G random(45,65) A_FaceTarget(2,2);
		Goto See;
	GAU8:
	    TNT1 A 0;
	    TNT1 A 0 A_Jump(85,"GAUBurst");
		DIRE G 0 A_StartSound("Director/Screech",CHAN_VOICE);
		DIRE G 1 
		{
		A_SetAngle(angle+random(-30,30));
	    A_SetPitch(pitch+random(-15,30));
		}
		DIRE GGGGGGGGGGGGGGGGGGGGG 1 A_FaceTarget();
		DIRE G 0 A_StartSound("Director/WindUp",50,CHAN_OVERLAP,1);
		DIRE GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG 1 Light("TyrantFire") A_FaceTarget();
		DIRE G 0 Light("TyrantFire")
		{
			pm_attackloop = random(200, 400);
			PM_DirectorGAUSound();
		}
		DIRE HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH 2 Light("TyrantFire")
		{
			A_FaceTarget(2,2);
			A_Quake(random(1, 3), 10, 0, 1000);
			A_SpawnProjectile("PM_DirectorTracer",55,0,frandom(-2,2),CMF_AIMDIRECTION|CMF_OFFSETPITCH,pitch+frandom(-2,2));
		}
		DIRE G 0 Light("TyrantFire") A_StartSound("Director/GunLoop",134,CHANF_LOOPING);
		Goto GAULoop;
	GAULoop:
		DIRE H 2 Light("TyrantFire")
		{
			pm_attackloop--;
			A_FaceTarget(2, 2);
			A_Quake(random(1, 3), 10, 0, 1000);
			A_SpawnProjectile("PM_DirectorTracer",55,0,frandom(-2,2),CMF_AIMDIRECTION|CMF_OFFSETPITCH,pitch+frandom(-2,2));
			if (pm_attackloop <= 0) SetStateLabel("Cooldown");
			if (target && (!CheckSight(target) || target.Health <= 0)) SetStateLabel("Cooldown");
		}
		Loop;
	GAUBurst:
		DIRE G 0 A_StartSound("Director/Screech",CHAN_VOICE);
		DIRE G 1 
		{
		A_SetAngle(angle+random(-30,30));
	    A_SetPitch(pitch+random(-15,30));
		}
		DIRE GGGGGGGGGGGG 1 A_FaceTarget();
		DIRE G 0 A_StartSound("Director/WindUp",50,CHAN_OVERLAP,1);
		DIRE GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG 1 Light("TyrantFire") A_FaceTarget();
		DIRE G 0 Light("TyrantFire") PM_DirectorGAUSound();
		DIRE HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH 2 Light("TyrantFire")
		{
			A_FaceTarget(2,2);
			A_Quake(random(1, 3), 10, 0, 1000);
			A_SpawnProjectile("PM_DirectorTracer",55,0,frandom(-2,2),CMF_AIMDIRECTION|CMF_OFFSETPITCH,pitch+frandom(-2,2));
		}
		Goto Cooldown;
	Cooldown:
		TNT1 A 0 A_StartSound("Director/GunStop",20);
		DIRE A 1 A_StopSounds(129, 135);
		TNT1 A 0 A_StartSound("PM/ArachnoCooldown",21,attenuation:0.6,pitch:0.45);
		DIRE GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG 1
		{
			A_SpawnParticleEx
			( "", tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT,
			lifetime: 2, size: 130.0, xoff: 10, zoff: 50, startalphaf: 0.7 );
			A_SpawnParticleEx
			(
			"8a8a8a",
			tex[1], style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL,
			lifetime: random(20,100), size: frandom(80,150), xoff: random(16,20),
			yoff: random(-5,5), zoff: 50, velx: frandom(-0.8,4), vely: frandom(-0.8,0.8), velz: frandom(-0.8,0.8),
			startalphaf: 0.3, fadestepf: -0.5, sizestep: 0.2, startroll: random(-180,180) );
			A_SpawnParticleEx
			(
			"C8C8C8",
	        tex[1], style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL,
			lifetime: random(80,160), size: 6, xoff: 10, yoff: random(-5,5), zoff: 50,
			vely: frandom(16,22), velz: frandom(-0.2,0.3), accely: -0.4, startalphaf: 0.5,
			fadestepf: -1, sizestep: 5, startroll: random(-180,180) );
			A_SpawnParticleEx
			(
			"C8C8C8",
			tex[1], style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL,
	        lifetime: random(80,160), size: 6, xoff: 10, yoff: random(-5,5), zoff: 50,
			vely: frandom(-16,-22), velz: frandom(-0.2,0.3), accely: 0.4, startalphaf: 0.5, fadestepf: -1,
			sizestep: 5, startroll: random(-180,180) );
		}
		Goto See;
	/*NoAmmo:
		TNT1 A 0 A_StartSound("Director/GunEnd",CHAN_Weapon);
		DIRE A 20 A_StopSounds(129, 135);
		TNT1 A 0 A_StartSound("PM/ArachnoCooldown",attenuation:.6,pitch:.6);
		TNT1 A 0 A_StartSound("PM/BigVentLoop",130,CHANF_LOOP);
		DIRE GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG 1
		{
			A_SpawnParticleEx
			(
			"",
			TexMan.CheckForTexture("LENYA0"),
			style: STYLE_Add,
			flags: SPF_RELATIVE|SPF_FULLBRIGHT,
			lifetime: 2,
			size: 130.0,
			xoff: 10,
			zoff: 50,
			startalphaf: 0.7
			);
			A_SpawnParticleEx
			(
			"8a8a8a",
			TexMan.CheckForTexture("GNSMK0"),
			style: STYLE_Normal,
			flags: SPF_RELATIVE|SPF_ROLL,
			lifetime: random(20,100),
			size: frandom(80,150),
			xoff: random(16,20),
			yoff: random(-5,5),
			zoff: 50,
			velx: frandom(-0.8,4),
			vely: frandom(-0.8,0.8),
			velz: frandom(-0.8,0.8),
			startalphaf: 0.3,
			fadestepf: -0.5,
			sizestep: 0.2,
			startroll: random(-180,180)
			);
			A_SpawnParticleEx
			(
			"C8C8C8",
			TexMan.CheckForTexture("GNSMK0"),
			style: STYLE_Normal,
			flags: SPF_RELATIVE|SPF_ROLL,
			lifetime: random(80,160),
			size: 6,
			xoff: 10,
			yoff: random(-5,5),
			zoff: 50,
			vely: frandom(16,22),
			velz: frandom(-0.2,0.3),
			accely: -0.4,
			startalphaf: 0.5,
			fadestepf: -1,
			sizestep: 5,
			startroll: random(-180,180)
			);
			A_SpawnParticleEx
			(
			"C8C8C8",
			TexMan.CheckForTexture("GNSMK0"),
			style: STYLE_Normal,
			flags: SPF_RELATIVE|SPF_ROLL,
			lifetime: random(80,160),
			size: 6,
			xoff: 10,
			yoff: random(-5,5),
			zoff: 50,
			vely: frandom(-16,-22),
			velz: frandom(-0.2,0.3),
			accely: 0.4,
			startalphaf: 0.5,
			fadestepf: -1,
			sizestep: 5,
			startroll: random(-180,180)
			);
		}
		Goto See;*/
	Pain:
		DIRE I 5 A_StopSounds(130, 134);
		DIRE I 5 A_Pain();
		Goto See;
	Death:
		DIRE I 1;
		DIRE I 1 A_StopSounds(130, 134);
		DIRE I 10 A_Scream();
		DIRE J 6 A_StartSound("Director/DeathServo", CHAN_BODY);
		DIRE K 7 Light("TyrantMExp");
		DIRE L 0 A_StartSound("Director/Fall", 55);
		DIRE LM 7 Light("TyrantMExp");
		TNT1 A 0 A_SpawnItemEx("OFireBallExplode",random(-10,10),0,random(-10,10));
		DIRE N 3 Light("AvatarFireball4") A_SpawnItemEx("OrangeEmbersSpawn",0,0,30);
		TNT1 AAAAAAA 0 A_SpawnItemEx("PM_GenericExplosionFlames",frandom(-40, 40),frandom(-40, 40),50,random(-3,3),random(-3,3),random(-2,3),0,SXF_NOCHECKPOSITION);
		TNT1 A 0
		{

			A_StartSound("ArachChassisExplode",CHAN_5,attenuation:.5,pitch:.5);
			A_Quake(6, 15, 0, 1000);
			A_Quake(3, 35, 0, 2000);
		}
		TNT1 A 0 A_SpawnItemEx("OrangeEmbersSpawn",0,0,25);
		TNT1 A 0 A_SpawnItemEx("OFireBallExplode",random(-10,10),0,30);
		TNT1 AAAAA 0 A_SpawnItemEx("PM_ArachnotronGenericExplosionFlames",0,0,35,random(-7,7),random(-7,7),random(0,7));
		TNT1 A 0 A_NoBlocking();
		TNT1 AAAAAA 0 A_SpawnItemEx("PM_NormalMeatChunkLauncher",0,0,random(10,30),0,0,0,0,SXF_NOCHECKPOSITION);
		TNT1 A 0 A_SpawnItemEx("PM_NormalBloodyCloudBig",0,0,20,0,0,0,0,SXF_NOCHECKPOSITION);
		TNT1 AAAAA 0 A_SpawnItemEx("PM_NormalBigMeatChunkLauncher",0,0,random(10,30),0,0,0,0,SXF_NOCHECKPOSITION);
		TNT1 FFFFFFFFFFFFFFFFFFFF 0 A_SpawnItemEX("PM_ArachExpGoreSplash", 0, 0, 32, random (4, 10), random(4,10), random (4, 15), random(0, 360));
		TNT1 A 0 A_SpawnItemEx("PM_ArachExpMist",0,0,20);
		TNT1 A 0 A_StartSound("BigExplosionDistant",5,CHANF_DEFAULT,0.7);
		TNT1 A 0 A_StartSound("ArachExpGore",CHAN_6);
		DIRE N 6 Light("TyrantExp");
		TNT1 AAAAAA 0 A_SpawnProjectile("SmokePuff",random(24,40),0,random(0,360),2,random(0,360));
		DIRE OPQRSSSSSSSSSSSSSSSS 6 Light("TyrantExp") A_SpawnItemEX("PM_ArachExpGoreSplash", 0, 0, 15, random (-3, 3), random(-3,3), random (4, 15));
		DIRE S -1 A_BossDeath();
		Stop;
	}
}

Class PM_DirectorAStrikeShotTell : Actor
{
 int timer;
 int secondtimer;
 Default
 {
 Scale 1.1;
 Speed 60;
 RenderStyle "Add";
 Projectile;
 +BRIGHT
 +SKYEXPLODE
 +SEEKERMISSILE
 +THRUACTORS
 }
 
 override void PostBeginPlay()
 {
  Super.PostBeginPlay();
  timer = random(1,5);
  tex[0] = TexMan.CheckForTexture("LENRA0",TexMan.Type_Sprite);
  tex[1] = TexMan.CheckForTexture("BLHDA0",TexMan.Type_Sprite);
  tex[2] = TexMan.CheckForTexture("DUSTC0",TexMan.Type_Sprite);
 }
 
 TextureID tex[3];

 States
 {
  Spawn:
   TNT1 A 0;
   TNT1 A 0
   {
	A_SpawnParticleEx
	    ( "", tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
	    lifetime: 8, size: 100, xoff: -10, startalphaf: 1, startroll: random(-180,180) );
	A_SpawnParticleEx
	    ( "", tex[1], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,
	    lifetime: 20, size: 200, xoff: -10, startalphaf: 1, fadestepf: -1, sizestep: -25,
        startroll: random(-180,180) );
   }
   TRCR A 1
   {
   if(timer >= 8)
   SetStateLabel("TPAndSeek");
   timer++;
   }
   Wait;
   Crash:
   XDeath:
   Death:
   TPAndSeek:
   TNT1 A 0
   {
    A_SpawnItemEx("PM_PossessedTeleportFog",zofs:-10,flags:SXF_NOCHECKPOSITION);
	bFLOORHUGGER = true;
	bFLATSPRITE = true;
	bROLLSPRITE = true;
	A_SetScale(1.25,1.25);
	A_ScaleVelocity(0);
	A_FadeOut(1.0,FTF_CLAMP);
   }
   TNT1 A random(35,85);
   TNT1 A 0 
   { A_Warp(AAPTR_TRACER,random(-80,80),random(-80,80),0,random(0,360),WARPF_NOCHECKPOSITION);
     A_StartSound("Director/ASPreImpact",20); }
   SBLL A 1 Light("PM_TyrantFire")
   {
    if(secondtimer >= 50)
	SetStateLabel("Explode");
    A_FadeIn(0.095,FTF_CLAMP);
	A_SetRoll(random(0,360));
	A_QuakeEx(1,1,1,1,0,500,"",QF_RELATIVE|QF_SCALEDOWN|QF_3D,rollintensity:0.8,rollwave:0.8);
	A_SetScale(Scale.X+0.025,Scale.Y+0.025);
	secondtimer++;
   }
   Wait;
   Explode:
    TNT1 A 0
	{
	bFLATSPRITE = false;
	bROLLSPRITE = false;
	A_SetScale(0.17,0.17);
	A_QuakeEx(3,3,3,10,0,900,"",QF_RELATIVE|QF_SCALEDOWN|QF_3D,rollintensity:0.8,rollwave:0.8);
	A_Explode(30,200);
	A_StartSound("Noble/BombExp",21);
	A_StartSound("Noble/BombExpFar",22);
	A_StartSound("ZTrooper/FragExp",23);
	for(int i=3;i>0;i--)
	A_SpawnItemEx("PM_BigFireGlobs",0,0,0,random(-4,4),random(-4,4),random(-1,5),0,SXF_NOCHECKPOSITION);
	A_SpawnProjectile("PM_DarkExpSmoke",7,0,random(0,360),2,random(0,360));
	A_SpawnParticleEx
	    ( "", tex[0], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
	    lifetime: 8, size: 500, zoff: -15, startalphaf: 1, startroll: random(-180,180) );
	A_SpawnParticleEx
	    ( "", tex[1], style: STYLE_Add, flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,
	    lifetime: 20, size: 500, zoff: -15, startalphaf: 1, fadestepf: -1, sizestep: -25,
        startroll: random(-180,180) );
	for(int i=random(3,6);i>0;i--) A_SpawnParticleEx
	    ( "727272", tex[2], style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL,
	    lifetime: random(40,70), size: frandom(2,35), zoff: random(10,35),
	    velx: frandom(-8,8), vely: frandom(-8,8), velz: frandom(1,12),
	    accelz: frandom(-0.1,-0.9), startalphaf: 1.0, sizestep: -0.2, startroll: random(-180,180), rollvel: random(-4,4) );
	}
	DI_A AAAAAAAAAAAAAAAAAA 1
	{
	 A_FadeOut(0.3,FTF_CLAMP);
	 if(random(1,6) == 1)
	 A_SpawnProjectile("PM_DarkExpSmoke",7,0,random(0,360),2,random(0,360));
	}
	Stop;
   }
}

Class PM_DirectorMissile : TyrantStreamRocket
{
 int timer;
 Default
 {
  Speed 12;
  Scale 0.45;
  DamageFunction 20;
  SeeSound "";
  DeathSound "SmallMissileExplosion";
  +SEEKERMISSILE
 }
 States
 {
  Spawn:
   TYM3 A 1 Bright
   {
     if(timer > 30)
	 SetStateLabel("Go");
     A_SeekerMissile(1,3,SMF_PRECISE);
	 A_SpawnItemEx("CadMFireEffect",random(-1,1),random(-1,1),random(-1,1),0,0,0,0,128,0);
	 A_SpawnParticleEx
	 ( "", tex[1], style: STYLE_None, flags: SPF_ROLL|SPF_RELATIVE,
	 lifetime: random(20,45), size: 10.0, xoff: frandom(-2,-15), startalphaf: 0.8,
	 fadestepf: -1, sizestep: 0.3, startroll: random(-180,180), rollvel: frandom(-0.5,0.5) );
	 A_SpawnParticleEx
	 ( "", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT,
     lifetime: 2, size: frandom(20,80), xoff: -10, startalphaf: 0.6 );
	 timer++;
   }
   Loop;
  Go:
   TYM3 A 1 Bright
   {
	 A_SpawnItemEx("CadMFireEffect",random(-1,1),random(-1,1),random(-1,1),0,0,0,0,128,0);
	 A_SpawnParticleEx
	 ( "", tex[1], style: STYLE_None, flags: SPF_ROLL|SPF_RELATIVE,
	 lifetime: random(20,45), size: 10.0, xoff: frandom(-2,-15), startalphaf: 0.8,
	 fadestepf: -1, sizestep: 0.3, startroll: random(-180,180), rollvel: frandom(-0.5,0.5) );
	 A_SpawnParticleEx
	 ( "", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT,
     lifetime: 2, size: frandom(20,80), xoff: -10, startalphaf: 0.6 );
   }
   Wait;
  Death:
    TNT1 A 0 Radius_Quake (2, 54, 0, 10, 0);
	TNT1 A 0 A_SpawnItemEx("OFireBallExplode");
	TNT1 AAAAA 0 A_SpawnProjectile("FiendBallExplode",0,0,random(0,360),2,random(0,360));
	TNT1 A 15 BRIGHT Light("AvatarFireball5");
	Stop;
  }
}








