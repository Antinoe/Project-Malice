Class PM_Hangman : PMFodderMonsterBase
{
	Default
	{
		PMMonsterBase.CodexLore
		"At uncommon times, reanimated corpses of demons or fellow humans get put into numerous amounts of hell energy and transform into this heap mess of a living ceiling turret.
		
		Will spit bloody bile at a firerate of a chaingunner. Nothing else.";
		PMMonsterBase.ForgetThreshold 9999;
		Health 130;
		Radius 20;
		Height 56;
		Monster;
		+DONTTHRUST
		+CEILINGHUGGER
		+SPAWNCEILING
		+FLOORCLIP
		+NOGRAVITY
		+DONTFALL
		Speed 0;
		VSpeed 0;
		Tag "Hangman";
		Species "Traps";
		PainChance 75;
		SeeSound "PMHangman/Sight";
		PainSound "PMHangman/Charge";
		DeathSound "PMHangman/Death";
	}
	
	States
	{
	Spawn:
		HANG B 0 NoDelay { vel.z += 99999; }
		HANG B 0 A_JumpIf(CallACS("IsThisSky") == 1, "Nullify");
		Goto Idle;
	Idle:
		HANG B 10 PM_Look();
		HANG B 0 A_JumpIf(CallACS("IsThisSky") == 1, "Nullify");
		Loop;
	Look:
		HANG B 5 PM_LookingForPlayer();
		HANG B 0 A_JumpIf(CallACS("IsThisSky") == 1, "Nullify");
		Loop;
	Spotted:
		TNT1 A 0 A_Jump(128, "Roar", "MissileSee");
	Roar:
		HANG A 30
		{
			A_FaceTarget();
			PM_AlertSound();
		}
		Goto See;
	MissileSee:
		HANG A 0
		{
			A_FaceTarget();
			PM_AlertSound();
		}
		Goto Missile;
	See:
		HANG BA 10
		{
			A_FaceTarget();
			A_Chase(flags: CHF_DONTMOVE);
		}
		HANG B 0 A_JumpIf(CallACS("IsThisSky") == 1, "Nullify");
		Loop;
	Missile:
		HANG B 8 A_FaceTarget();
		HANG AAAAAAAAAAA 2
		{
			A_FaceTarget(8, 12);
			A_SpawnItemEx("MaliceBloodSplash",random(-5,5),random(-5,5),random(-5,5) + 32,random(-2,2),random(-2,2),random(0,3),0,SXF_NOCHECKPOSITION);
		}
		Goto MissileLoop;
	MissileLoop:
		HANG AB 4
		{
			A_FaceTarget(2, 4);
			A_SpawnProjectile("PM_HangmanSpit", 32, 0, frandom(-4, 4), CMF_AIMDIRECTION|CMF_OFFSETPITCH, pitch + frandom(-4, 4));
		}
		HANG B 0
		{
			if (target && !CheckSight(target)) SetStateLabel("See");
			if (target && target.health <= 0) SetStateLabel("See");
		}
		Loop;
	Pain:
		HANG A 3;
		HANG A 2 A_Pain();
		Goto See;
	Death:
		HANG A 5;
		HANG C 5
		{
			PM_Gib();
			A_ScreamAndUnblock();
			A_SpawnItemEx("PM_HangmanCorpse", flags: SXF_NOCHECKPOSITION);
		}
		HANG C -1;
		Stop;
	Raise:
		Stop;
	Nullify:
		TNT1 A 1;
		Stop;
	}
}

Class PM_HangmanSpit : DoomImpBall
{
	Default
	{
		DamageFunction 5;
		DamageType "Acid";
		Alpha 0.5;
		RenderStyle "Translucent";
		Speed 15;
		FastSpeed 25;
		Scale 0.45;
		Translation "0:255=%[0.00,0.00,0.00]:[1.61,0.28,0.09]";
		SeeSound "TaintedBloodFire";
		DeathSound "TaintedBloodExp";
		+ROLLSPRITE
		+ROLLCENTER
	}
	
	States
    {
	Spawn:
		VBAL A 0 NoDelay { if (!random(0, 2)) A_SpawnItemEx("MaliceBloodSplash",random(-5,5),random(-5,5),random(-5,5),random(-2,2),random(-2,2),random(0,3),0,SXF_NOCHECKPOSITION); }
		Goto Go;
	Go:
		VBAL AB 2 Bright 
		{
			A_SetRoll(random(0,360));
			A_SpawnParticleEx("f22b0a",TexMan.CheckForTexture("SPKRA0"),style: STYLE_Add,flags: SPF_ROLL|SPF_RELATIVE,lifetime: random(30, 60),size: frandom(5, 10),xoff: -10,velx: frandom(-2, 2),vely:frandom(-2, 2),velz:frandom(-2, 2),startalphaf: 1,fadestepf: -1,sizestep: -1,startroll: random(-180,180));
			A_SpawnParticleEx("cc290e",TexMan.CheckForTexture("GNSMK0"),style: STYLE_Normal,flags: SPF_ROLL|SPF_RELATIVE,lifetime: 70,size: 25.0,xoff: -10,startalphaf: frandom(.4,.65),sizestep:-1,startroll: random(-180,180));
		}
		Loop;
	Death:
		TNT1 AA 0 A_SpawnItemEx("PM_HostPoisonSplashSmall",random(-1,1),random(-1,1),random(-1,1),random(-2,2),random(-2,2),frandom(1,3),flags:SXF_TRANSFERTRANSLATION);
		TNT1 AAA 0 A_SpawnItemEx("MaliceBloodSplash",random(-5,5),random(-5,5),random(-5,5),random(-2,2),random(-2,2),random(0,3),0,SXF_NOCHECKPOSITION);
		Stop;
   }
}

Class PM_HangmanCorpse : Actor
{
    Default
	{
	Radius 10;
    Height 30;
	Speed 5;
	Gravity 0.65;
	+ROLLSPRITE
	+MISSILE
    +MOVEWITHSECTOR
	+ROLLCENTER
    +CLIENTSIDEONLY
    +NOBLOCKMAP
    +NOTELEPORT
	+THRUACTORS
	}
	
	double rollv;
	
	override void PostBeginPlay()
	{
		super.PostBeginPlay();
		rollv = frandom(-15, 15);
	}
	
	States
	{
	Spawn:
		HANG D 2
		{
			A_SetRoll(roll+rollv,SPF_INTERPOLATE);
			A_SpawnItemEx("MaliceBloodSplash",random(-5,5),random(-5,5),random(-5,5),random(-2,2),random(-2,2),random(0,3),0,SXF_NOCHECKPOSITION);
		}
		Loop;
	Death:
		D3IM P 1
		{
		 roll = 0;
		 A_SpawnItemEx("PM_NormalBloodyCloud",0,0,20,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY);
		 for(int gib=0; gib<5; gib++){A_SpawnItemEx("PM_NormalMeatChunkLauncher",0,0,random(10,30),0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY);}
		 A_SpawnItemEx("PM_NormalInstestinGib",0,0,32,random(-10,10),random(-10,10),random(-10,10),frandom(0,360),SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY);
		  A_StartSound("ArachExpGore",CHAN_6,CHANF_DEFAULT,0.65);
		  A_StartSound("GBloodSplashBig",CHAN_7,CHANF_DEFAULT,0.75);
		 A_SetScale(1.05, 0.75);
		}
		D3IM PQRST 4;
		D3IM U -1;
		Stop;
	}
}